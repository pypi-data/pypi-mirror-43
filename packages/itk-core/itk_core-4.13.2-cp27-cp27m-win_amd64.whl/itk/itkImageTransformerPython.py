# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkImageTransformerPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkImageTransformerPython', [dirname(__file__)])
        except ImportError:
            import _itkImageTransformerPython
            return _itkImageTransformerPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkImageTransformerPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkImageTransformerPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkImageTransformerPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import pyBasePython
import ITKCommonBasePython
import itkVectorImagePython
import itkImagePython
import stdcomplexPython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkVariableLengthVectorPython

def itkImageTransformerVIF3_New():
  return itkImageTransformerVIF3.New()


def itkImageTransformerVIUS3_New():
  return itkImageTransformerVIUS3.New()


def itkImageTransformerVIUC3_New():
  return itkImageTransformerVIUC3.New()


def itkImageTransformerVISS3_New():
  return itkImageTransformerVISS3.New()


def itkImageTransformerVIF2_New():
  return itkImageTransformerVIF2.New()


def itkImageTransformerVIUS2_New():
  return itkImageTransformerVIUS2.New()


def itkImageTransformerVIUC2_New():
  return itkImageTransformerVIUC2.New()


def itkImageTransformerVISS2_New():
  return itkImageTransformerVISS2.New()


def itkImageTransformerICF3_New():
  return itkImageTransformerICF3.New()


def itkImageTransformerICF2_New():
  return itkImageTransformerICF2.New()


def itkImageTransformerIF3_New():
  return itkImageTransformerIF3.New()


def itkImageTransformerIF2_New():
  return itkImageTransformerIF2.New()


def itkImageTransformerIUS3_New():
  return itkImageTransformerIUS3.New()


def itkImageTransformerIUS2_New():
  return itkImageTransformerIUS2.New()


def itkImageTransformerIUC3_New():
  return itkImageTransformerIUC3.New()


def itkImageTransformerIUC2_New():
  return itkImageTransformerIUC2.New()


def itkImageTransformerISS3_New():
  return itkImageTransformerISS3.New()


def itkImageTransformerISS2_New():
  return itkImageTransformerISS2.New()


def itkImageTransformerICVF43_New():
  return itkImageTransformerICVF43.New()


def itkImageTransformerICVF42_New():
  return itkImageTransformerICVF42.New()


def itkImageTransformerICVF33_New():
  return itkImageTransformerICVF33.New()


def itkImageTransformerICVF32_New():
  return itkImageTransformerICVF32.New()


def itkImageTransformerICVF23_New():
  return itkImageTransformerICVF23.New()


def itkImageTransformerICVF22_New():
  return itkImageTransformerICVF22.New()


def itkImageTransformerIVF43_New():
  return itkImageTransformerIVF43.New()


def itkImageTransformerIVF42_New():
  return itkImageTransformerIVF42.New()


def itkImageTransformerIVF33_New():
  return itkImageTransformerIVF33.New()


def itkImageTransformerIVF32_New():
  return itkImageTransformerIVF32.New()


def itkImageTransformerIVF23_New():
  return itkImageTransformerIVF23.New()


def itkImageTransformerIVF22_New():
  return itkImageTransformerIVF22.New()


def itkImageTransformerIRGBAUC3_New():
  return itkImageTransformerIRGBAUC3.New()


def itkImageTransformerIRGBAUC2_New():
  return itkImageTransformerIRGBAUC2.New()


def itkImageTransformerIRGBUC3_New():
  return itkImageTransformerIRGBUC3.New()


def itkImageTransformerIRGBUC2_New():
  return itkImageTransformerIRGBUC2.New()

class itkImageTransformerICF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerICF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerICF2 self, itkImageCF2 image)
        SetInput(itkImageTransformerICF2 self, unsigned int arg0, itkImageCF2 image)
        """
        return _itkImageTransformerPython.itkImageTransformerICF2_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerICF2 self) -> itkImageCF2
        GetInput(itkImageTransformerICF2 self) -> itkImageCF2
        GetInput(itkImageTransformerICF2 self, unsigned int idx) -> itkImageCF2
        """
        return _itkImageTransformerPython.itkImageTransformerICF2_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerICF2 self, itkImageCF2 image)"""
        return _itkImageTransformerPython.itkImageTransformerICF2_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerICF2 self)"""
        return _itkImageTransformerPython.itkImageTransformerICF2_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerICF2 self, itkImageCF2 image)"""
        return _itkImageTransformerPython.itkImageTransformerICF2_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerICF2 self)"""
        return _itkImageTransformerPython.itkImageTransformerICF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerICF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerICF2"""
        return _itkImageTransformerPython.itkImageTransformerICF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerICF2 self) -> itkImageTransformerICF2"""
        return _itkImageTransformerPython.itkImageTransformerICF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerICF2

        Create a new object of the class itkImageTransformerICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerICF2.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF2_SetInput, None, itkImageTransformerICF2)
itkImageTransformerICF2.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF2_GetInput, None, itkImageTransformerICF2)
itkImageTransformerICF2.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF2_PushBackInput, None, itkImageTransformerICF2)
itkImageTransformerICF2.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF2_PopBackInput, None, itkImageTransformerICF2)
itkImageTransformerICF2.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF2_PushFrontInput, None, itkImageTransformerICF2)
itkImageTransformerICF2.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF2_PopFrontInput, None, itkImageTransformerICF2)
itkImageTransformerICF2.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF2_GetPointer, None, itkImageTransformerICF2)
itkImageTransformerICF2_swigregister = _itkImageTransformerPython.itkImageTransformerICF2_swigregister
itkImageTransformerICF2_swigregister(itkImageTransformerICF2)

def itkImageTransformerICF2_cast(obj):
    """itkImageTransformerICF2_cast(itkLightObject obj) -> itkImageTransformerICF2"""
    return _itkImageTransformerPython.itkImageTransformerICF2_cast(obj)

class itkImageTransformerICF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerICF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerICF3 self, itkImageCF3 image)
        SetInput(itkImageTransformerICF3 self, unsigned int arg0, itkImageCF3 image)
        """
        return _itkImageTransformerPython.itkImageTransformerICF3_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerICF3 self) -> itkImageCF3
        GetInput(itkImageTransformerICF3 self) -> itkImageCF3
        GetInput(itkImageTransformerICF3 self, unsigned int idx) -> itkImageCF3
        """
        return _itkImageTransformerPython.itkImageTransformerICF3_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerICF3 self, itkImageCF3 image)"""
        return _itkImageTransformerPython.itkImageTransformerICF3_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerICF3 self)"""
        return _itkImageTransformerPython.itkImageTransformerICF3_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerICF3 self, itkImageCF3 image)"""
        return _itkImageTransformerPython.itkImageTransformerICF3_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerICF3 self)"""
        return _itkImageTransformerPython.itkImageTransformerICF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerICF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerICF3"""
        return _itkImageTransformerPython.itkImageTransformerICF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerICF3 self) -> itkImageTransformerICF3"""
        return _itkImageTransformerPython.itkImageTransformerICF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerICF3

        Create a new object of the class itkImageTransformerICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerICF3.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF3_SetInput, None, itkImageTransformerICF3)
itkImageTransformerICF3.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF3_GetInput, None, itkImageTransformerICF3)
itkImageTransformerICF3.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF3_PushBackInput, None, itkImageTransformerICF3)
itkImageTransformerICF3.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF3_PopBackInput, None, itkImageTransformerICF3)
itkImageTransformerICF3.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF3_PushFrontInput, None, itkImageTransformerICF3)
itkImageTransformerICF3.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF3_PopFrontInput, None, itkImageTransformerICF3)
itkImageTransformerICF3.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICF3_GetPointer, None, itkImageTransformerICF3)
itkImageTransformerICF3_swigregister = _itkImageTransformerPython.itkImageTransformerICF3_swigregister
itkImageTransformerICF3_swigregister(itkImageTransformerICF3)

def itkImageTransformerICF3_cast(obj):
    """itkImageTransformerICF3_cast(itkLightObject obj) -> itkImageTransformerICF3"""
    return _itkImageTransformerPython.itkImageTransformerICF3_cast(obj)

class itkImageTransformerICVF22(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerICVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerICVF22 self, itkImageCVF22 image)
        SetInput(itkImageTransformerICVF22 self, unsigned int arg0, itkImageCVF22 image)
        """
        return _itkImageTransformerPython.itkImageTransformerICVF22_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerICVF22 self) -> itkImageCVF22
        GetInput(itkImageTransformerICVF22 self) -> itkImageCVF22
        GetInput(itkImageTransformerICVF22 self, unsigned int idx) -> itkImageCVF22
        """
        return _itkImageTransformerPython.itkImageTransformerICVF22_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerICVF22 self, itkImageCVF22 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF22_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerICVF22 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF22_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerICVF22 self, itkImageCVF22 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF22_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerICVF22 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerICVF22

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerICVF22"""
        return _itkImageTransformerPython.itkImageTransformerICVF22_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerICVF22 self) -> itkImageTransformerICVF22"""
        return _itkImageTransformerPython.itkImageTransformerICVF22_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerICVF22

        Create a new object of the class itkImageTransformerICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerICVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerICVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerICVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerICVF22.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF22_SetInput, None, itkImageTransformerICVF22)
itkImageTransformerICVF22.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF22_GetInput, None, itkImageTransformerICVF22)
itkImageTransformerICVF22.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF22_PushBackInput, None, itkImageTransformerICVF22)
itkImageTransformerICVF22.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF22_PopBackInput, None, itkImageTransformerICVF22)
itkImageTransformerICVF22.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF22_PushFrontInput, None, itkImageTransformerICVF22)
itkImageTransformerICVF22.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF22_PopFrontInput, None, itkImageTransformerICVF22)
itkImageTransformerICVF22.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF22_GetPointer, None, itkImageTransformerICVF22)
itkImageTransformerICVF22_swigregister = _itkImageTransformerPython.itkImageTransformerICVF22_swigregister
itkImageTransformerICVF22_swigregister(itkImageTransformerICVF22)

def itkImageTransformerICVF22_cast(obj):
    """itkImageTransformerICVF22_cast(itkLightObject obj) -> itkImageTransformerICVF22"""
    return _itkImageTransformerPython.itkImageTransformerICVF22_cast(obj)

class itkImageTransformerICVF23(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerICVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerICVF23 self, itkImageCVF23 image)
        SetInput(itkImageTransformerICVF23 self, unsigned int arg0, itkImageCVF23 image)
        """
        return _itkImageTransformerPython.itkImageTransformerICVF23_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerICVF23 self) -> itkImageCVF23
        GetInput(itkImageTransformerICVF23 self) -> itkImageCVF23
        GetInput(itkImageTransformerICVF23 self, unsigned int idx) -> itkImageCVF23
        """
        return _itkImageTransformerPython.itkImageTransformerICVF23_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerICVF23 self, itkImageCVF23 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF23_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerICVF23 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF23_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerICVF23 self, itkImageCVF23 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF23_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerICVF23 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF23_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerICVF23

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerICVF23"""
        return _itkImageTransformerPython.itkImageTransformerICVF23_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerICVF23 self) -> itkImageTransformerICVF23"""
        return _itkImageTransformerPython.itkImageTransformerICVF23_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerICVF23

        Create a new object of the class itkImageTransformerICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerICVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerICVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerICVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerICVF23.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF23_SetInput, None, itkImageTransformerICVF23)
itkImageTransformerICVF23.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF23_GetInput, None, itkImageTransformerICVF23)
itkImageTransformerICVF23.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF23_PushBackInput, None, itkImageTransformerICVF23)
itkImageTransformerICVF23.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF23_PopBackInput, None, itkImageTransformerICVF23)
itkImageTransformerICVF23.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF23_PushFrontInput, None, itkImageTransformerICVF23)
itkImageTransformerICVF23.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF23_PopFrontInput, None, itkImageTransformerICVF23)
itkImageTransformerICVF23.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF23_GetPointer, None, itkImageTransformerICVF23)
itkImageTransformerICVF23_swigregister = _itkImageTransformerPython.itkImageTransformerICVF23_swigregister
itkImageTransformerICVF23_swigregister(itkImageTransformerICVF23)

def itkImageTransformerICVF23_cast(obj):
    """itkImageTransformerICVF23_cast(itkLightObject obj) -> itkImageTransformerICVF23"""
    return _itkImageTransformerPython.itkImageTransformerICVF23_cast(obj)

class itkImageTransformerICVF32(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerICVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerICVF32 self, itkImageCVF32 image)
        SetInput(itkImageTransformerICVF32 self, unsigned int arg0, itkImageCVF32 image)
        """
        return _itkImageTransformerPython.itkImageTransformerICVF32_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerICVF32 self) -> itkImageCVF32
        GetInput(itkImageTransformerICVF32 self) -> itkImageCVF32
        GetInput(itkImageTransformerICVF32 self, unsigned int idx) -> itkImageCVF32
        """
        return _itkImageTransformerPython.itkImageTransformerICVF32_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerICVF32 self, itkImageCVF32 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF32_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerICVF32 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF32_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerICVF32 self, itkImageCVF32 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF32_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerICVF32 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF32_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerICVF32

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerICVF32"""
        return _itkImageTransformerPython.itkImageTransformerICVF32_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerICVF32 self) -> itkImageTransformerICVF32"""
        return _itkImageTransformerPython.itkImageTransformerICVF32_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerICVF32

        Create a new object of the class itkImageTransformerICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerICVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerICVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerICVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerICVF32.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF32_SetInput, None, itkImageTransformerICVF32)
itkImageTransformerICVF32.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF32_GetInput, None, itkImageTransformerICVF32)
itkImageTransformerICVF32.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF32_PushBackInput, None, itkImageTransformerICVF32)
itkImageTransformerICVF32.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF32_PopBackInput, None, itkImageTransformerICVF32)
itkImageTransformerICVF32.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF32_PushFrontInput, None, itkImageTransformerICVF32)
itkImageTransformerICVF32.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF32_PopFrontInput, None, itkImageTransformerICVF32)
itkImageTransformerICVF32.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF32_GetPointer, None, itkImageTransformerICVF32)
itkImageTransformerICVF32_swigregister = _itkImageTransformerPython.itkImageTransformerICVF32_swigregister
itkImageTransformerICVF32_swigregister(itkImageTransformerICVF32)

def itkImageTransformerICVF32_cast(obj):
    """itkImageTransformerICVF32_cast(itkLightObject obj) -> itkImageTransformerICVF32"""
    return _itkImageTransformerPython.itkImageTransformerICVF32_cast(obj)

class itkImageTransformerICVF33(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerICVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerICVF33 self, itkImageCVF33 image)
        SetInput(itkImageTransformerICVF33 self, unsigned int arg0, itkImageCVF33 image)
        """
        return _itkImageTransformerPython.itkImageTransformerICVF33_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerICVF33 self) -> itkImageCVF33
        GetInput(itkImageTransformerICVF33 self) -> itkImageCVF33
        GetInput(itkImageTransformerICVF33 self, unsigned int idx) -> itkImageCVF33
        """
        return _itkImageTransformerPython.itkImageTransformerICVF33_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerICVF33 self, itkImageCVF33 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF33_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerICVF33 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF33_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerICVF33 self, itkImageCVF33 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF33_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerICVF33 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerICVF33

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerICVF33"""
        return _itkImageTransformerPython.itkImageTransformerICVF33_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerICVF33 self) -> itkImageTransformerICVF33"""
        return _itkImageTransformerPython.itkImageTransformerICVF33_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerICVF33

        Create a new object of the class itkImageTransformerICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerICVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerICVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerICVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerICVF33.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF33_SetInput, None, itkImageTransformerICVF33)
itkImageTransformerICVF33.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF33_GetInput, None, itkImageTransformerICVF33)
itkImageTransformerICVF33.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF33_PushBackInput, None, itkImageTransformerICVF33)
itkImageTransformerICVF33.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF33_PopBackInput, None, itkImageTransformerICVF33)
itkImageTransformerICVF33.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF33_PushFrontInput, None, itkImageTransformerICVF33)
itkImageTransformerICVF33.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF33_PopFrontInput, None, itkImageTransformerICVF33)
itkImageTransformerICVF33.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF33_GetPointer, None, itkImageTransformerICVF33)
itkImageTransformerICVF33_swigregister = _itkImageTransformerPython.itkImageTransformerICVF33_swigregister
itkImageTransformerICVF33_swigregister(itkImageTransformerICVF33)

def itkImageTransformerICVF33_cast(obj):
    """itkImageTransformerICVF33_cast(itkLightObject obj) -> itkImageTransformerICVF33"""
    return _itkImageTransformerPython.itkImageTransformerICVF33_cast(obj)

class itkImageTransformerICVF42(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerICVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerICVF42 self, itkImageCVF42 image)
        SetInput(itkImageTransformerICVF42 self, unsigned int arg0, itkImageCVF42 image)
        """
        return _itkImageTransformerPython.itkImageTransformerICVF42_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerICVF42 self) -> itkImageCVF42
        GetInput(itkImageTransformerICVF42 self) -> itkImageCVF42
        GetInput(itkImageTransformerICVF42 self, unsigned int idx) -> itkImageCVF42
        """
        return _itkImageTransformerPython.itkImageTransformerICVF42_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerICVF42 self, itkImageCVF42 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF42_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerICVF42 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF42_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerICVF42 self, itkImageCVF42 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF42_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerICVF42 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF42_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerICVF42

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerICVF42"""
        return _itkImageTransformerPython.itkImageTransformerICVF42_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerICVF42 self) -> itkImageTransformerICVF42"""
        return _itkImageTransformerPython.itkImageTransformerICVF42_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerICVF42

        Create a new object of the class itkImageTransformerICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerICVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerICVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerICVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerICVF42.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF42_SetInput, None, itkImageTransformerICVF42)
itkImageTransformerICVF42.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF42_GetInput, None, itkImageTransformerICVF42)
itkImageTransformerICVF42.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF42_PushBackInput, None, itkImageTransformerICVF42)
itkImageTransformerICVF42.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF42_PopBackInput, None, itkImageTransformerICVF42)
itkImageTransformerICVF42.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF42_PushFrontInput, None, itkImageTransformerICVF42)
itkImageTransformerICVF42.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF42_PopFrontInput, None, itkImageTransformerICVF42)
itkImageTransformerICVF42.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF42_GetPointer, None, itkImageTransformerICVF42)
itkImageTransformerICVF42_swigregister = _itkImageTransformerPython.itkImageTransformerICVF42_swigregister
itkImageTransformerICVF42_swigregister(itkImageTransformerICVF42)

def itkImageTransformerICVF42_cast(obj):
    """itkImageTransformerICVF42_cast(itkLightObject obj) -> itkImageTransformerICVF42"""
    return _itkImageTransformerPython.itkImageTransformerICVF42_cast(obj)

class itkImageTransformerICVF43(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerICVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerICVF43 self, itkImageCVF43 image)
        SetInput(itkImageTransformerICVF43 self, unsigned int arg0, itkImageCVF43 image)
        """
        return _itkImageTransformerPython.itkImageTransformerICVF43_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerICVF43 self) -> itkImageCVF43
        GetInput(itkImageTransformerICVF43 self) -> itkImageCVF43
        GetInput(itkImageTransformerICVF43 self, unsigned int idx) -> itkImageCVF43
        """
        return _itkImageTransformerPython.itkImageTransformerICVF43_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerICVF43 self, itkImageCVF43 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF43_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerICVF43 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF43_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerICVF43 self, itkImageCVF43 image)"""
        return _itkImageTransformerPython.itkImageTransformerICVF43_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerICVF43 self)"""
        return _itkImageTransformerPython.itkImageTransformerICVF43_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerICVF43

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerICVF43"""
        return _itkImageTransformerPython.itkImageTransformerICVF43_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerICVF43 self) -> itkImageTransformerICVF43"""
        return _itkImageTransformerPython.itkImageTransformerICVF43_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerICVF43

        Create a new object of the class itkImageTransformerICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerICVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerICVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerICVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerICVF43.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF43_SetInput, None, itkImageTransformerICVF43)
itkImageTransformerICVF43.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF43_GetInput, None, itkImageTransformerICVF43)
itkImageTransformerICVF43.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF43_PushBackInput, None, itkImageTransformerICVF43)
itkImageTransformerICVF43.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF43_PopBackInput, None, itkImageTransformerICVF43)
itkImageTransformerICVF43.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF43_PushFrontInput, None, itkImageTransformerICVF43)
itkImageTransformerICVF43.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF43_PopFrontInput, None, itkImageTransformerICVF43)
itkImageTransformerICVF43.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerICVF43_GetPointer, None, itkImageTransformerICVF43)
itkImageTransformerICVF43_swigregister = _itkImageTransformerPython.itkImageTransformerICVF43_swigregister
itkImageTransformerICVF43_swigregister(itkImageTransformerICVF43)

def itkImageTransformerICVF43_cast(obj):
    """itkImageTransformerICVF43_cast(itkLightObject obj) -> itkImageTransformerICVF43"""
    return _itkImageTransformerPython.itkImageTransformerICVF43_cast(obj)

class itkImageTransformerIF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIF2 self, itkImageF2 image)
        SetInput(itkImageTransformerIF2 self, unsigned int arg0, itkImageF2 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIF2_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIF2 self) -> itkImageF2
        GetInput(itkImageTransformerIF2 self) -> itkImageF2
        GetInput(itkImageTransformerIF2 self, unsigned int idx) -> itkImageF2
        """
        return _itkImageTransformerPython.itkImageTransformerIF2_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIF2 self, itkImageF2 image)"""
        return _itkImageTransformerPython.itkImageTransformerIF2_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIF2 self)"""
        return _itkImageTransformerPython.itkImageTransformerIF2_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIF2 self, itkImageF2 image)"""
        return _itkImageTransformerPython.itkImageTransformerIF2_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIF2 self)"""
        return _itkImageTransformerPython.itkImageTransformerIF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIF2"""
        return _itkImageTransformerPython.itkImageTransformerIF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIF2 self) -> itkImageTransformerIF2"""
        return _itkImageTransformerPython.itkImageTransformerIF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIF2

        Create a new object of the class itkImageTransformerIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIF2.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF2_SetInput, None, itkImageTransformerIF2)
itkImageTransformerIF2.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF2_GetInput, None, itkImageTransformerIF2)
itkImageTransformerIF2.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF2_PushBackInput, None, itkImageTransformerIF2)
itkImageTransformerIF2.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF2_PopBackInput, None, itkImageTransformerIF2)
itkImageTransformerIF2.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF2_PushFrontInput, None, itkImageTransformerIF2)
itkImageTransformerIF2.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF2_PopFrontInput, None, itkImageTransformerIF2)
itkImageTransformerIF2.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF2_GetPointer, None, itkImageTransformerIF2)
itkImageTransformerIF2_swigregister = _itkImageTransformerPython.itkImageTransformerIF2_swigregister
itkImageTransformerIF2_swigregister(itkImageTransformerIF2)

def itkImageTransformerIF2_cast(obj):
    """itkImageTransformerIF2_cast(itkLightObject obj) -> itkImageTransformerIF2"""
    return _itkImageTransformerPython.itkImageTransformerIF2_cast(obj)

class itkImageTransformerIF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIF3 self, itkImageF3 image)
        SetInput(itkImageTransformerIF3 self, unsigned int arg0, itkImageF3 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIF3_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIF3 self) -> itkImageF3
        GetInput(itkImageTransformerIF3 self) -> itkImageF3
        GetInput(itkImageTransformerIF3 self, unsigned int idx) -> itkImageF3
        """
        return _itkImageTransformerPython.itkImageTransformerIF3_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIF3 self, itkImageF3 image)"""
        return _itkImageTransformerPython.itkImageTransformerIF3_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIF3 self)"""
        return _itkImageTransformerPython.itkImageTransformerIF3_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIF3 self, itkImageF3 image)"""
        return _itkImageTransformerPython.itkImageTransformerIF3_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIF3 self)"""
        return _itkImageTransformerPython.itkImageTransformerIF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIF3"""
        return _itkImageTransformerPython.itkImageTransformerIF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIF3 self) -> itkImageTransformerIF3"""
        return _itkImageTransformerPython.itkImageTransformerIF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIF3

        Create a new object of the class itkImageTransformerIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIF3.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF3_SetInput, None, itkImageTransformerIF3)
itkImageTransformerIF3.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF3_GetInput, None, itkImageTransformerIF3)
itkImageTransformerIF3.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF3_PushBackInput, None, itkImageTransformerIF3)
itkImageTransformerIF3.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF3_PopBackInput, None, itkImageTransformerIF3)
itkImageTransformerIF3.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF3_PushFrontInput, None, itkImageTransformerIF3)
itkImageTransformerIF3.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF3_PopFrontInput, None, itkImageTransformerIF3)
itkImageTransformerIF3.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIF3_GetPointer, None, itkImageTransformerIF3)
itkImageTransformerIF3_swigregister = _itkImageTransformerPython.itkImageTransformerIF3_swigregister
itkImageTransformerIF3_swigregister(itkImageTransformerIF3)

def itkImageTransformerIF3_cast(obj):
    """itkImageTransformerIF3_cast(itkLightObject obj) -> itkImageTransformerIF3"""
    return _itkImageTransformerPython.itkImageTransformerIF3_cast(obj)

class itkImageTransformerIRGBAUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIRGBAUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIRGBAUC2 self, itkImageRGBAUC2 image)
        SetInput(itkImageTransformerIRGBAUC2 self, unsigned int arg0, itkImageRGBAUC2 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC2_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIRGBAUC2 self) -> itkImageRGBAUC2
        GetInput(itkImageTransformerIRGBAUC2 self) -> itkImageRGBAUC2
        GetInput(itkImageTransformerIRGBAUC2 self, unsigned int idx) -> itkImageRGBAUC2
        """
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC2_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIRGBAUC2 self, itkImageRGBAUC2 image)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC2_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIRGBAUC2 self)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC2_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIRGBAUC2 self, itkImageRGBAUC2 image)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC2_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIRGBAUC2 self)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIRGBAUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIRGBAUC2"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIRGBAUC2 self) -> itkImageTransformerIRGBAUC2"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIRGBAUC2

        Create a new object of the class itkImageTransformerIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIRGBAUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIRGBAUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIRGBAUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIRGBAUC2.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC2_SetInput, None, itkImageTransformerIRGBAUC2)
itkImageTransformerIRGBAUC2.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC2_GetInput, None, itkImageTransformerIRGBAUC2)
itkImageTransformerIRGBAUC2.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC2_PushBackInput, None, itkImageTransformerIRGBAUC2)
itkImageTransformerIRGBAUC2.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC2_PopBackInput, None, itkImageTransformerIRGBAUC2)
itkImageTransformerIRGBAUC2.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC2_PushFrontInput, None, itkImageTransformerIRGBAUC2)
itkImageTransformerIRGBAUC2.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC2_PopFrontInput, None, itkImageTransformerIRGBAUC2)
itkImageTransformerIRGBAUC2.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC2_GetPointer, None, itkImageTransformerIRGBAUC2)
itkImageTransformerIRGBAUC2_swigregister = _itkImageTransformerPython.itkImageTransformerIRGBAUC2_swigregister
itkImageTransformerIRGBAUC2_swigregister(itkImageTransformerIRGBAUC2)

def itkImageTransformerIRGBAUC2_cast(obj):
    """itkImageTransformerIRGBAUC2_cast(itkLightObject obj) -> itkImageTransformerIRGBAUC2"""
    return _itkImageTransformerPython.itkImageTransformerIRGBAUC2_cast(obj)

class itkImageTransformerIRGBAUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIRGBAUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIRGBAUC3 self, itkImageRGBAUC3 image)
        SetInput(itkImageTransformerIRGBAUC3 self, unsigned int arg0, itkImageRGBAUC3 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC3_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIRGBAUC3 self) -> itkImageRGBAUC3
        GetInput(itkImageTransformerIRGBAUC3 self) -> itkImageRGBAUC3
        GetInput(itkImageTransformerIRGBAUC3 self, unsigned int idx) -> itkImageRGBAUC3
        """
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC3_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIRGBAUC3 self, itkImageRGBAUC3 image)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC3_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIRGBAUC3 self)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC3_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIRGBAUC3 self, itkImageRGBAUC3 image)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC3_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIRGBAUC3 self)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIRGBAUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIRGBAUC3"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIRGBAUC3 self) -> itkImageTransformerIRGBAUC3"""
        return _itkImageTransformerPython.itkImageTransformerIRGBAUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIRGBAUC3

        Create a new object of the class itkImageTransformerIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIRGBAUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIRGBAUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIRGBAUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIRGBAUC3.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC3_SetInput, None, itkImageTransformerIRGBAUC3)
itkImageTransformerIRGBAUC3.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC3_GetInput, None, itkImageTransformerIRGBAUC3)
itkImageTransformerIRGBAUC3.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC3_PushBackInput, None, itkImageTransformerIRGBAUC3)
itkImageTransformerIRGBAUC3.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC3_PopBackInput, None, itkImageTransformerIRGBAUC3)
itkImageTransformerIRGBAUC3.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC3_PushFrontInput, None, itkImageTransformerIRGBAUC3)
itkImageTransformerIRGBAUC3.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC3_PopFrontInput, None, itkImageTransformerIRGBAUC3)
itkImageTransformerIRGBAUC3.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBAUC3_GetPointer, None, itkImageTransformerIRGBAUC3)
itkImageTransformerIRGBAUC3_swigregister = _itkImageTransformerPython.itkImageTransformerIRGBAUC3_swigregister
itkImageTransformerIRGBAUC3_swigregister(itkImageTransformerIRGBAUC3)

def itkImageTransformerIRGBAUC3_cast(obj):
    """itkImageTransformerIRGBAUC3_cast(itkLightObject obj) -> itkImageTransformerIRGBAUC3"""
    return _itkImageTransformerPython.itkImageTransformerIRGBAUC3_cast(obj)

class itkImageTransformerIRGBUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIRGBUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIRGBUC2 self, itkImageRGBUC2 image)
        SetInput(itkImageTransformerIRGBUC2 self, unsigned int arg0, itkImageRGBUC2 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIRGBUC2_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIRGBUC2 self) -> itkImageRGBUC2
        GetInput(itkImageTransformerIRGBUC2 self) -> itkImageRGBUC2
        GetInput(itkImageTransformerIRGBUC2 self, unsigned int idx) -> itkImageRGBUC2
        """
        return _itkImageTransformerPython.itkImageTransformerIRGBUC2_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIRGBUC2 self, itkImageRGBUC2 image)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC2_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIRGBUC2 self)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC2_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIRGBUC2 self, itkImageRGBUC2 image)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC2_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIRGBUC2 self)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIRGBUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIRGBUC2"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIRGBUC2 self) -> itkImageTransformerIRGBUC2"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIRGBUC2

        Create a new object of the class itkImageTransformerIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIRGBUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIRGBUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIRGBUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIRGBUC2.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC2_SetInput, None, itkImageTransformerIRGBUC2)
itkImageTransformerIRGBUC2.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC2_GetInput, None, itkImageTransformerIRGBUC2)
itkImageTransformerIRGBUC2.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC2_PushBackInput, None, itkImageTransformerIRGBUC2)
itkImageTransformerIRGBUC2.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC2_PopBackInput, None, itkImageTransformerIRGBUC2)
itkImageTransformerIRGBUC2.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC2_PushFrontInput, None, itkImageTransformerIRGBUC2)
itkImageTransformerIRGBUC2.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC2_PopFrontInput, None, itkImageTransformerIRGBUC2)
itkImageTransformerIRGBUC2.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC2_GetPointer, None, itkImageTransformerIRGBUC2)
itkImageTransformerIRGBUC2_swigregister = _itkImageTransformerPython.itkImageTransformerIRGBUC2_swigregister
itkImageTransformerIRGBUC2_swigregister(itkImageTransformerIRGBUC2)

def itkImageTransformerIRGBUC2_cast(obj):
    """itkImageTransformerIRGBUC2_cast(itkLightObject obj) -> itkImageTransformerIRGBUC2"""
    return _itkImageTransformerPython.itkImageTransformerIRGBUC2_cast(obj)

class itkImageTransformerIRGBUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIRGBUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIRGBUC3 self, itkImageRGBUC3 image)
        SetInput(itkImageTransformerIRGBUC3 self, unsigned int arg0, itkImageRGBUC3 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIRGBUC3_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIRGBUC3 self) -> itkImageRGBUC3
        GetInput(itkImageTransformerIRGBUC3 self) -> itkImageRGBUC3
        GetInput(itkImageTransformerIRGBUC3 self, unsigned int idx) -> itkImageRGBUC3
        """
        return _itkImageTransformerPython.itkImageTransformerIRGBUC3_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIRGBUC3 self, itkImageRGBUC3 image)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC3_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIRGBUC3 self)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC3_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIRGBUC3 self, itkImageRGBUC3 image)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC3_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIRGBUC3 self)"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIRGBUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIRGBUC3"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIRGBUC3 self) -> itkImageTransformerIRGBUC3"""
        return _itkImageTransformerPython.itkImageTransformerIRGBUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIRGBUC3

        Create a new object of the class itkImageTransformerIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIRGBUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIRGBUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIRGBUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIRGBUC3.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC3_SetInput, None, itkImageTransformerIRGBUC3)
itkImageTransformerIRGBUC3.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC3_GetInput, None, itkImageTransformerIRGBUC3)
itkImageTransformerIRGBUC3.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC3_PushBackInput, None, itkImageTransformerIRGBUC3)
itkImageTransformerIRGBUC3.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC3_PopBackInput, None, itkImageTransformerIRGBUC3)
itkImageTransformerIRGBUC3.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC3_PushFrontInput, None, itkImageTransformerIRGBUC3)
itkImageTransformerIRGBUC3.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC3_PopFrontInput, None, itkImageTransformerIRGBUC3)
itkImageTransformerIRGBUC3.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIRGBUC3_GetPointer, None, itkImageTransformerIRGBUC3)
itkImageTransformerIRGBUC3_swigregister = _itkImageTransformerPython.itkImageTransformerIRGBUC3_swigregister
itkImageTransformerIRGBUC3_swigregister(itkImageTransformerIRGBUC3)

def itkImageTransformerIRGBUC3_cast(obj):
    """itkImageTransformerIRGBUC3_cast(itkLightObject obj) -> itkImageTransformerIRGBUC3"""
    return _itkImageTransformerPython.itkImageTransformerIRGBUC3_cast(obj)

class itkImageTransformerISS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerISS2 self, itkImageSS2 image)
        SetInput(itkImageTransformerISS2 self, unsigned int arg0, itkImageSS2 image)
        """
        return _itkImageTransformerPython.itkImageTransformerISS2_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerISS2 self) -> itkImageSS2
        GetInput(itkImageTransformerISS2 self) -> itkImageSS2
        GetInput(itkImageTransformerISS2 self, unsigned int idx) -> itkImageSS2
        """
        return _itkImageTransformerPython.itkImageTransformerISS2_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerISS2 self, itkImageSS2 image)"""
        return _itkImageTransformerPython.itkImageTransformerISS2_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerISS2 self)"""
        return _itkImageTransformerPython.itkImageTransformerISS2_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerISS2 self, itkImageSS2 image)"""
        return _itkImageTransformerPython.itkImageTransformerISS2_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerISS2 self)"""
        return _itkImageTransformerPython.itkImageTransformerISS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerISS2"""
        return _itkImageTransformerPython.itkImageTransformerISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerISS2 self) -> itkImageTransformerISS2"""
        return _itkImageTransformerPython.itkImageTransformerISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerISS2

        Create a new object of the class itkImageTransformerISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerISS2.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS2_SetInput, None, itkImageTransformerISS2)
itkImageTransformerISS2.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS2_GetInput, None, itkImageTransformerISS2)
itkImageTransformerISS2.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS2_PushBackInput, None, itkImageTransformerISS2)
itkImageTransformerISS2.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS2_PopBackInput, None, itkImageTransformerISS2)
itkImageTransformerISS2.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS2_PushFrontInput, None, itkImageTransformerISS2)
itkImageTransformerISS2.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS2_PopFrontInput, None, itkImageTransformerISS2)
itkImageTransformerISS2.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS2_GetPointer, None, itkImageTransformerISS2)
itkImageTransformerISS2_swigregister = _itkImageTransformerPython.itkImageTransformerISS2_swigregister
itkImageTransformerISS2_swigregister(itkImageTransformerISS2)

def itkImageTransformerISS2_cast(obj):
    """itkImageTransformerISS2_cast(itkLightObject obj) -> itkImageTransformerISS2"""
    return _itkImageTransformerPython.itkImageTransformerISS2_cast(obj)

class itkImageTransformerISS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerISS3 self, itkImageSS3 image)
        SetInput(itkImageTransformerISS3 self, unsigned int arg0, itkImageSS3 image)
        """
        return _itkImageTransformerPython.itkImageTransformerISS3_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerISS3 self) -> itkImageSS3
        GetInput(itkImageTransformerISS3 self) -> itkImageSS3
        GetInput(itkImageTransformerISS3 self, unsigned int idx) -> itkImageSS3
        """
        return _itkImageTransformerPython.itkImageTransformerISS3_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerISS3 self, itkImageSS3 image)"""
        return _itkImageTransformerPython.itkImageTransformerISS3_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerISS3 self)"""
        return _itkImageTransformerPython.itkImageTransformerISS3_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerISS3 self, itkImageSS3 image)"""
        return _itkImageTransformerPython.itkImageTransformerISS3_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerISS3 self)"""
        return _itkImageTransformerPython.itkImageTransformerISS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerISS3"""
        return _itkImageTransformerPython.itkImageTransformerISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerISS3 self) -> itkImageTransformerISS3"""
        return _itkImageTransformerPython.itkImageTransformerISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerISS3

        Create a new object of the class itkImageTransformerISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerISS3.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS3_SetInput, None, itkImageTransformerISS3)
itkImageTransformerISS3.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS3_GetInput, None, itkImageTransformerISS3)
itkImageTransformerISS3.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS3_PushBackInput, None, itkImageTransformerISS3)
itkImageTransformerISS3.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS3_PopBackInput, None, itkImageTransformerISS3)
itkImageTransformerISS3.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS3_PushFrontInput, None, itkImageTransformerISS3)
itkImageTransformerISS3.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS3_PopFrontInput, None, itkImageTransformerISS3)
itkImageTransformerISS3.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerISS3_GetPointer, None, itkImageTransformerISS3)
itkImageTransformerISS3_swigregister = _itkImageTransformerPython.itkImageTransformerISS3_swigregister
itkImageTransformerISS3_swigregister(itkImageTransformerISS3)

def itkImageTransformerISS3_cast(obj):
    """itkImageTransformerISS3_cast(itkLightObject obj) -> itkImageTransformerISS3"""
    return _itkImageTransformerPython.itkImageTransformerISS3_cast(obj)

class itkImageTransformerIUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIUC2 self, itkImageUC2 image)
        SetInput(itkImageTransformerIUC2 self, unsigned int arg0, itkImageUC2 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIUC2_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIUC2 self) -> itkImageUC2
        GetInput(itkImageTransformerIUC2 self) -> itkImageUC2
        GetInput(itkImageTransformerIUC2 self, unsigned int idx) -> itkImageUC2
        """
        return _itkImageTransformerPython.itkImageTransformerIUC2_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIUC2 self, itkImageUC2 image)"""
        return _itkImageTransformerPython.itkImageTransformerIUC2_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIUC2 self)"""
        return _itkImageTransformerPython.itkImageTransformerIUC2_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIUC2 self, itkImageUC2 image)"""
        return _itkImageTransformerPython.itkImageTransformerIUC2_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIUC2 self)"""
        return _itkImageTransformerPython.itkImageTransformerIUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIUC2"""
        return _itkImageTransformerPython.itkImageTransformerIUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIUC2 self) -> itkImageTransformerIUC2"""
        return _itkImageTransformerPython.itkImageTransformerIUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIUC2

        Create a new object of the class itkImageTransformerIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIUC2.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC2_SetInput, None, itkImageTransformerIUC2)
itkImageTransformerIUC2.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC2_GetInput, None, itkImageTransformerIUC2)
itkImageTransformerIUC2.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC2_PushBackInput, None, itkImageTransformerIUC2)
itkImageTransformerIUC2.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC2_PopBackInput, None, itkImageTransformerIUC2)
itkImageTransformerIUC2.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC2_PushFrontInput, None, itkImageTransformerIUC2)
itkImageTransformerIUC2.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC2_PopFrontInput, None, itkImageTransformerIUC2)
itkImageTransformerIUC2.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC2_GetPointer, None, itkImageTransformerIUC2)
itkImageTransformerIUC2_swigregister = _itkImageTransformerPython.itkImageTransformerIUC2_swigregister
itkImageTransformerIUC2_swigregister(itkImageTransformerIUC2)

def itkImageTransformerIUC2_cast(obj):
    """itkImageTransformerIUC2_cast(itkLightObject obj) -> itkImageTransformerIUC2"""
    return _itkImageTransformerPython.itkImageTransformerIUC2_cast(obj)

class itkImageTransformerIUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIUC3 self, itkImageUC3 image)
        SetInput(itkImageTransformerIUC3 self, unsigned int arg0, itkImageUC3 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIUC3_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIUC3 self) -> itkImageUC3
        GetInput(itkImageTransformerIUC3 self) -> itkImageUC3
        GetInput(itkImageTransformerIUC3 self, unsigned int idx) -> itkImageUC3
        """
        return _itkImageTransformerPython.itkImageTransformerIUC3_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIUC3 self, itkImageUC3 image)"""
        return _itkImageTransformerPython.itkImageTransformerIUC3_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIUC3 self)"""
        return _itkImageTransformerPython.itkImageTransformerIUC3_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIUC3 self, itkImageUC3 image)"""
        return _itkImageTransformerPython.itkImageTransformerIUC3_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIUC3 self)"""
        return _itkImageTransformerPython.itkImageTransformerIUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIUC3"""
        return _itkImageTransformerPython.itkImageTransformerIUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIUC3 self) -> itkImageTransformerIUC3"""
        return _itkImageTransformerPython.itkImageTransformerIUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIUC3

        Create a new object of the class itkImageTransformerIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIUC3.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC3_SetInput, None, itkImageTransformerIUC3)
itkImageTransformerIUC3.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC3_GetInput, None, itkImageTransformerIUC3)
itkImageTransformerIUC3.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC3_PushBackInput, None, itkImageTransformerIUC3)
itkImageTransformerIUC3.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC3_PopBackInput, None, itkImageTransformerIUC3)
itkImageTransformerIUC3.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC3_PushFrontInput, None, itkImageTransformerIUC3)
itkImageTransformerIUC3.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC3_PopFrontInput, None, itkImageTransformerIUC3)
itkImageTransformerIUC3.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUC3_GetPointer, None, itkImageTransformerIUC3)
itkImageTransformerIUC3_swigregister = _itkImageTransformerPython.itkImageTransformerIUC3_swigregister
itkImageTransformerIUC3_swigregister(itkImageTransformerIUC3)

def itkImageTransformerIUC3_cast(obj):
    """itkImageTransformerIUC3_cast(itkLightObject obj) -> itkImageTransformerIUC3"""
    return _itkImageTransformerPython.itkImageTransformerIUC3_cast(obj)

class itkImageTransformerIUS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIUS2 self, itkImageUS2 image)
        SetInput(itkImageTransformerIUS2 self, unsigned int arg0, itkImageUS2 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIUS2_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIUS2 self) -> itkImageUS2
        GetInput(itkImageTransformerIUS2 self) -> itkImageUS2
        GetInput(itkImageTransformerIUS2 self, unsigned int idx) -> itkImageUS2
        """
        return _itkImageTransformerPython.itkImageTransformerIUS2_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIUS2 self, itkImageUS2 image)"""
        return _itkImageTransformerPython.itkImageTransformerIUS2_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIUS2 self)"""
        return _itkImageTransformerPython.itkImageTransformerIUS2_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIUS2 self, itkImageUS2 image)"""
        return _itkImageTransformerPython.itkImageTransformerIUS2_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIUS2 self)"""
        return _itkImageTransformerPython.itkImageTransformerIUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIUS2"""
        return _itkImageTransformerPython.itkImageTransformerIUS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIUS2 self) -> itkImageTransformerIUS2"""
        return _itkImageTransformerPython.itkImageTransformerIUS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIUS2

        Create a new object of the class itkImageTransformerIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIUS2.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS2_SetInput, None, itkImageTransformerIUS2)
itkImageTransformerIUS2.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS2_GetInput, None, itkImageTransformerIUS2)
itkImageTransformerIUS2.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS2_PushBackInput, None, itkImageTransformerIUS2)
itkImageTransformerIUS2.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS2_PopBackInput, None, itkImageTransformerIUS2)
itkImageTransformerIUS2.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS2_PushFrontInput, None, itkImageTransformerIUS2)
itkImageTransformerIUS2.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS2_PopFrontInput, None, itkImageTransformerIUS2)
itkImageTransformerIUS2.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS2_GetPointer, None, itkImageTransformerIUS2)
itkImageTransformerIUS2_swigregister = _itkImageTransformerPython.itkImageTransformerIUS2_swigregister
itkImageTransformerIUS2_swigregister(itkImageTransformerIUS2)

def itkImageTransformerIUS2_cast(obj):
    """itkImageTransformerIUS2_cast(itkLightObject obj) -> itkImageTransformerIUS2"""
    return _itkImageTransformerPython.itkImageTransformerIUS2_cast(obj)

class itkImageTransformerIUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIUS3 self, itkImageUS3 image)
        SetInput(itkImageTransformerIUS3 self, unsigned int arg0, itkImageUS3 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIUS3_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIUS3 self) -> itkImageUS3
        GetInput(itkImageTransformerIUS3 self) -> itkImageUS3
        GetInput(itkImageTransformerIUS3 self, unsigned int idx) -> itkImageUS3
        """
        return _itkImageTransformerPython.itkImageTransformerIUS3_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIUS3 self, itkImageUS3 image)"""
        return _itkImageTransformerPython.itkImageTransformerIUS3_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIUS3 self)"""
        return _itkImageTransformerPython.itkImageTransformerIUS3_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIUS3 self, itkImageUS3 image)"""
        return _itkImageTransformerPython.itkImageTransformerIUS3_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIUS3 self)"""
        return _itkImageTransformerPython.itkImageTransformerIUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIUS3"""
        return _itkImageTransformerPython.itkImageTransformerIUS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIUS3 self) -> itkImageTransformerIUS3"""
        return _itkImageTransformerPython.itkImageTransformerIUS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIUS3

        Create a new object of the class itkImageTransformerIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIUS3.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS3_SetInput, None, itkImageTransformerIUS3)
itkImageTransformerIUS3.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS3_GetInput, None, itkImageTransformerIUS3)
itkImageTransformerIUS3.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS3_PushBackInput, None, itkImageTransformerIUS3)
itkImageTransformerIUS3.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS3_PopBackInput, None, itkImageTransformerIUS3)
itkImageTransformerIUS3.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS3_PushFrontInput, None, itkImageTransformerIUS3)
itkImageTransformerIUS3.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS3_PopFrontInput, None, itkImageTransformerIUS3)
itkImageTransformerIUS3.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIUS3_GetPointer, None, itkImageTransformerIUS3)
itkImageTransformerIUS3_swigregister = _itkImageTransformerPython.itkImageTransformerIUS3_swigregister
itkImageTransformerIUS3_swigregister(itkImageTransformerIUS3)

def itkImageTransformerIUS3_cast(obj):
    """itkImageTransformerIUS3_cast(itkLightObject obj) -> itkImageTransformerIUS3"""
    return _itkImageTransformerPython.itkImageTransformerIUS3_cast(obj)

class itkImageTransformerIVF22(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIVF22 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIVF22 self, itkImageVF22 image)
        SetInput(itkImageTransformerIVF22 self, unsigned int arg0, itkImageVF22 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIVF22_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIVF22 self) -> itkImageVF22
        GetInput(itkImageTransformerIVF22 self) -> itkImageVF22
        GetInput(itkImageTransformerIVF22 self, unsigned int idx) -> itkImageVF22
        """
        return _itkImageTransformerPython.itkImageTransformerIVF22_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIVF22 self, itkImageVF22 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF22_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIVF22 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF22_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIVF22 self, itkImageVF22 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF22_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIVF22 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF22_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIVF22

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIVF22"""
        return _itkImageTransformerPython.itkImageTransformerIVF22_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIVF22 self) -> itkImageTransformerIVF22"""
        return _itkImageTransformerPython.itkImageTransformerIVF22_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIVF22

        Create a new object of the class itkImageTransformerIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIVF22.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIVF22.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIVF22.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIVF22.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF22_SetInput, None, itkImageTransformerIVF22)
itkImageTransformerIVF22.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF22_GetInput, None, itkImageTransformerIVF22)
itkImageTransformerIVF22.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF22_PushBackInput, None, itkImageTransformerIVF22)
itkImageTransformerIVF22.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF22_PopBackInput, None, itkImageTransformerIVF22)
itkImageTransformerIVF22.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF22_PushFrontInput, None, itkImageTransformerIVF22)
itkImageTransformerIVF22.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF22_PopFrontInput, None, itkImageTransformerIVF22)
itkImageTransformerIVF22.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF22_GetPointer, None, itkImageTransformerIVF22)
itkImageTransformerIVF22_swigregister = _itkImageTransformerPython.itkImageTransformerIVF22_swigregister
itkImageTransformerIVF22_swigregister(itkImageTransformerIVF22)

def itkImageTransformerIVF22_cast(obj):
    """itkImageTransformerIVF22_cast(itkLightObject obj) -> itkImageTransformerIVF22"""
    return _itkImageTransformerPython.itkImageTransformerIVF22_cast(obj)

class itkImageTransformerIVF23(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIVF23 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIVF23 self, itkImageVF23 image)
        SetInput(itkImageTransformerIVF23 self, unsigned int arg0, itkImageVF23 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIVF23_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIVF23 self) -> itkImageVF23
        GetInput(itkImageTransformerIVF23 self) -> itkImageVF23
        GetInput(itkImageTransformerIVF23 self, unsigned int idx) -> itkImageVF23
        """
        return _itkImageTransformerPython.itkImageTransformerIVF23_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIVF23 self, itkImageVF23 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF23_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIVF23 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF23_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIVF23 self, itkImageVF23 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF23_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIVF23 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF23_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIVF23

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIVF23"""
        return _itkImageTransformerPython.itkImageTransformerIVF23_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIVF23 self) -> itkImageTransformerIVF23"""
        return _itkImageTransformerPython.itkImageTransformerIVF23_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIVF23

        Create a new object of the class itkImageTransformerIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIVF23.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIVF23.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIVF23.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIVF23.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF23_SetInput, None, itkImageTransformerIVF23)
itkImageTransformerIVF23.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF23_GetInput, None, itkImageTransformerIVF23)
itkImageTransformerIVF23.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF23_PushBackInput, None, itkImageTransformerIVF23)
itkImageTransformerIVF23.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF23_PopBackInput, None, itkImageTransformerIVF23)
itkImageTransformerIVF23.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF23_PushFrontInput, None, itkImageTransformerIVF23)
itkImageTransformerIVF23.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF23_PopFrontInput, None, itkImageTransformerIVF23)
itkImageTransformerIVF23.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF23_GetPointer, None, itkImageTransformerIVF23)
itkImageTransformerIVF23_swigregister = _itkImageTransformerPython.itkImageTransformerIVF23_swigregister
itkImageTransformerIVF23_swigregister(itkImageTransformerIVF23)

def itkImageTransformerIVF23_cast(obj):
    """itkImageTransformerIVF23_cast(itkLightObject obj) -> itkImageTransformerIVF23"""
    return _itkImageTransformerPython.itkImageTransformerIVF23_cast(obj)

class itkImageTransformerIVF32(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIVF32 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIVF32 self, itkImageVF32 image)
        SetInput(itkImageTransformerIVF32 self, unsigned int arg0, itkImageVF32 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIVF32_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIVF32 self) -> itkImageVF32
        GetInput(itkImageTransformerIVF32 self) -> itkImageVF32
        GetInput(itkImageTransformerIVF32 self, unsigned int idx) -> itkImageVF32
        """
        return _itkImageTransformerPython.itkImageTransformerIVF32_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIVF32 self, itkImageVF32 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF32_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIVF32 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF32_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIVF32 self, itkImageVF32 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF32_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIVF32 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF32_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIVF32

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIVF32"""
        return _itkImageTransformerPython.itkImageTransformerIVF32_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIVF32 self) -> itkImageTransformerIVF32"""
        return _itkImageTransformerPython.itkImageTransformerIVF32_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIVF32

        Create a new object of the class itkImageTransformerIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIVF32.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIVF32.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIVF32.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIVF32.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF32_SetInput, None, itkImageTransformerIVF32)
itkImageTransformerIVF32.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF32_GetInput, None, itkImageTransformerIVF32)
itkImageTransformerIVF32.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF32_PushBackInput, None, itkImageTransformerIVF32)
itkImageTransformerIVF32.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF32_PopBackInput, None, itkImageTransformerIVF32)
itkImageTransformerIVF32.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF32_PushFrontInput, None, itkImageTransformerIVF32)
itkImageTransformerIVF32.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF32_PopFrontInput, None, itkImageTransformerIVF32)
itkImageTransformerIVF32.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF32_GetPointer, None, itkImageTransformerIVF32)
itkImageTransformerIVF32_swigregister = _itkImageTransformerPython.itkImageTransformerIVF32_swigregister
itkImageTransformerIVF32_swigregister(itkImageTransformerIVF32)

def itkImageTransformerIVF32_cast(obj):
    """itkImageTransformerIVF32_cast(itkLightObject obj) -> itkImageTransformerIVF32"""
    return _itkImageTransformerPython.itkImageTransformerIVF32_cast(obj)

class itkImageTransformerIVF33(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIVF33 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIVF33 self, itkImageVF33 image)
        SetInput(itkImageTransformerIVF33 self, unsigned int arg0, itkImageVF33 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIVF33_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIVF33 self) -> itkImageVF33
        GetInput(itkImageTransformerIVF33 self) -> itkImageVF33
        GetInput(itkImageTransformerIVF33 self, unsigned int idx) -> itkImageVF33
        """
        return _itkImageTransformerPython.itkImageTransformerIVF33_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIVF33 self, itkImageVF33 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF33_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIVF33 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF33_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIVF33 self, itkImageVF33 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF33_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIVF33 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF33_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIVF33

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIVF33"""
        return _itkImageTransformerPython.itkImageTransformerIVF33_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIVF33 self) -> itkImageTransformerIVF33"""
        return _itkImageTransformerPython.itkImageTransformerIVF33_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIVF33

        Create a new object of the class itkImageTransformerIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIVF33.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIVF33.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIVF33.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIVF33.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF33_SetInput, None, itkImageTransformerIVF33)
itkImageTransformerIVF33.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF33_GetInput, None, itkImageTransformerIVF33)
itkImageTransformerIVF33.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF33_PushBackInput, None, itkImageTransformerIVF33)
itkImageTransformerIVF33.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF33_PopBackInput, None, itkImageTransformerIVF33)
itkImageTransformerIVF33.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF33_PushFrontInput, None, itkImageTransformerIVF33)
itkImageTransformerIVF33.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF33_PopFrontInput, None, itkImageTransformerIVF33)
itkImageTransformerIVF33.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF33_GetPointer, None, itkImageTransformerIVF33)
itkImageTransformerIVF33_swigregister = _itkImageTransformerPython.itkImageTransformerIVF33_swigregister
itkImageTransformerIVF33_swigregister(itkImageTransformerIVF33)

def itkImageTransformerIVF33_cast(obj):
    """itkImageTransformerIVF33_cast(itkLightObject obj) -> itkImageTransformerIVF33"""
    return _itkImageTransformerPython.itkImageTransformerIVF33_cast(obj)

class itkImageTransformerIVF42(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIVF42 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIVF42 self, itkImageVF42 image)
        SetInput(itkImageTransformerIVF42 self, unsigned int arg0, itkImageVF42 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIVF42_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIVF42 self) -> itkImageVF42
        GetInput(itkImageTransformerIVF42 self) -> itkImageVF42
        GetInput(itkImageTransformerIVF42 self, unsigned int idx) -> itkImageVF42
        """
        return _itkImageTransformerPython.itkImageTransformerIVF42_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIVF42 self, itkImageVF42 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF42_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIVF42 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF42_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIVF42 self, itkImageVF42 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF42_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIVF42 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF42_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIVF42

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIVF42"""
        return _itkImageTransformerPython.itkImageTransformerIVF42_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIVF42 self) -> itkImageTransformerIVF42"""
        return _itkImageTransformerPython.itkImageTransformerIVF42_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIVF42

        Create a new object of the class itkImageTransformerIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIVF42.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIVF42.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIVF42.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIVF42.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF42_SetInput, None, itkImageTransformerIVF42)
itkImageTransformerIVF42.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF42_GetInput, None, itkImageTransformerIVF42)
itkImageTransformerIVF42.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF42_PushBackInput, None, itkImageTransformerIVF42)
itkImageTransformerIVF42.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF42_PopBackInput, None, itkImageTransformerIVF42)
itkImageTransformerIVF42.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF42_PushFrontInput, None, itkImageTransformerIVF42)
itkImageTransformerIVF42.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF42_PopFrontInput, None, itkImageTransformerIVF42)
itkImageTransformerIVF42.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF42_GetPointer, None, itkImageTransformerIVF42)
itkImageTransformerIVF42_swigregister = _itkImageTransformerPython.itkImageTransformerIVF42_swigregister
itkImageTransformerIVF42_swigregister(itkImageTransformerIVF42)

def itkImageTransformerIVF42_cast(obj):
    """itkImageTransformerIVF42_cast(itkLightObject obj) -> itkImageTransformerIVF42"""
    return _itkImageTransformerPython.itkImageTransformerIVF42_cast(obj)

class itkImageTransformerIVF43(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerIVF43 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerIVF43 self, itkImageVF43 image)
        SetInput(itkImageTransformerIVF43 self, unsigned int arg0, itkImageVF43 image)
        """
        return _itkImageTransformerPython.itkImageTransformerIVF43_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerIVF43 self) -> itkImageVF43
        GetInput(itkImageTransformerIVF43 self) -> itkImageVF43
        GetInput(itkImageTransformerIVF43 self, unsigned int idx) -> itkImageVF43
        """
        return _itkImageTransformerPython.itkImageTransformerIVF43_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerIVF43 self, itkImageVF43 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF43_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerIVF43 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF43_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerIVF43 self, itkImageVF43 image)"""
        return _itkImageTransformerPython.itkImageTransformerIVF43_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerIVF43 self)"""
        return _itkImageTransformerPython.itkImageTransformerIVF43_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerIVF43

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerIVF43"""
        return _itkImageTransformerPython.itkImageTransformerIVF43_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerIVF43 self) -> itkImageTransformerIVF43"""
        return _itkImageTransformerPython.itkImageTransformerIVF43_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerIVF43

        Create a new object of the class itkImageTransformerIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerIVF43.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerIVF43.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerIVF43.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerIVF43.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF43_SetInput, None, itkImageTransformerIVF43)
itkImageTransformerIVF43.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF43_GetInput, None, itkImageTransformerIVF43)
itkImageTransformerIVF43.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF43_PushBackInput, None, itkImageTransformerIVF43)
itkImageTransformerIVF43.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF43_PopBackInput, None, itkImageTransformerIVF43)
itkImageTransformerIVF43.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF43_PushFrontInput, None, itkImageTransformerIVF43)
itkImageTransformerIVF43.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF43_PopFrontInput, None, itkImageTransformerIVF43)
itkImageTransformerIVF43.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerIVF43_GetPointer, None, itkImageTransformerIVF43)
itkImageTransformerIVF43_swigregister = _itkImageTransformerPython.itkImageTransformerIVF43_swigregister
itkImageTransformerIVF43_swigregister(itkImageTransformerIVF43)

def itkImageTransformerIVF43_cast(obj):
    """itkImageTransformerIVF43_cast(itkLightObject obj) -> itkImageTransformerIVF43"""
    return _itkImageTransformerPython.itkImageTransformerIVF43_cast(obj)

class itkImageTransformerVIF2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerVIF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerVIF2 self, itkVectorImageF2 image)
        SetInput(itkImageTransformerVIF2 self, unsigned int arg0, itkVectorImageF2 image)
        """
        return _itkImageTransformerPython.itkImageTransformerVIF2_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerVIF2 self) -> itkVectorImageF2
        GetInput(itkImageTransformerVIF2 self) -> itkVectorImageF2
        GetInput(itkImageTransformerVIF2 self, unsigned int idx) -> itkVectorImageF2
        """
        return _itkImageTransformerPython.itkImageTransformerVIF2_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerVIF2 self, itkVectorImageF2 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIF2_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerVIF2 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIF2_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerVIF2 self, itkVectorImageF2 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIF2_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerVIF2 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIF2_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerVIF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerVIF2"""
        return _itkImageTransformerPython.itkImageTransformerVIF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerVIF2 self) -> itkImageTransformerVIF2"""
        return _itkImageTransformerPython.itkImageTransformerVIF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerVIF2

        Create a new object of the class itkImageTransformerVIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerVIF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerVIF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerVIF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerVIF2.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF2_SetInput, None, itkImageTransformerVIF2)
itkImageTransformerVIF2.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF2_GetInput, None, itkImageTransformerVIF2)
itkImageTransformerVIF2.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF2_PushBackInput, None, itkImageTransformerVIF2)
itkImageTransformerVIF2.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF2_PopBackInput, None, itkImageTransformerVIF2)
itkImageTransformerVIF2.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF2_PushFrontInput, None, itkImageTransformerVIF2)
itkImageTransformerVIF2.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF2_PopFrontInput, None, itkImageTransformerVIF2)
itkImageTransformerVIF2.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF2_GetPointer, None, itkImageTransformerVIF2)
itkImageTransformerVIF2_swigregister = _itkImageTransformerPython.itkImageTransformerVIF2_swigregister
itkImageTransformerVIF2_swigregister(itkImageTransformerVIF2)

def itkImageTransformerVIF2_cast(obj):
    """itkImageTransformerVIF2_cast(itkLightObject obj) -> itkImageTransformerVIF2"""
    return _itkImageTransformerPython.itkImageTransformerVIF2_cast(obj)

class itkImageTransformerVIF3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerVIF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerVIF3 self, itkVectorImageF3 image)
        SetInput(itkImageTransformerVIF3 self, unsigned int arg0, itkVectorImageF3 image)
        """
        return _itkImageTransformerPython.itkImageTransformerVIF3_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerVIF3 self) -> itkVectorImageF3
        GetInput(itkImageTransformerVIF3 self) -> itkVectorImageF3
        GetInput(itkImageTransformerVIF3 self, unsigned int idx) -> itkVectorImageF3
        """
        return _itkImageTransformerPython.itkImageTransformerVIF3_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerVIF3 self, itkVectorImageF3 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIF3_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerVIF3 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIF3_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerVIF3 self, itkVectorImageF3 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIF3_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerVIF3 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIF3_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerVIF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerVIF3"""
        return _itkImageTransformerPython.itkImageTransformerVIF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerVIF3 self) -> itkImageTransformerVIF3"""
        return _itkImageTransformerPython.itkImageTransformerVIF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerVIF3

        Create a new object of the class itkImageTransformerVIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerVIF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerVIF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerVIF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerVIF3.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF3_SetInput, None, itkImageTransformerVIF3)
itkImageTransformerVIF3.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF3_GetInput, None, itkImageTransformerVIF3)
itkImageTransformerVIF3.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF3_PushBackInput, None, itkImageTransformerVIF3)
itkImageTransformerVIF3.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF3_PopBackInput, None, itkImageTransformerVIF3)
itkImageTransformerVIF3.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF3_PushFrontInput, None, itkImageTransformerVIF3)
itkImageTransformerVIF3.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF3_PopFrontInput, None, itkImageTransformerVIF3)
itkImageTransformerVIF3.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIF3_GetPointer, None, itkImageTransformerVIF3)
itkImageTransformerVIF3_swigregister = _itkImageTransformerPython.itkImageTransformerVIF3_swigregister
itkImageTransformerVIF3_swigregister(itkImageTransformerVIF3)

def itkImageTransformerVIF3_cast(obj):
    """itkImageTransformerVIF3_cast(itkLightObject obj) -> itkImageTransformerVIF3"""
    return _itkImageTransformerPython.itkImageTransformerVIF3_cast(obj)

class itkImageTransformerVISS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerVISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerVISS2 self, itkVectorImageSS2 image)
        SetInput(itkImageTransformerVISS2 self, unsigned int arg0, itkVectorImageSS2 image)
        """
        return _itkImageTransformerPython.itkImageTransformerVISS2_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerVISS2 self) -> itkVectorImageSS2
        GetInput(itkImageTransformerVISS2 self) -> itkVectorImageSS2
        GetInput(itkImageTransformerVISS2 self, unsigned int idx) -> itkVectorImageSS2
        """
        return _itkImageTransformerPython.itkImageTransformerVISS2_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerVISS2 self, itkVectorImageSS2 image)"""
        return _itkImageTransformerPython.itkImageTransformerVISS2_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerVISS2 self)"""
        return _itkImageTransformerPython.itkImageTransformerVISS2_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerVISS2 self, itkVectorImageSS2 image)"""
        return _itkImageTransformerPython.itkImageTransformerVISS2_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerVISS2 self)"""
        return _itkImageTransformerPython.itkImageTransformerVISS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerVISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerVISS2"""
        return _itkImageTransformerPython.itkImageTransformerVISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerVISS2 self) -> itkImageTransformerVISS2"""
        return _itkImageTransformerPython.itkImageTransformerVISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerVISS2

        Create a new object of the class itkImageTransformerVISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerVISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerVISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerVISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerVISS2.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS2_SetInput, None, itkImageTransformerVISS2)
itkImageTransformerVISS2.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS2_GetInput, None, itkImageTransformerVISS2)
itkImageTransformerVISS2.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS2_PushBackInput, None, itkImageTransformerVISS2)
itkImageTransformerVISS2.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS2_PopBackInput, None, itkImageTransformerVISS2)
itkImageTransformerVISS2.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS2_PushFrontInput, None, itkImageTransformerVISS2)
itkImageTransformerVISS2.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS2_PopFrontInput, None, itkImageTransformerVISS2)
itkImageTransformerVISS2.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS2_GetPointer, None, itkImageTransformerVISS2)
itkImageTransformerVISS2_swigregister = _itkImageTransformerPython.itkImageTransformerVISS2_swigregister
itkImageTransformerVISS2_swigregister(itkImageTransformerVISS2)

def itkImageTransformerVISS2_cast(obj):
    """itkImageTransformerVISS2_cast(itkLightObject obj) -> itkImageTransformerVISS2"""
    return _itkImageTransformerPython.itkImageTransformerVISS2_cast(obj)

class itkImageTransformerVISS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerVISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerVISS3 self, itkVectorImageSS3 image)
        SetInput(itkImageTransformerVISS3 self, unsigned int arg0, itkVectorImageSS3 image)
        """
        return _itkImageTransformerPython.itkImageTransformerVISS3_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerVISS3 self) -> itkVectorImageSS3
        GetInput(itkImageTransformerVISS3 self) -> itkVectorImageSS3
        GetInput(itkImageTransformerVISS3 self, unsigned int idx) -> itkVectorImageSS3
        """
        return _itkImageTransformerPython.itkImageTransformerVISS3_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerVISS3 self, itkVectorImageSS3 image)"""
        return _itkImageTransformerPython.itkImageTransformerVISS3_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerVISS3 self)"""
        return _itkImageTransformerPython.itkImageTransformerVISS3_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerVISS3 self, itkVectorImageSS3 image)"""
        return _itkImageTransformerPython.itkImageTransformerVISS3_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerVISS3 self)"""
        return _itkImageTransformerPython.itkImageTransformerVISS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerVISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerVISS3"""
        return _itkImageTransformerPython.itkImageTransformerVISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerVISS3 self) -> itkImageTransformerVISS3"""
        return _itkImageTransformerPython.itkImageTransformerVISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerVISS3

        Create a new object of the class itkImageTransformerVISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerVISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerVISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerVISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerVISS3.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS3_SetInput, None, itkImageTransformerVISS3)
itkImageTransformerVISS3.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS3_GetInput, None, itkImageTransformerVISS3)
itkImageTransformerVISS3.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS3_PushBackInput, None, itkImageTransformerVISS3)
itkImageTransformerVISS3.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS3_PopBackInput, None, itkImageTransformerVISS3)
itkImageTransformerVISS3.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS3_PushFrontInput, None, itkImageTransformerVISS3)
itkImageTransformerVISS3.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS3_PopFrontInput, None, itkImageTransformerVISS3)
itkImageTransformerVISS3.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVISS3_GetPointer, None, itkImageTransformerVISS3)
itkImageTransformerVISS3_swigregister = _itkImageTransformerPython.itkImageTransformerVISS3_swigregister
itkImageTransformerVISS3_swigregister(itkImageTransformerVISS3)

def itkImageTransformerVISS3_cast(obj):
    """itkImageTransformerVISS3_cast(itkLightObject obj) -> itkImageTransformerVISS3"""
    return _itkImageTransformerPython.itkImageTransformerVISS3_cast(obj)

class itkImageTransformerVIUC2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerVIUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerVIUC2 self, itkVectorImageUC2 image)
        SetInput(itkImageTransformerVIUC2 self, unsigned int arg0, itkVectorImageUC2 image)
        """
        return _itkImageTransformerPython.itkImageTransformerVIUC2_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerVIUC2 self) -> itkVectorImageUC2
        GetInput(itkImageTransformerVIUC2 self) -> itkVectorImageUC2
        GetInput(itkImageTransformerVIUC2 self, unsigned int idx) -> itkVectorImageUC2
        """
        return _itkImageTransformerPython.itkImageTransformerVIUC2_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerVIUC2 self, itkVectorImageUC2 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIUC2_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerVIUC2 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIUC2_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerVIUC2 self, itkVectorImageUC2 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIUC2_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerVIUC2 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIUC2_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerVIUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerVIUC2"""
        return _itkImageTransformerPython.itkImageTransformerVIUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerVIUC2 self) -> itkImageTransformerVIUC2"""
        return _itkImageTransformerPython.itkImageTransformerVIUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerVIUC2

        Create a new object of the class itkImageTransformerVIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerVIUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerVIUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerVIUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerVIUC2.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC2_SetInput, None, itkImageTransformerVIUC2)
itkImageTransformerVIUC2.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC2_GetInput, None, itkImageTransformerVIUC2)
itkImageTransformerVIUC2.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC2_PushBackInput, None, itkImageTransformerVIUC2)
itkImageTransformerVIUC2.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC2_PopBackInput, None, itkImageTransformerVIUC2)
itkImageTransformerVIUC2.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC2_PushFrontInput, None, itkImageTransformerVIUC2)
itkImageTransformerVIUC2.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC2_PopFrontInput, None, itkImageTransformerVIUC2)
itkImageTransformerVIUC2.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC2_GetPointer, None, itkImageTransformerVIUC2)
itkImageTransformerVIUC2_swigregister = _itkImageTransformerPython.itkImageTransformerVIUC2_swigregister
itkImageTransformerVIUC2_swigregister(itkImageTransformerVIUC2)

def itkImageTransformerVIUC2_cast(obj):
    """itkImageTransformerVIUC2_cast(itkLightObject obj) -> itkImageTransformerVIUC2"""
    return _itkImageTransformerPython.itkImageTransformerVIUC2_cast(obj)

class itkImageTransformerVIUC3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerVIUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerVIUC3 self, itkVectorImageUC3 image)
        SetInput(itkImageTransformerVIUC3 self, unsigned int arg0, itkVectorImageUC3 image)
        """
        return _itkImageTransformerPython.itkImageTransformerVIUC3_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerVIUC3 self) -> itkVectorImageUC3
        GetInput(itkImageTransformerVIUC3 self) -> itkVectorImageUC3
        GetInput(itkImageTransformerVIUC3 self, unsigned int idx) -> itkVectorImageUC3
        """
        return _itkImageTransformerPython.itkImageTransformerVIUC3_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerVIUC3 self, itkVectorImageUC3 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIUC3_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerVIUC3 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIUC3_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerVIUC3 self, itkVectorImageUC3 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIUC3_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerVIUC3 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIUC3_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerVIUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerVIUC3"""
        return _itkImageTransformerPython.itkImageTransformerVIUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerVIUC3 self) -> itkImageTransformerVIUC3"""
        return _itkImageTransformerPython.itkImageTransformerVIUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerVIUC3

        Create a new object of the class itkImageTransformerVIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerVIUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerVIUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerVIUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerVIUC3.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC3_SetInput, None, itkImageTransformerVIUC3)
itkImageTransformerVIUC3.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC3_GetInput, None, itkImageTransformerVIUC3)
itkImageTransformerVIUC3.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC3_PushBackInput, None, itkImageTransformerVIUC3)
itkImageTransformerVIUC3.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC3_PopBackInput, None, itkImageTransformerVIUC3)
itkImageTransformerVIUC3.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC3_PushFrontInput, None, itkImageTransformerVIUC3)
itkImageTransformerVIUC3.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC3_PopFrontInput, None, itkImageTransformerVIUC3)
itkImageTransformerVIUC3.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUC3_GetPointer, None, itkImageTransformerVIUC3)
itkImageTransformerVIUC3_swigregister = _itkImageTransformerPython.itkImageTransformerVIUC3_swigregister
itkImageTransformerVIUC3_swigregister(itkImageTransformerVIUC3)

def itkImageTransformerVIUC3_cast(obj):
    """itkImageTransformerVIUC3_cast(itkLightObject obj) -> itkImageTransformerVIUC3"""
    return _itkImageTransformerPython.itkImageTransformerVIUC3_cast(obj)

class itkImageTransformerVIUS2(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerVIUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerVIUS2 self, itkVectorImageUS2 image)
        SetInput(itkImageTransformerVIUS2 self, unsigned int arg0, itkVectorImageUS2 image)
        """
        return _itkImageTransformerPython.itkImageTransformerVIUS2_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerVIUS2 self) -> itkVectorImageUS2
        GetInput(itkImageTransformerVIUS2 self) -> itkVectorImageUS2
        GetInput(itkImageTransformerVIUS2 self, unsigned int idx) -> itkVectorImageUS2
        """
        return _itkImageTransformerPython.itkImageTransformerVIUS2_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerVIUS2 self, itkVectorImageUS2 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIUS2_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerVIUS2 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIUS2_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerVIUS2 self, itkVectorImageUS2 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIUS2_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerVIUS2 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIUS2_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerVIUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerVIUS2"""
        return _itkImageTransformerPython.itkImageTransformerVIUS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerVIUS2 self) -> itkImageTransformerVIUS2"""
        return _itkImageTransformerPython.itkImageTransformerVIUS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerVIUS2

        Create a new object of the class itkImageTransformerVIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerVIUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerVIUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerVIUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerVIUS2.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS2_SetInput, None, itkImageTransformerVIUS2)
itkImageTransformerVIUS2.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS2_GetInput, None, itkImageTransformerVIUS2)
itkImageTransformerVIUS2.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS2_PushBackInput, None, itkImageTransformerVIUS2)
itkImageTransformerVIUS2.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS2_PopBackInput, None, itkImageTransformerVIUS2)
itkImageTransformerVIUS2.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS2_PushFrontInput, None, itkImageTransformerVIUS2)
itkImageTransformerVIUS2.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS2_PopFrontInput, None, itkImageTransformerVIUS2)
itkImageTransformerVIUS2.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS2_GetPointer, None, itkImageTransformerVIUS2)
itkImageTransformerVIUS2_swigregister = _itkImageTransformerPython.itkImageTransformerVIUS2_swigregister
itkImageTransformerVIUS2_swigregister(itkImageTransformerVIUS2)

def itkImageTransformerVIUS2_cast(obj):
    """itkImageTransformerVIUS2_cast(itkLightObject obj) -> itkImageTransformerVIUS2"""
    return _itkImageTransformerPython.itkImageTransformerVIUS2_cast(obj)

class itkImageTransformerVIUS3(ITKCommonBasePython.itkProcessObject):
    """Proxy of C++ itkImageTransformerVIUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetInput(self, *args):
        """
        SetInput(itkImageTransformerVIUS3 self, itkVectorImageUS3 image)
        SetInput(itkImageTransformerVIUS3 self, unsigned int arg0, itkVectorImageUS3 image)
        """
        return _itkImageTransformerPython.itkImageTransformerVIUS3_SetInput(self, *args)


    def GetInput(self, *args):
        """
        GetInput(itkImageTransformerVIUS3 self) -> itkVectorImageUS3
        GetInput(itkImageTransformerVIUS3 self) -> itkVectorImageUS3
        GetInput(itkImageTransformerVIUS3 self, unsigned int idx) -> itkVectorImageUS3
        """
        return _itkImageTransformerPython.itkImageTransformerVIUS3_GetInput(self, *args)


    def PushBackInput(self, image):
        """PushBackInput(itkImageTransformerVIUS3 self, itkVectorImageUS3 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIUS3_PushBackInput(self, image)


    def PopBackInput(self):
        """PopBackInput(itkImageTransformerVIUS3 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIUS3_PopBackInput(self)


    def PushFrontInput(self, image):
        """PushFrontInput(itkImageTransformerVIUS3 self, itkVectorImageUS3 image)"""
        return _itkImageTransformerPython.itkImageTransformerVIUS3_PushFrontInput(self, image)


    def PopFrontInput(self):
        """PopFrontInput(itkImageTransformerVIUS3 self)"""
        return _itkImageTransformerPython.itkImageTransformerVIUS3_PopFrontInput(self)

    __swig_destroy__ = _itkImageTransformerPython.delete_itkImageTransformerVIUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkImageTransformerVIUS3"""
        return _itkImageTransformerPython.itkImageTransformerVIUS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkImageTransformerVIUS3 self) -> itkImageTransformerVIUS3"""
        return _itkImageTransformerPython.itkImageTransformerVIUS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkImageTransformerVIUS3

        Create a new object of the class itkImageTransformerVIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageTransformerVIUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkImageTransformerVIUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkImageTransformerVIUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkImageTransformerVIUS3.SetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS3_SetInput, None, itkImageTransformerVIUS3)
itkImageTransformerVIUS3.GetInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS3_GetInput, None, itkImageTransformerVIUS3)
itkImageTransformerVIUS3.PushBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS3_PushBackInput, None, itkImageTransformerVIUS3)
itkImageTransformerVIUS3.PopBackInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS3_PopBackInput, None, itkImageTransformerVIUS3)
itkImageTransformerVIUS3.PushFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS3_PushFrontInput, None, itkImageTransformerVIUS3)
itkImageTransformerVIUS3.PopFrontInput = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS3_PopFrontInput, None, itkImageTransformerVIUS3)
itkImageTransformerVIUS3.GetPointer = new_instancemethod(_itkImageTransformerPython.itkImageTransformerVIUS3_GetPointer, None, itkImageTransformerVIUS3)
itkImageTransformerVIUS3_swigregister = _itkImageTransformerPython.itkImageTransformerVIUS3_swigregister
itkImageTransformerVIUS3_swigregister(itkImageTransformerVIUS3)

def itkImageTransformerVIUS3_cast(obj):
    """itkImageTransformerVIUS3_cast(itkLightObject obj) -> itkImageTransformerVIUS3"""
    return _itkImageTransformerPython.itkImageTransformerVIUS3_cast(obj)



