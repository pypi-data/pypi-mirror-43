# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkOtsuThresholdImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkOtsuThresholdImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkOtsuThresholdImageFilterPython
            return _itkOtsuThresholdImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkOtsuThresholdImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkOtsuThresholdImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkOtsuThresholdImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkHistogramThresholdImageFilterPython
import ITKCommonBasePython
import pyBasePython
import itkHistogramThresholdCalculatorPython
import itkSimpleDataObjectDecoratorPython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkRGBAPixelPython
import itkArrayPython
import itkHistogramPython
import itkSamplePython
import itkImageToImageFilterAPython
import itkImagePython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython

def itkOtsuThresholdImageFilterIF3IUS3_New():
  return itkOtsuThresholdImageFilterIF3IUS3.New()


def itkOtsuThresholdImageFilterIF2IUS2_New():
  return itkOtsuThresholdImageFilterIF2IUS2.New()


def itkOtsuThresholdImageFilterIF3IUC3_New():
  return itkOtsuThresholdImageFilterIF3IUC3.New()


def itkOtsuThresholdImageFilterIF2IUC2_New():
  return itkOtsuThresholdImageFilterIF2IUC2.New()


def itkOtsuThresholdImageFilterIF3ISS3_New():
  return itkOtsuThresholdImageFilterIF3ISS3.New()


def itkOtsuThresholdImageFilterIF2ISS2_New():
  return itkOtsuThresholdImageFilterIF2ISS2.New()


def itkOtsuThresholdImageFilterIUS3IUS3_New():
  return itkOtsuThresholdImageFilterIUS3IUS3.New()


def itkOtsuThresholdImageFilterIUS2IUS2_New():
  return itkOtsuThresholdImageFilterIUS2IUS2.New()


def itkOtsuThresholdImageFilterIUS3IUC3_New():
  return itkOtsuThresholdImageFilterIUS3IUC3.New()


def itkOtsuThresholdImageFilterIUS2IUC2_New():
  return itkOtsuThresholdImageFilterIUS2IUC2.New()


def itkOtsuThresholdImageFilterIUS3ISS3_New():
  return itkOtsuThresholdImageFilterIUS3ISS3.New()


def itkOtsuThresholdImageFilterIUS2ISS2_New():
  return itkOtsuThresholdImageFilterIUS2ISS2.New()


def itkOtsuThresholdImageFilterIUC3IUS3_New():
  return itkOtsuThresholdImageFilterIUC3IUS3.New()


def itkOtsuThresholdImageFilterIUC2IUS2_New():
  return itkOtsuThresholdImageFilterIUC2IUS2.New()


def itkOtsuThresholdImageFilterIUC3IUC3_New():
  return itkOtsuThresholdImageFilterIUC3IUC3.New()


def itkOtsuThresholdImageFilterIUC2IUC2_New():
  return itkOtsuThresholdImageFilterIUC2IUC2.New()


def itkOtsuThresholdImageFilterIUC3ISS3_New():
  return itkOtsuThresholdImageFilterIUC3ISS3.New()


def itkOtsuThresholdImageFilterIUC2ISS2_New():
  return itkOtsuThresholdImageFilterIUC2ISS2.New()


def itkOtsuThresholdImageFilterISS3IUS3_New():
  return itkOtsuThresholdImageFilterISS3IUS3.New()


def itkOtsuThresholdImageFilterISS2IUS2_New():
  return itkOtsuThresholdImageFilterISS2IUS2.New()


def itkOtsuThresholdImageFilterISS3IUC3_New():
  return itkOtsuThresholdImageFilterISS3IUC3.New()


def itkOtsuThresholdImageFilterISS2IUC2_New():
  return itkOtsuThresholdImageFilterISS2IUC2.New()


def itkOtsuThresholdImageFilterISS3ISS3_New():
  return itkOtsuThresholdImageFilterISS3ISS3.New()


def itkOtsuThresholdImageFilterISS2ISS2_New():
  return itkOtsuThresholdImageFilterISS2ISS2.New()

class itkOtsuThresholdImageFilterIF2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2ISS2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIF2ISS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIF2ISS2 self) -> itkOtsuThresholdImageFilterIF2ISS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF2ISS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIF2ISS2 self) -> itkOtsuThresholdImageFilterIF2ISS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF2ISS2

        Create a new object of the class itkOtsuThresholdImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIF2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIF2ISS2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_Clone, None, itkOtsuThresholdImageFilterIF2ISS2)
itkOtsuThresholdImageFilterIF2ISS2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_GetPointer, None, itkOtsuThresholdImageFilterIF2ISS2)
itkOtsuThresholdImageFilterIF2ISS2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_swigregister
itkOtsuThresholdImageFilterIF2ISS2_swigregister(itkOtsuThresholdImageFilterIF2ISS2)

def itkOtsuThresholdImageFilterIF2ISS2___New_orig__():
    """itkOtsuThresholdImageFilterIF2ISS2___New_orig__() -> itkOtsuThresholdImageFilterIF2ISS2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2___New_orig__()

def itkOtsuThresholdImageFilterIF2ISS2_cast(obj):
    """itkOtsuThresholdImageFilterIF2ISS2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF2ISS2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2ISS2_cast(obj)

class itkOtsuThresholdImageFilterIF2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUC2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIF2IUC2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIF2IUC2 self) -> itkOtsuThresholdImageFilterIF2IUC2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF2IUC2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIF2IUC2 self) -> itkOtsuThresholdImageFilterIF2IUC2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF2IUC2

        Create a new object of the class itkOtsuThresholdImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIF2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIF2IUC2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_Clone, None, itkOtsuThresholdImageFilterIF2IUC2)
itkOtsuThresholdImageFilterIF2IUC2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_GetPointer, None, itkOtsuThresholdImageFilterIF2IUC2)
itkOtsuThresholdImageFilterIF2IUC2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_swigregister
itkOtsuThresholdImageFilterIF2IUC2_swigregister(itkOtsuThresholdImageFilterIF2IUC2)

def itkOtsuThresholdImageFilterIF2IUC2___New_orig__():
    """itkOtsuThresholdImageFilterIF2IUC2___New_orig__() -> itkOtsuThresholdImageFilterIF2IUC2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2___New_orig__()

def itkOtsuThresholdImageFilterIF2IUC2_cast(obj):
    """itkOtsuThresholdImageFilterIF2IUC2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF2IUC2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUC2_cast(obj)

class itkOtsuThresholdImageFilterIF2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF2IUS2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIF2IUS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIF2IUS2 self) -> itkOtsuThresholdImageFilterIF2IUS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF2IUS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIF2IUS2 self) -> itkOtsuThresholdImageFilterIF2IUS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF2IUS2

        Create a new object of the class itkOtsuThresholdImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIF2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIF2IUS2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_Clone, None, itkOtsuThresholdImageFilterIF2IUS2)
itkOtsuThresholdImageFilterIF2IUS2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_GetPointer, None, itkOtsuThresholdImageFilterIF2IUS2)
itkOtsuThresholdImageFilterIF2IUS2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_swigregister
itkOtsuThresholdImageFilterIF2IUS2_swigregister(itkOtsuThresholdImageFilterIF2IUS2)

def itkOtsuThresholdImageFilterIF2IUS2___New_orig__():
    """itkOtsuThresholdImageFilterIF2IUS2___New_orig__() -> itkOtsuThresholdImageFilterIF2IUS2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2___New_orig__()

def itkOtsuThresholdImageFilterIF2IUS2_cast(obj):
    """itkOtsuThresholdImageFilterIF2IUS2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF2IUS2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF2IUS2_cast(obj)

class itkOtsuThresholdImageFilterIF3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3ISS3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIF3ISS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIF3ISS3 self) -> itkOtsuThresholdImageFilterIF3ISS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF3ISS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIF3ISS3 self) -> itkOtsuThresholdImageFilterIF3ISS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF3ISS3

        Create a new object of the class itkOtsuThresholdImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIF3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIF3ISS3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_Clone, None, itkOtsuThresholdImageFilterIF3ISS3)
itkOtsuThresholdImageFilterIF3ISS3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_GetPointer, None, itkOtsuThresholdImageFilterIF3ISS3)
itkOtsuThresholdImageFilterIF3ISS3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_swigregister
itkOtsuThresholdImageFilterIF3ISS3_swigregister(itkOtsuThresholdImageFilterIF3ISS3)

def itkOtsuThresholdImageFilterIF3ISS3___New_orig__():
    """itkOtsuThresholdImageFilterIF3ISS3___New_orig__() -> itkOtsuThresholdImageFilterIF3ISS3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3___New_orig__()

def itkOtsuThresholdImageFilterIF3ISS3_cast(obj):
    """itkOtsuThresholdImageFilterIF3ISS3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF3ISS3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3ISS3_cast(obj)

class itkOtsuThresholdImageFilterIF3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUC3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIF3IUC3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIF3IUC3 self) -> itkOtsuThresholdImageFilterIF3IUC3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF3IUC3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIF3IUC3 self) -> itkOtsuThresholdImageFilterIF3IUC3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF3IUC3

        Create a new object of the class itkOtsuThresholdImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIF3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIF3IUC3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_Clone, None, itkOtsuThresholdImageFilterIF3IUC3)
itkOtsuThresholdImageFilterIF3IUC3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_GetPointer, None, itkOtsuThresholdImageFilterIF3IUC3)
itkOtsuThresholdImageFilterIF3IUC3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_swigregister
itkOtsuThresholdImageFilterIF3IUC3_swigregister(itkOtsuThresholdImageFilterIF3IUC3)

def itkOtsuThresholdImageFilterIF3IUC3___New_orig__():
    """itkOtsuThresholdImageFilterIF3IUC3___New_orig__() -> itkOtsuThresholdImageFilterIF3IUC3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3___New_orig__()

def itkOtsuThresholdImageFilterIF3IUC3_cast(obj):
    """itkOtsuThresholdImageFilterIF3IUC3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF3IUC3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUC3_cast(obj)

class itkOtsuThresholdImageFilterIF3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIF3IUS3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIF3IUS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIF3IUS3 self) -> itkOtsuThresholdImageFilterIF3IUS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIF3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF3IUS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIF3IUS3 self) -> itkOtsuThresholdImageFilterIF3IUS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIF3IUS3

        Create a new object of the class itkOtsuThresholdImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIF3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIF3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIF3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIF3IUS3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_Clone, None, itkOtsuThresholdImageFilterIF3IUS3)
itkOtsuThresholdImageFilterIF3IUS3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_GetPointer, None, itkOtsuThresholdImageFilterIF3IUS3)
itkOtsuThresholdImageFilterIF3IUS3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_swigregister
itkOtsuThresholdImageFilterIF3IUS3_swigregister(itkOtsuThresholdImageFilterIF3IUS3)

def itkOtsuThresholdImageFilterIF3IUS3___New_orig__():
    """itkOtsuThresholdImageFilterIF3IUS3___New_orig__() -> itkOtsuThresholdImageFilterIF3IUS3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3___New_orig__()

def itkOtsuThresholdImageFilterIF3IUS3_cast(obj):
    """itkOtsuThresholdImageFilterIF3IUS3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIF3IUS3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIF3IUS3_cast(obj)

class itkOtsuThresholdImageFilterISS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2ISS2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterISS2ISS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterISS2ISS2 self) -> itkOtsuThresholdImageFilterISS2ISS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS2ISS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterISS2ISS2 self) -> itkOtsuThresholdImageFilterISS2ISS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS2ISS2

        Create a new object of the class itkOtsuThresholdImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterISS2ISS2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_Clone, None, itkOtsuThresholdImageFilterISS2ISS2)
itkOtsuThresholdImageFilterISS2ISS2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_GetPointer, None, itkOtsuThresholdImageFilterISS2ISS2)
itkOtsuThresholdImageFilterISS2ISS2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_swigregister
itkOtsuThresholdImageFilterISS2ISS2_swigregister(itkOtsuThresholdImageFilterISS2ISS2)

def itkOtsuThresholdImageFilterISS2ISS2___New_orig__():
    """itkOtsuThresholdImageFilterISS2ISS2___New_orig__() -> itkOtsuThresholdImageFilterISS2ISS2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2___New_orig__()

def itkOtsuThresholdImageFilterISS2ISS2_cast(obj):
    """itkOtsuThresholdImageFilterISS2ISS2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS2ISS2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2ISS2_cast(obj)

class itkOtsuThresholdImageFilterISS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUC2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterISS2IUC2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterISS2IUC2 self) -> itkOtsuThresholdImageFilterISS2IUC2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS2IUC2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterISS2IUC2 self) -> itkOtsuThresholdImageFilterISS2IUC2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS2IUC2

        Create a new object of the class itkOtsuThresholdImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterISS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterISS2IUC2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_Clone, None, itkOtsuThresholdImageFilterISS2IUC2)
itkOtsuThresholdImageFilterISS2IUC2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_GetPointer, None, itkOtsuThresholdImageFilterISS2IUC2)
itkOtsuThresholdImageFilterISS2IUC2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_swigregister
itkOtsuThresholdImageFilterISS2IUC2_swigregister(itkOtsuThresholdImageFilterISS2IUC2)

def itkOtsuThresholdImageFilterISS2IUC2___New_orig__():
    """itkOtsuThresholdImageFilterISS2IUC2___New_orig__() -> itkOtsuThresholdImageFilterISS2IUC2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2___New_orig__()

def itkOtsuThresholdImageFilterISS2IUC2_cast(obj):
    """itkOtsuThresholdImageFilterISS2IUC2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS2IUC2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUC2_cast(obj)

class itkOtsuThresholdImageFilterISS2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS2IUS2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterISS2IUS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterISS2IUS2 self) -> itkOtsuThresholdImageFilterISS2IUS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS2IUS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterISS2IUS2 self) -> itkOtsuThresholdImageFilterISS2IUS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS2IUS2

        Create a new object of the class itkOtsuThresholdImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterISS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterISS2IUS2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_Clone, None, itkOtsuThresholdImageFilterISS2IUS2)
itkOtsuThresholdImageFilterISS2IUS2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_GetPointer, None, itkOtsuThresholdImageFilterISS2IUS2)
itkOtsuThresholdImageFilterISS2IUS2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_swigregister
itkOtsuThresholdImageFilterISS2IUS2_swigregister(itkOtsuThresholdImageFilterISS2IUS2)

def itkOtsuThresholdImageFilterISS2IUS2___New_orig__():
    """itkOtsuThresholdImageFilterISS2IUS2___New_orig__() -> itkOtsuThresholdImageFilterISS2IUS2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2___New_orig__()

def itkOtsuThresholdImageFilterISS2IUS2_cast(obj):
    """itkOtsuThresholdImageFilterISS2IUS2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS2IUS2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS2IUS2_cast(obj)

class itkOtsuThresholdImageFilterISS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3ISS3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterISS3ISS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterISS3ISS3 self) -> itkOtsuThresholdImageFilterISS3ISS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS3ISS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterISS3ISS3 self) -> itkOtsuThresholdImageFilterISS3ISS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS3ISS3

        Create a new object of the class itkOtsuThresholdImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterISS3ISS3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_Clone, None, itkOtsuThresholdImageFilterISS3ISS3)
itkOtsuThresholdImageFilterISS3ISS3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_GetPointer, None, itkOtsuThresholdImageFilterISS3ISS3)
itkOtsuThresholdImageFilterISS3ISS3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_swigregister
itkOtsuThresholdImageFilterISS3ISS3_swigregister(itkOtsuThresholdImageFilterISS3ISS3)

def itkOtsuThresholdImageFilterISS3ISS3___New_orig__():
    """itkOtsuThresholdImageFilterISS3ISS3___New_orig__() -> itkOtsuThresholdImageFilterISS3ISS3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3___New_orig__()

def itkOtsuThresholdImageFilterISS3ISS3_cast(obj):
    """itkOtsuThresholdImageFilterISS3ISS3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS3ISS3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3ISS3_cast(obj)

class itkOtsuThresholdImageFilterISS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUC3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterISS3IUC3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterISS3IUC3 self) -> itkOtsuThresholdImageFilterISS3IUC3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS3IUC3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterISS3IUC3 self) -> itkOtsuThresholdImageFilterISS3IUC3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS3IUC3

        Create a new object of the class itkOtsuThresholdImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterISS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterISS3IUC3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_Clone, None, itkOtsuThresholdImageFilterISS3IUC3)
itkOtsuThresholdImageFilterISS3IUC3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_GetPointer, None, itkOtsuThresholdImageFilterISS3IUC3)
itkOtsuThresholdImageFilterISS3IUC3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_swigregister
itkOtsuThresholdImageFilterISS3IUC3_swigregister(itkOtsuThresholdImageFilterISS3IUC3)

def itkOtsuThresholdImageFilterISS3IUC3___New_orig__():
    """itkOtsuThresholdImageFilterISS3IUC3___New_orig__() -> itkOtsuThresholdImageFilterISS3IUC3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3___New_orig__()

def itkOtsuThresholdImageFilterISS3IUC3_cast(obj):
    """itkOtsuThresholdImageFilterISS3IUC3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS3IUC3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUC3_cast(obj)

class itkOtsuThresholdImageFilterISS3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterISS3IUS3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterISS3IUS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterISS3IUS3 self) -> itkOtsuThresholdImageFilterISS3IUS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterISS3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS3IUS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterISS3IUS3 self) -> itkOtsuThresholdImageFilterISS3IUS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterISS3IUS3

        Create a new object of the class itkOtsuThresholdImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterISS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterISS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterISS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterISS3IUS3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_Clone, None, itkOtsuThresholdImageFilterISS3IUS3)
itkOtsuThresholdImageFilterISS3IUS3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_GetPointer, None, itkOtsuThresholdImageFilterISS3IUS3)
itkOtsuThresholdImageFilterISS3IUS3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_swigregister
itkOtsuThresholdImageFilterISS3IUS3_swigregister(itkOtsuThresholdImageFilterISS3IUS3)

def itkOtsuThresholdImageFilterISS3IUS3___New_orig__():
    """itkOtsuThresholdImageFilterISS3IUS3___New_orig__() -> itkOtsuThresholdImageFilterISS3IUS3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3___New_orig__()

def itkOtsuThresholdImageFilterISS3IUS3_cast(obj):
    """itkOtsuThresholdImageFilterISS3IUS3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterISS3IUS3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterISS3IUS3_cast(obj)

class itkOtsuThresholdImageFilterIUC2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2ISS2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUC2ISS2 self) -> itkOtsuThresholdImageFilterIUC2ISS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC2ISS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUC2ISS2 self) -> itkOtsuThresholdImageFilterIUC2ISS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC2ISS2

        Create a new object of the class itkOtsuThresholdImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUC2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUC2ISS2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_Clone, None, itkOtsuThresholdImageFilterIUC2ISS2)
itkOtsuThresholdImageFilterIUC2ISS2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_GetPointer, None, itkOtsuThresholdImageFilterIUC2ISS2)
itkOtsuThresholdImageFilterIUC2ISS2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_swigregister
itkOtsuThresholdImageFilterIUC2ISS2_swigregister(itkOtsuThresholdImageFilterIUC2ISS2)

def itkOtsuThresholdImageFilterIUC2ISS2___New_orig__():
    """itkOtsuThresholdImageFilterIUC2ISS2___New_orig__() -> itkOtsuThresholdImageFilterIUC2ISS2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2___New_orig__()

def itkOtsuThresholdImageFilterIUC2ISS2_cast(obj):
    """itkOtsuThresholdImageFilterIUC2ISS2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC2ISS2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2ISS2_cast(obj)

class itkOtsuThresholdImageFilterIUC2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUC2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUC2IUC2 self) -> itkOtsuThresholdImageFilterIUC2IUC2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC2IUC2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUC2IUC2 self) -> itkOtsuThresholdImageFilterIUC2IUC2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC2IUC2

        Create a new object of the class itkOtsuThresholdImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUC2IUC2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_Clone, None, itkOtsuThresholdImageFilterIUC2IUC2)
itkOtsuThresholdImageFilterIUC2IUC2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_GetPointer, None, itkOtsuThresholdImageFilterIUC2IUC2)
itkOtsuThresholdImageFilterIUC2IUC2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_swigregister
itkOtsuThresholdImageFilterIUC2IUC2_swigregister(itkOtsuThresholdImageFilterIUC2IUC2)

def itkOtsuThresholdImageFilterIUC2IUC2___New_orig__():
    """itkOtsuThresholdImageFilterIUC2IUC2___New_orig__() -> itkOtsuThresholdImageFilterIUC2IUC2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2___New_orig__()

def itkOtsuThresholdImageFilterIUC2IUC2_cast(obj):
    """itkOtsuThresholdImageFilterIUC2IUC2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC2IUC2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUC2_cast(obj)

class itkOtsuThresholdImageFilterIUC2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC2IUS2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUC2IUS2 self) -> itkOtsuThresholdImageFilterIUC2IUS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC2IUS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUC2IUS2 self) -> itkOtsuThresholdImageFilterIUC2IUS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC2IUS2

        Create a new object of the class itkOtsuThresholdImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUC2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUC2IUS2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_Clone, None, itkOtsuThresholdImageFilterIUC2IUS2)
itkOtsuThresholdImageFilterIUC2IUS2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_GetPointer, None, itkOtsuThresholdImageFilterIUC2IUS2)
itkOtsuThresholdImageFilterIUC2IUS2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_swigregister
itkOtsuThresholdImageFilterIUC2IUS2_swigregister(itkOtsuThresholdImageFilterIUC2IUS2)

def itkOtsuThresholdImageFilterIUC2IUS2___New_orig__():
    """itkOtsuThresholdImageFilterIUC2IUS2___New_orig__() -> itkOtsuThresholdImageFilterIUC2IUS2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2___New_orig__()

def itkOtsuThresholdImageFilterIUC2IUS2_cast(obj):
    """itkOtsuThresholdImageFilterIUC2IUS2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC2IUS2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC2IUS2_cast(obj)

class itkOtsuThresholdImageFilterIUC3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3ISS3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUC3ISS3 self) -> itkOtsuThresholdImageFilterIUC3ISS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC3ISS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUC3ISS3 self) -> itkOtsuThresholdImageFilterIUC3ISS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC3ISS3

        Create a new object of the class itkOtsuThresholdImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUC3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUC3ISS3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_Clone, None, itkOtsuThresholdImageFilterIUC3ISS3)
itkOtsuThresholdImageFilterIUC3ISS3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_GetPointer, None, itkOtsuThresholdImageFilterIUC3ISS3)
itkOtsuThresholdImageFilterIUC3ISS3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_swigregister
itkOtsuThresholdImageFilterIUC3ISS3_swigregister(itkOtsuThresholdImageFilterIUC3ISS3)

def itkOtsuThresholdImageFilterIUC3ISS3___New_orig__():
    """itkOtsuThresholdImageFilterIUC3ISS3___New_orig__() -> itkOtsuThresholdImageFilterIUC3ISS3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3___New_orig__()

def itkOtsuThresholdImageFilterIUC3ISS3_cast(obj):
    """itkOtsuThresholdImageFilterIUC3ISS3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC3ISS3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3ISS3_cast(obj)

class itkOtsuThresholdImageFilterIUC3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUC3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUC3IUC3 self) -> itkOtsuThresholdImageFilterIUC3IUC3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC3IUC3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUC3IUC3 self) -> itkOtsuThresholdImageFilterIUC3IUC3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC3IUC3

        Create a new object of the class itkOtsuThresholdImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUC3IUC3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_Clone, None, itkOtsuThresholdImageFilterIUC3IUC3)
itkOtsuThresholdImageFilterIUC3IUC3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_GetPointer, None, itkOtsuThresholdImageFilterIUC3IUC3)
itkOtsuThresholdImageFilterIUC3IUC3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_swigregister
itkOtsuThresholdImageFilterIUC3IUC3_swigregister(itkOtsuThresholdImageFilterIUC3IUC3)

def itkOtsuThresholdImageFilterIUC3IUC3___New_orig__():
    """itkOtsuThresholdImageFilterIUC3IUC3___New_orig__() -> itkOtsuThresholdImageFilterIUC3IUC3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3___New_orig__()

def itkOtsuThresholdImageFilterIUC3IUC3_cast(obj):
    """itkOtsuThresholdImageFilterIUC3IUC3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC3IUC3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUC3_cast(obj)

class itkOtsuThresholdImageFilterIUC3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUC3IUS3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUC3IUS3 self) -> itkOtsuThresholdImageFilterIUC3IUS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUC3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC3IUS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUC3IUS3 self) -> itkOtsuThresholdImageFilterIUC3IUS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUC3IUS3

        Create a new object of the class itkOtsuThresholdImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUC3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUC3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUC3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUC3IUS3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_Clone, None, itkOtsuThresholdImageFilterIUC3IUS3)
itkOtsuThresholdImageFilterIUC3IUS3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_GetPointer, None, itkOtsuThresholdImageFilterIUC3IUS3)
itkOtsuThresholdImageFilterIUC3IUS3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_swigregister
itkOtsuThresholdImageFilterIUC3IUS3_swigregister(itkOtsuThresholdImageFilterIUC3IUS3)

def itkOtsuThresholdImageFilterIUC3IUS3___New_orig__():
    """itkOtsuThresholdImageFilterIUC3IUS3___New_orig__() -> itkOtsuThresholdImageFilterIUC3IUS3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3___New_orig__()

def itkOtsuThresholdImageFilterIUC3IUS3_cast(obj):
    """itkOtsuThresholdImageFilterIUC3IUS3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUC3IUS3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUC3IUS3_cast(obj)

class itkOtsuThresholdImageFilterIUS2ISS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2ISS2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUS2ISS2 self) -> itkOtsuThresholdImageFilterIUS2ISS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS2ISS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUS2ISS2 self) -> itkOtsuThresholdImageFilterIUS2ISS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS2ISS2

        Create a new object of the class itkOtsuThresholdImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUS2ISS2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_Clone, None, itkOtsuThresholdImageFilterIUS2ISS2)
itkOtsuThresholdImageFilterIUS2ISS2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_GetPointer, None, itkOtsuThresholdImageFilterIUS2ISS2)
itkOtsuThresholdImageFilterIUS2ISS2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_swigregister
itkOtsuThresholdImageFilterIUS2ISS2_swigregister(itkOtsuThresholdImageFilterIUS2ISS2)

def itkOtsuThresholdImageFilterIUS2ISS2___New_orig__():
    """itkOtsuThresholdImageFilterIUS2ISS2___New_orig__() -> itkOtsuThresholdImageFilterIUS2ISS2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2___New_orig__()

def itkOtsuThresholdImageFilterIUS2ISS2_cast(obj):
    """itkOtsuThresholdImageFilterIUS2ISS2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS2ISS2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2ISS2_cast(obj)

class itkOtsuThresholdImageFilterIUS2IUC2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUC2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUS2IUC2 self) -> itkOtsuThresholdImageFilterIUS2IUC2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS2IUC2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUS2IUC2 self) -> itkOtsuThresholdImageFilterIUS2IUC2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS2IUC2

        Create a new object of the class itkOtsuThresholdImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUS2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUS2IUC2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_Clone, None, itkOtsuThresholdImageFilterIUS2IUC2)
itkOtsuThresholdImageFilterIUS2IUC2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_GetPointer, None, itkOtsuThresholdImageFilterIUS2IUC2)
itkOtsuThresholdImageFilterIUS2IUC2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_swigregister
itkOtsuThresholdImageFilterIUS2IUC2_swigregister(itkOtsuThresholdImageFilterIUS2IUC2)

def itkOtsuThresholdImageFilterIUS2IUC2___New_orig__():
    """itkOtsuThresholdImageFilterIUS2IUC2___New_orig__() -> itkOtsuThresholdImageFilterIUS2IUC2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2___New_orig__()

def itkOtsuThresholdImageFilterIUS2IUC2_cast(obj):
    """itkOtsuThresholdImageFilterIUS2IUC2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS2IUC2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUC2_cast(obj)

class itkOtsuThresholdImageFilterIUS2IUS2(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS2IUS2):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUS2IUS2 self) -> itkOtsuThresholdImageFilterIUS2IUS2_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS2IUS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUS2IUS2 self) -> itkOtsuThresholdImageFilterIUS2IUS2"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS2IUS2

        Create a new object of the class itkOtsuThresholdImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUS2IUS2.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_Clone, None, itkOtsuThresholdImageFilterIUS2IUS2)
itkOtsuThresholdImageFilterIUS2IUS2.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_GetPointer, None, itkOtsuThresholdImageFilterIUS2IUS2)
itkOtsuThresholdImageFilterIUS2IUS2_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_swigregister
itkOtsuThresholdImageFilterIUS2IUS2_swigregister(itkOtsuThresholdImageFilterIUS2IUS2)

def itkOtsuThresholdImageFilterIUS2IUS2___New_orig__():
    """itkOtsuThresholdImageFilterIUS2IUS2___New_orig__() -> itkOtsuThresholdImageFilterIUS2IUS2_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2___New_orig__()

def itkOtsuThresholdImageFilterIUS2IUS2_cast(obj):
    """itkOtsuThresholdImageFilterIUS2IUS2_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS2IUS2"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS2IUS2_cast(obj)

class itkOtsuThresholdImageFilterIUS3ISS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3ISS3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUS3ISS3 self) -> itkOtsuThresholdImageFilterIUS3ISS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS3ISS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUS3ISS3 self) -> itkOtsuThresholdImageFilterIUS3ISS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS3ISS3

        Create a new object of the class itkOtsuThresholdImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUS3ISS3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_Clone, None, itkOtsuThresholdImageFilterIUS3ISS3)
itkOtsuThresholdImageFilterIUS3ISS3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_GetPointer, None, itkOtsuThresholdImageFilterIUS3ISS3)
itkOtsuThresholdImageFilterIUS3ISS3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_swigregister
itkOtsuThresholdImageFilterIUS3ISS3_swigregister(itkOtsuThresholdImageFilterIUS3ISS3)

def itkOtsuThresholdImageFilterIUS3ISS3___New_orig__():
    """itkOtsuThresholdImageFilterIUS3ISS3___New_orig__() -> itkOtsuThresholdImageFilterIUS3ISS3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3___New_orig__()

def itkOtsuThresholdImageFilterIUS3ISS3_cast(obj):
    """itkOtsuThresholdImageFilterIUS3ISS3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS3ISS3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3ISS3_cast(obj)

class itkOtsuThresholdImageFilterIUS3IUC3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUC3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUS3IUC3 self) -> itkOtsuThresholdImageFilterIUS3IUC3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS3IUC3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUS3IUC3 self) -> itkOtsuThresholdImageFilterIUS3IUC3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS3IUC3

        Create a new object of the class itkOtsuThresholdImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUS3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUS3IUC3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_Clone, None, itkOtsuThresholdImageFilterIUS3IUC3)
itkOtsuThresholdImageFilterIUS3IUC3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_GetPointer, None, itkOtsuThresholdImageFilterIUS3IUC3)
itkOtsuThresholdImageFilterIUS3IUC3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_swigregister
itkOtsuThresholdImageFilterIUS3IUC3_swigregister(itkOtsuThresholdImageFilterIUS3IUC3)

def itkOtsuThresholdImageFilterIUS3IUC3___New_orig__():
    """itkOtsuThresholdImageFilterIUS3IUC3___New_orig__() -> itkOtsuThresholdImageFilterIUS3IUC3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3___New_orig__()

def itkOtsuThresholdImageFilterIUS3IUC3_cast(obj):
    """itkOtsuThresholdImageFilterIUS3IUC3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS3IUC3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUC3_cast(obj)

class itkOtsuThresholdImageFilterIUS3IUS3(itkHistogramThresholdImageFilterPython.itkHistogramThresholdImageFilterIUS3IUS3):
    """


    Threshold an image using the Otsu Threshold.

    This filter creates a binary thresholded image that separates an image
    into foreground and background components. The filter computes the
    threshold using the OtsuThresholdCalculator and applies that threshold
    to the input image using the BinaryThresholdImageFilter.

    Richard Beare

    Gaetan Lehmann. Biologie du Developpement et de la Reproduction, INRA
    de Jouy-en-Josas, France.  This implementation was taken from the
    Insight Journal paper:https://hdl.handle.net/10380/3279 orhttp://www
    .insight-journal.org/browse/publication/811

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/Segmentation/OtsuThresholdImageF
    ilter Separate foreground and background using Otsu's method

    See:   HistogramThresholdImageFilter

    C++ includes: itkOtsuThresholdImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkOtsuThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkOtsuThresholdImageFilterIUS3IUS3 self) -> itkOtsuThresholdImageFilterIUS3IUS3_Pointer"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_Clone(self)

    __swig_destroy__ = _itkOtsuThresholdImageFilterPython.delete_itkOtsuThresholdImageFilterIUS3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS3IUS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkOtsuThresholdImageFilterIUS3IUS3 self) -> itkOtsuThresholdImageFilterIUS3IUS3"""
        return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkOtsuThresholdImageFilterIUS3IUS3

        Create a new object of the class itkOtsuThresholdImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkOtsuThresholdImageFilterIUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkOtsuThresholdImageFilterIUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkOtsuThresholdImageFilterIUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkOtsuThresholdImageFilterIUS3IUS3.Clone = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_Clone, None, itkOtsuThresholdImageFilterIUS3IUS3)
itkOtsuThresholdImageFilterIUS3IUS3.GetPointer = new_instancemethod(_itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_GetPointer, None, itkOtsuThresholdImageFilterIUS3IUS3)
itkOtsuThresholdImageFilterIUS3IUS3_swigregister = _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_swigregister
itkOtsuThresholdImageFilterIUS3IUS3_swigregister(itkOtsuThresholdImageFilterIUS3IUS3)

def itkOtsuThresholdImageFilterIUS3IUS3___New_orig__():
    """itkOtsuThresholdImageFilterIUS3IUS3___New_orig__() -> itkOtsuThresholdImageFilterIUS3IUS3_Pointer"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3___New_orig__()

def itkOtsuThresholdImageFilterIUS3IUS3_cast(obj):
    """itkOtsuThresholdImageFilterIUS3IUS3_cast(itkLightObject obj) -> itkOtsuThresholdImageFilterIUS3IUS3"""
    return _itkOtsuThresholdImageFilterPython.itkOtsuThresholdImageFilterIUS3IUS3_cast(obj)



