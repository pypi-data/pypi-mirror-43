# coding=utf-8
# --------------------------------------------------------------------------
# Copyright (c) Microsoft Corporation. All rights reserved.
# Licensed under the MIT License. See License.txt in the project root for
# license information.
#
# Code generated by Microsoft (R) AutoRest Code Generator 2.3.33.0
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.service_client import ServiceClient
from msrest import Configuration, Serializer, Deserializer
from .version import VERSION
from msrest.exceptions import HttpOperationError
from .operations.artifact_operations import ArtifactOperations
from .operations.data_store_operations import DataStoreOperations
from .operations.jasmine_operations import JasmineOperations
from .operations.model_operations import ModelOperations
from .operations.asset_operations import AssetOperations
from .operations.image_operations import ImageOperations
from .operations.operations import Operations
from .operations.swagger_operations import SwaggerOperations
from .operations.legacy_events_operations import LegacyEventsOperations
from .operations.legacy_run_operations import LegacyRunOperations
from .operations.legacy_runmetric_operations import LegacyRunmetricOperations
from .operations.events_operations import EventsOperations
from .operations.experiment_operations import ExperimentOperations
from .operations.run_operations import RunOperations
from .operations.run_metric_operations import RunMetricOperations
from .operations.run_artifact_operations import RunArtifactOperations
from .operations.snapshot_operations import SnapshotOperations
from . import models


class RestClientConfiguration(Configuration):
    """Configuration for RestClient
    Note that all parameters used to create this instance are saved as instance
    attributes.

    :param description: The description of the object.
    :type description: str
    :param expand: The option to show model details
    :type expand: bool
    :param credentials: Subscription credentials which uniquely identify
     client subscription.
    :type credentials: None
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, description=None, expand=None, base_url=None):

        if credentials is None:
            raise ValueError("Parameter 'credentials' must not be None.")
        if not base_url:
            base_url = 'http://localhost'

        super(RestClientConfiguration, self).__init__(base_url)

        self.add_user_agent('azureml._restclient/{}'.format(VERSION))

        self.description = description
        self.expand = expand
        self.credentials = credentials


class RestClient(object):
    """These APIs allow end users to manage Azure Machine Learning Models, Assets, Images, and Services.

    :ivar config: Configuration for client.
    :vartype config: RestClientConfiguration

    :ivar artifact: Artifact operations
    :vartype artifact: _restclient.operations.ArtifactOperations
    :ivar data_store: DataStore operations
    :vartype data_store: _restclient.operations.DataStoreOperations
    :ivar jasmine: Jasmine operations
    :vartype jasmine: _restclient.operations.JasmineOperations
    :ivar model: Model operations
    :vartype model: _restclient.operations.ModelOperations
    :ivar asset: Asset operations
    :vartype asset: _restclient.operations.AssetOperations
    :ivar image: Image operations
    :vartype image: _restclient.operations.ImageOperations
    :ivar operations: Operations operations
    :vartype operations: _restclient.operations.Operations
    :ivar swagger: Swagger operations
    :vartype swagger: _restclient.operations.SwaggerOperations
    :ivar legacy_events: LegacyEvents operations
    :vartype legacy_events: _restclient.operations.LegacyEventsOperations
    :ivar legacy_run: LegacyRun operations
    :vartype legacy_run: _restclient.operations.LegacyRunOperations
    :ivar legacy_runmetric: LegacyRunmetric operations
    :vartype legacy_runmetric: _restclient.operations.LegacyRunmetricOperations
    :ivar events: Events operations
    :vartype events: _restclient.operations.EventsOperations
    :ivar experiment: Experiment operations
    :vartype experiment: _restclient.operations.ExperimentOperations
    :ivar run: Run operations
    :vartype run: _restclient.operations.RunOperations
    :ivar run_metric: RunMetric operations
    :vartype run_metric: _restclient.operations.RunMetricOperations
    :ivar run_artifact: RunArtifact operations
    :vartype run_artifact: _restclient.operations.RunArtifactOperations
    :ivar snapshot: Snapshot operations
    :vartype snapshot: _restclient.operations.SnapshotOperations

    :param description: The description of the object.
    :type description: str
    :param expand: The option to show model details
    :type expand: bool
    :param credentials: Subscription credentials which uniquely identify
     client subscription.
    :type credentials: None
    :param str base_url: Service URL
    """

    def __init__(
            self, credentials, description=None, expand=None, base_url=None):

        self.config = RestClientConfiguration(credentials, description, expand, base_url)
        self._client = ServiceClient(self.config.credentials, self.config)

        client_models = {k: v for k, v in models.__dict__.items() if isinstance(v, type)}
        self._serialize = Serializer(client_models)
        self._deserialize = Deserializer(client_models)

        self.artifact = ArtifactOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.data_store = DataStoreOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.jasmine = JasmineOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.model = ModelOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.asset = AssetOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.image = ImageOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.operations = Operations(
            self._client, self.config, self._serialize, self._deserialize)
        self.swagger = SwaggerOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.legacy_events = LegacyEventsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.legacy_run = LegacyRunOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.legacy_runmetric = LegacyRunmetricOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.events = EventsOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.experiment = ExperimentOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.run = RunOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.run_metric = RunMetricOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.run_artifact = RunArtifactOperations(
            self._client, self.config, self._serialize, self._deserialize)
        self.snapshot = SnapshotOperations(
            self._client, self.config, self._serialize, self._deserialize)
