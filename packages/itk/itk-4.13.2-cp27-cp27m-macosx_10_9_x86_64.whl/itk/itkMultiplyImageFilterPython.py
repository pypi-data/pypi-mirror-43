# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMultiplyImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMultiplyImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMultiplyImageFilterPython
            return _itkMultiplyImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMultiplyImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMultiplyImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMultiplyImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import stdcomplexPython
import pyBasePython
import itkImagePython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import ITKCommonBasePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython
import itkInPlaceImageFilterBPython
import itkSimpleDataObjectDecoratorPython
import itkArrayPython

def itkMultiplyImageFilterICF3IF3ICF3_New():
  return itkMultiplyImageFilterICF3IF3ICF3.New()


def itkMultiplyImageFilterICF3IF3ICF3_Superclass_New():
  return itkMultiplyImageFilterICF3IF3ICF3_Superclass.New()


def itkMultiplyImageFilterICF2IF2ICF2_New():
  return itkMultiplyImageFilterICF2IF2ICF2.New()


def itkMultiplyImageFilterICF2IF2ICF2_Superclass_New():
  return itkMultiplyImageFilterICF2IF2ICF2_Superclass.New()


def itkMultiplyImageFilterICF3ICF3ICF3_New():
  return itkMultiplyImageFilterICF3ICF3ICF3.New()


def itkMultiplyImageFilterICF3ICF3ICF3_Superclass_New():
  return itkMultiplyImageFilterICF3ICF3ICF3_Superclass.New()


def itkMultiplyImageFilterICF2ICF2ICF2_New():
  return itkMultiplyImageFilterICF2ICF2ICF2.New()


def itkMultiplyImageFilterICF2ICF2ICF2_Superclass_New():
  return itkMultiplyImageFilterICF2ICF2ICF2_Superclass.New()


def itkMultiplyImageFilterIF3IF3IF3_New():
  return itkMultiplyImageFilterIF3IF3IF3.New()


def itkMultiplyImageFilterIF3IF3IF3_Superclass_New():
  return itkMultiplyImageFilterIF3IF3IF3_Superclass.New()


def itkMultiplyImageFilterIF2IF2IF2_New():
  return itkMultiplyImageFilterIF2IF2IF2.New()


def itkMultiplyImageFilterIF2IF2IF2_Superclass_New():
  return itkMultiplyImageFilterIF2IF2IF2_Superclass.New()


def itkMultiplyImageFilterIUS3IUS3IUS3_New():
  return itkMultiplyImageFilterIUS3IUS3IUS3.New()


def itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_New():
  return itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.New()


def itkMultiplyImageFilterIUS2IUS2IUS2_New():
  return itkMultiplyImageFilterIUS2IUS2IUS2.New()


def itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_New():
  return itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.New()


def itkMultiplyImageFilterIUC3IUC3IUC3_New():
  return itkMultiplyImageFilterIUC3IUC3IUC3.New()


def itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_New():
  return itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.New()


def itkMultiplyImageFilterIUC2IUC2IUC2_New():
  return itkMultiplyImageFilterIUC2IUC2IUC2.New()


def itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_New():
  return itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.New()


def itkMultiplyImageFilterISS3ISS3ISS3_New():
  return itkMultiplyImageFilterISS3ISS3ISS3.New()


def itkMultiplyImageFilterISS3ISS3ISS3_Superclass_New():
  return itkMultiplyImageFilterISS3ISS3ISS3_Superclass.New()


def itkMultiplyImageFilterISS2ISS2ISS2_New():
  return itkMultiplyImageFilterISS2ISS2ISS2.New()


def itkMultiplyImageFilterISS2ISS2ISS2_Superclass_New():
  return itkMultiplyImageFilterISS2ISS2ISS2_Superclass.New()

class itkMultiplyImageFilterICF2ICF2ICF2_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    """Proxy of C++ itkMultiplyImageFilterICF2ICF2ICF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self) -> itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self, itkImageCF2 image1)
        SetInput1(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self, itkSimpleDataObjectDecoratorCF input1)
        SetInput1(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self, stdcomplexF input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self, stdcomplexF input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self) -> stdcomplexF"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self, itkImageCF2 image2)
        SetInput2(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self, itkSimpleDataObjectDecoratorCF input2)
        SetInput2(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self, stdcomplexF input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self, stdcomplexF input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self, stdcomplexF ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self) -> stdcomplexF"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self) -> stdcomplexF"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self) -> itk::Functor::Mult< std::complex< float >,std::complex< float >,std::complex< float > >
        GetFunctor(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self) -> itk::Functor::Mult< std::complex< float >,std::complex< float >,std::complex< float > > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self, itk::Functor::Mult< std::complex< float >,std::complex< float >,std::complex< float > > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF2ICF2ICF2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF2ICF2ICF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterICF2ICF2ICF2_Superclass self) -> itkMultiplyImageFilterICF2ICF2ICF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF2ICF2ICF2_Superclass

        Create a new object of the class itkMultiplyImageFilterICF2ICF2ICF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterICF2ICF2ICF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterICF2ICF2ICF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF2ICF2ICF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF2ICF2ICF2_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Clone, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetInput1, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetConstant1, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetConstant1, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetInput2, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetConstant2, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetConstant, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetConstant, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetConstant2, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetFunctor, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_SetFunctor, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_GetPointer, None, itkMultiplyImageFilterICF2ICF2ICF2_Superclass)
itkMultiplyImageFilterICF2ICF2ICF2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_swigregister
itkMultiplyImageFilterICF2ICF2ICF2_Superclass_swigregister(itkMultiplyImageFilterICF2ICF2ICF2_Superclass)

def itkMultiplyImageFilterICF2ICF2ICF2_Superclass___New_orig__():
    """itkMultiplyImageFilterICF2ICF2ICF2_Superclass___New_orig__() -> itkMultiplyImageFilterICF2ICF2ICF2_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass___New_orig__()

def itkMultiplyImageFilterICF2ICF2ICF2_Superclass_cast(obj):
    """itkMultiplyImageFilterICF2ICF2ICF2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterICF2ICF2ICF2_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Superclass_cast(obj)

class itkMultiplyImageFilterICF2IF2ICF2_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    """Proxy of C++ itkMultiplyImageFilterICF2IF2ICF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterICF2IF2ICF2_Superclass self) -> itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterICF2IF2ICF2_Superclass self, itkImageCF2 image1)
        SetInput1(itkMultiplyImageFilterICF2IF2ICF2_Superclass self, itkSimpleDataObjectDecoratorCF input1)
        SetInput1(itkMultiplyImageFilterICF2IF2ICF2_Superclass self, stdcomplexF input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterICF2IF2ICF2_Superclass self, stdcomplexF input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterICF2IF2ICF2_Superclass self) -> stdcomplexF"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterICF2IF2ICF2_Superclass self, itkImageF2 image2)
        SetInput2(itkMultiplyImageFilterICF2IF2ICF2_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkMultiplyImageFilterICF2IF2ICF2_Superclass self, float const & input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterICF2IF2ICF2_Superclass self, float const & input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterICF2IF2ICF2_Superclass self, float ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterICF2IF2ICF2_Superclass self) -> float const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterICF2IF2ICF2_Superclass self) -> float const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterICF2IF2ICF2_Superclass self) -> itk::Functor::Mult< std::complex< float >,float,std::complex< float > >
        GetFunctor(itkMultiplyImageFilterICF2IF2ICF2_Superclass self) -> itk::Functor::Mult< std::complex< float >,float,std::complex< float > > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterICF2IF2ICF2_Superclass self, itk::Functor::Mult< std::complex< float >,float,std::complex< float > > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF2IF2ICF2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF2IF2ICF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterICF2IF2ICF2_Superclass self) -> itkMultiplyImageFilterICF2IF2ICF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF2IF2ICF2_Superclass

        Create a new object of the class itkMultiplyImageFilterICF2IF2ICF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterICF2IF2ICF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterICF2IF2ICF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF2IF2ICF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF2IF2ICF2_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_Clone, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetInput1, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetConstant1, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetConstant1, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetInput2, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetConstant2, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetConstant, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetConstant, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetConstant2, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetFunctor, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_SetFunctor, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_GetPointer, None, itkMultiplyImageFilterICF2IF2ICF2_Superclass)
itkMultiplyImageFilterICF2IF2ICF2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_swigregister
itkMultiplyImageFilterICF2IF2ICF2_Superclass_swigregister(itkMultiplyImageFilterICF2IF2ICF2_Superclass)

def itkMultiplyImageFilterICF2IF2ICF2_Superclass___New_orig__():
    """itkMultiplyImageFilterICF2IF2ICF2_Superclass___New_orig__() -> itkMultiplyImageFilterICF2IF2ICF2_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass___New_orig__()

def itkMultiplyImageFilterICF2IF2ICF2_Superclass_cast(obj):
    """itkMultiplyImageFilterICF2IF2ICF2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterICF2IF2ICF2_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Superclass_cast(obj)

class itkMultiplyImageFilterICF3ICF3ICF3_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    """Proxy of C++ itkMultiplyImageFilterICF3ICF3ICF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self) -> itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self, itkImageCF3 image1)
        SetInput1(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self, itkSimpleDataObjectDecoratorCF input1)
        SetInput1(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self, stdcomplexF input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self, stdcomplexF input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self) -> stdcomplexF"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self, itkImageCF3 image2)
        SetInput2(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self, itkSimpleDataObjectDecoratorCF input2)
        SetInput2(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self, stdcomplexF input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self, stdcomplexF input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self, stdcomplexF ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self) -> stdcomplexF"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self) -> stdcomplexF"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self) -> itk::Functor::Mult< std::complex< float >,std::complex< float >,std::complex< float > >
        GetFunctor(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self) -> itk::Functor::Mult< std::complex< float >,std::complex< float >,std::complex< float > > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self, itk::Functor::Mult< std::complex< float >,std::complex< float >,std::complex< float > > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF3ICF3ICF3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF3ICF3ICF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterICF3ICF3ICF3_Superclass self) -> itkMultiplyImageFilterICF3ICF3ICF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF3ICF3ICF3_Superclass

        Create a new object of the class itkMultiplyImageFilterICF3ICF3ICF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterICF3ICF3ICF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterICF3ICF3ICF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF3ICF3ICF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF3ICF3ICF3_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Clone, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetInput1, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetConstant1, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetConstant1, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetInput2, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetConstant2, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetConstant, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetConstant, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetConstant2, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetFunctor, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_SetFunctor, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_GetPointer, None, itkMultiplyImageFilterICF3ICF3ICF3_Superclass)
itkMultiplyImageFilterICF3ICF3ICF3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_swigregister
itkMultiplyImageFilterICF3ICF3ICF3_Superclass_swigregister(itkMultiplyImageFilterICF3ICF3ICF3_Superclass)

def itkMultiplyImageFilterICF3ICF3ICF3_Superclass___New_orig__():
    """itkMultiplyImageFilterICF3ICF3ICF3_Superclass___New_orig__() -> itkMultiplyImageFilterICF3ICF3ICF3_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass___New_orig__()

def itkMultiplyImageFilterICF3ICF3ICF3_Superclass_cast(obj):
    """itkMultiplyImageFilterICF3ICF3ICF3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterICF3ICF3ICF3_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Superclass_cast(obj)

class itkMultiplyImageFilterICF3IF3ICF3_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    """Proxy of C++ itkMultiplyImageFilterICF3IF3ICF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterICF3IF3ICF3_Superclass self) -> itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterICF3IF3ICF3_Superclass self, itkImageCF3 image1)
        SetInput1(itkMultiplyImageFilterICF3IF3ICF3_Superclass self, itkSimpleDataObjectDecoratorCF input1)
        SetInput1(itkMultiplyImageFilterICF3IF3ICF3_Superclass self, stdcomplexF input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterICF3IF3ICF3_Superclass self, stdcomplexF input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterICF3IF3ICF3_Superclass self) -> stdcomplexF"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterICF3IF3ICF3_Superclass self, itkImageF3 image2)
        SetInput2(itkMultiplyImageFilterICF3IF3ICF3_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkMultiplyImageFilterICF3IF3ICF3_Superclass self, float const & input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterICF3IF3ICF3_Superclass self, float const & input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterICF3IF3ICF3_Superclass self, float ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterICF3IF3ICF3_Superclass self) -> float const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterICF3IF3ICF3_Superclass self) -> float const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterICF3IF3ICF3_Superclass self) -> itk::Functor::Mult< std::complex< float >,float,std::complex< float > >
        GetFunctor(itkMultiplyImageFilterICF3IF3ICF3_Superclass self) -> itk::Functor::Mult< std::complex< float >,float,std::complex< float > > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterICF3IF3ICF3_Superclass self, itk::Functor::Mult< std::complex< float >,float,std::complex< float > > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF3IF3ICF3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF3IF3ICF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterICF3IF3ICF3_Superclass self) -> itkMultiplyImageFilterICF3IF3ICF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF3IF3ICF3_Superclass

        Create a new object of the class itkMultiplyImageFilterICF3IF3ICF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterICF3IF3ICF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterICF3IF3ICF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF3IF3ICF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF3IF3ICF3_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_Clone, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetInput1, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetConstant1, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetConstant1, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetInput2, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetConstant2, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetConstant, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetConstant, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetConstant2, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetFunctor, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_SetFunctor, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_GetPointer, None, itkMultiplyImageFilterICF3IF3ICF3_Superclass)
itkMultiplyImageFilterICF3IF3ICF3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_swigregister
itkMultiplyImageFilterICF3IF3ICF3_Superclass_swigregister(itkMultiplyImageFilterICF3IF3ICF3_Superclass)

def itkMultiplyImageFilterICF3IF3ICF3_Superclass___New_orig__():
    """itkMultiplyImageFilterICF3IF3ICF3_Superclass___New_orig__() -> itkMultiplyImageFilterICF3IF3ICF3_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass___New_orig__()

def itkMultiplyImageFilterICF3IF3ICF3_Superclass_cast(obj):
    """itkMultiplyImageFilterICF3IF3ICF3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterICF3IF3ICF3_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Superclass_cast(obj)

class itkMultiplyImageFilterIF2IF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkMultiplyImageFilterIF2IF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIF2IF2IF2_Superclass self) -> itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterIF2IF2IF2_Superclass self, itkImageF2 image1)
        SetInput1(itkMultiplyImageFilterIF2IF2IF2_Superclass self, itkSimpleDataObjectDecoratorF input1)
        SetInput1(itkMultiplyImageFilterIF2IF2IF2_Superclass self, float const & input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterIF2IF2IF2_Superclass self, float const & input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterIF2IF2IF2_Superclass self) -> float const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterIF2IF2IF2_Superclass self, itkImageF2 image2)
        SetInput2(itkMultiplyImageFilterIF2IF2IF2_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkMultiplyImageFilterIF2IF2IF2_Superclass self, float const & input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterIF2IF2IF2_Superclass self, float const & input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterIF2IF2IF2_Superclass self, float ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterIF2IF2IF2_Superclass self) -> float const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterIF2IF2IF2_Superclass self) -> float const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterIF2IF2IF2_Superclass self) -> itk::Functor::Mult< float,float,float >
        GetFunctor(itkMultiplyImageFilterIF2IF2IF2_Superclass self) -> itk::Functor::Mult< float,float,float > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterIF2IF2IF2_Superclass self, itk::Functor::Mult< float,float,float > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIF2IF2IF2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIF2IF2IF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIF2IF2IF2_Superclass self) -> itkMultiplyImageFilterIF2IF2IF2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIF2IF2IF2_Superclass

        Create a new object of the class itkMultiplyImageFilterIF2IF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIF2IF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIF2IF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIF2IF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIF2IF2IF2_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_Clone, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetInput1, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetConstant1, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetConstant1, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetInput2, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetConstant2, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetConstant, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetConstant, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetConstant2, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetFunctor, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_SetFunctor, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_GetPointer, None, itkMultiplyImageFilterIF2IF2IF2_Superclass)
itkMultiplyImageFilterIF2IF2IF2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_swigregister
itkMultiplyImageFilterIF2IF2IF2_Superclass_swigregister(itkMultiplyImageFilterIF2IF2IF2_Superclass)

def itkMultiplyImageFilterIF2IF2IF2_Superclass___New_orig__():
    """itkMultiplyImageFilterIF2IF2IF2_Superclass___New_orig__() -> itkMultiplyImageFilterIF2IF2IF2_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass___New_orig__()

def itkMultiplyImageFilterIF2IF2IF2_Superclass_cast(obj):
    """itkMultiplyImageFilterIF2IF2IF2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIF2IF2IF2_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Superclass_cast(obj)

class itkMultiplyImageFilterIF3IF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkMultiplyImageFilterIF3IF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIF3IF3IF3_Superclass self) -> itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterIF3IF3IF3_Superclass self, itkImageF3 image1)
        SetInput1(itkMultiplyImageFilterIF3IF3IF3_Superclass self, itkSimpleDataObjectDecoratorF input1)
        SetInput1(itkMultiplyImageFilterIF3IF3IF3_Superclass self, float const & input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterIF3IF3IF3_Superclass self, float const & input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterIF3IF3IF3_Superclass self) -> float const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterIF3IF3IF3_Superclass self, itkImageF3 image2)
        SetInput2(itkMultiplyImageFilterIF3IF3IF3_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkMultiplyImageFilterIF3IF3IF3_Superclass self, float const & input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterIF3IF3IF3_Superclass self, float const & input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterIF3IF3IF3_Superclass self, float ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterIF3IF3IF3_Superclass self) -> float const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterIF3IF3IF3_Superclass self) -> float const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterIF3IF3IF3_Superclass self) -> itk::Functor::Mult< float,float,float >
        GetFunctor(itkMultiplyImageFilterIF3IF3IF3_Superclass self) -> itk::Functor::Mult< float,float,float > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterIF3IF3IF3_Superclass self, itk::Functor::Mult< float,float,float > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIF3IF3IF3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIF3IF3IF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIF3IF3IF3_Superclass self) -> itkMultiplyImageFilterIF3IF3IF3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIF3IF3IF3_Superclass

        Create a new object of the class itkMultiplyImageFilterIF3IF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIF3IF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIF3IF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIF3IF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIF3IF3IF3_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_Clone, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetInput1, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetConstant1, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetConstant1, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetInput2, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetConstant2, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetConstant, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetConstant, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetConstant2, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetFunctor, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_SetFunctor, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_GetPointer, None, itkMultiplyImageFilterIF3IF3IF3_Superclass)
itkMultiplyImageFilterIF3IF3IF3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_swigregister
itkMultiplyImageFilterIF3IF3IF3_Superclass_swigregister(itkMultiplyImageFilterIF3IF3IF3_Superclass)

def itkMultiplyImageFilterIF3IF3IF3_Superclass___New_orig__():
    """itkMultiplyImageFilterIF3IF3IF3_Superclass___New_orig__() -> itkMultiplyImageFilterIF3IF3IF3_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass___New_orig__()

def itkMultiplyImageFilterIF3IF3IF3_Superclass_cast(obj):
    """itkMultiplyImageFilterIF3IF3IF3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIF3IF3IF3_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Superclass_cast(obj)

class itkMultiplyImageFilterISS2ISS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkMultiplyImageFilterISS2ISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterISS2ISS2ISS2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self) -> itkMultiplyImageFilterISS2ISS2ISS2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self, itkImageSS2 image1)
        SetInput1(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self, itkSimpleDataObjectDecoratorSS input1)
        SetInput1(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self, short const & input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self, short const & input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self) -> short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self, itkImageSS2 image2)
        SetInput2(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self, itkSimpleDataObjectDecoratorSS input2)
        SetInput2(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self, short const & input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self, short const & input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self, short ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self) -> short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self) -> short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self) -> itk::Functor::Mult< short,short,short >
        GetFunctor(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self) -> itk::Functor::Mult< short,short,short > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self, itk::Functor::Mult< short,short,short > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterISS2ISS2ISS2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterISS2ISS2ISS2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterISS2ISS2ISS2_Superclass self) -> itkMultiplyImageFilterISS2ISS2ISS2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterISS2ISS2ISS2_Superclass

        Create a new object of the class itkMultiplyImageFilterISS2ISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterISS2ISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterISS2ISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterISS2ISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterISS2ISS2ISS2_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_Clone, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetInput1, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetConstant1, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_GetConstant1, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetInput2, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetConstant2, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetConstant, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_GetConstant, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_GetConstant2, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_GetFunctor, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_SetFunctor, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_GetPointer, None, itkMultiplyImageFilterISS2ISS2ISS2_Superclass)
itkMultiplyImageFilterISS2ISS2ISS2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_swigregister
itkMultiplyImageFilterISS2ISS2ISS2_Superclass_swigregister(itkMultiplyImageFilterISS2ISS2ISS2_Superclass)

def itkMultiplyImageFilterISS2ISS2ISS2_Superclass___New_orig__():
    """itkMultiplyImageFilterISS2ISS2ISS2_Superclass___New_orig__() -> itkMultiplyImageFilterISS2ISS2ISS2_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass___New_orig__()

def itkMultiplyImageFilterISS2ISS2ISS2_Superclass_cast(obj):
    """itkMultiplyImageFilterISS2ISS2ISS2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterISS2ISS2ISS2_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Superclass_cast(obj)

class itkMultiplyImageFilterISS3ISS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkMultiplyImageFilterISS3ISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterISS3ISS3ISS3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self) -> itkMultiplyImageFilterISS3ISS3ISS3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self, itkImageSS3 image1)
        SetInput1(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self, itkSimpleDataObjectDecoratorSS input1)
        SetInput1(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self, short const & input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self, short const & input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self) -> short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self, itkImageSS3 image2)
        SetInput2(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self, itkSimpleDataObjectDecoratorSS input2)
        SetInput2(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self, short const & input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self, short const & input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self, short ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self) -> short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self) -> short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self) -> itk::Functor::Mult< short,short,short >
        GetFunctor(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self) -> itk::Functor::Mult< short,short,short > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self, itk::Functor::Mult< short,short,short > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterISS3ISS3ISS3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterISS3ISS3ISS3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterISS3ISS3ISS3_Superclass self) -> itkMultiplyImageFilterISS3ISS3ISS3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterISS3ISS3ISS3_Superclass

        Create a new object of the class itkMultiplyImageFilterISS3ISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterISS3ISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterISS3ISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterISS3ISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterISS3ISS3ISS3_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_Clone, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetInput1, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetConstant1, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_GetConstant1, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetInput2, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetConstant2, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetConstant, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_GetConstant, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_GetConstant2, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_GetFunctor, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_SetFunctor, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_GetPointer, None, itkMultiplyImageFilterISS3ISS3ISS3_Superclass)
itkMultiplyImageFilterISS3ISS3ISS3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_swigregister
itkMultiplyImageFilterISS3ISS3ISS3_Superclass_swigregister(itkMultiplyImageFilterISS3ISS3ISS3_Superclass)

def itkMultiplyImageFilterISS3ISS3ISS3_Superclass___New_orig__():
    """itkMultiplyImageFilterISS3ISS3ISS3_Superclass___New_orig__() -> itkMultiplyImageFilterISS3ISS3ISS3_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass___New_orig__()

def itkMultiplyImageFilterISS3ISS3ISS3_Superclass_cast(obj):
    """itkMultiplyImageFilterISS3ISS3ISS3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterISS3ISS3ISS3_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Superclass_cast(obj)

class itkMultiplyImageFilterIUC2IUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkMultiplyImageFilterIUC2IUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self) -> itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self, itkImageUC2 image1)
        SetInput1(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self, itkSimpleDataObjectDecoratorUC input1)
        SetInput1(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self) -> unsigned char const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self, itkImageUC2 image2)
        SetInput2(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self, itkSimpleDataObjectDecoratorUC input2)
        SetInput2(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self, unsigned char ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self) -> unsigned char const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self) -> unsigned char const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self) -> itk::Functor::Mult< unsigned char,unsigned char,unsigned char >
        GetFunctor(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self) -> itk::Functor::Mult< unsigned char,unsigned char,unsigned char > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self, itk::Functor::Mult< unsigned char,unsigned char,unsigned char > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUC2IUC2IUC2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUC2IUC2IUC2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass self) -> itkMultiplyImageFilterIUC2IUC2IUC2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUC2IUC2IUC2_Superclass

        Create a new object of the class itkMultiplyImageFilterIUC2IUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Clone, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetInput1, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetConstant1, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetConstant1, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetInput2, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetConstant2, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetConstant, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetConstant, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetConstant2, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetFunctor, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_SetFunctor, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_GetPointer, None, itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_swigregister
itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_swigregister(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass)

def itkMultiplyImageFilterIUC2IUC2IUC2_Superclass___New_orig__():
    """itkMultiplyImageFilterIUC2IUC2IUC2_Superclass___New_orig__() -> itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass___New_orig__()

def itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_cast(obj):
    """itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIUC2IUC2IUC2_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Superclass_cast(obj)

class itkMultiplyImageFilterIUC3IUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkMultiplyImageFilterIUC3IUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self) -> itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self, itkImageUC3 image1)
        SetInput1(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self, itkSimpleDataObjectDecoratorUC input1)
        SetInput1(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self) -> unsigned char const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self, itkImageUC3 image2)
        SetInput2(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self, itkSimpleDataObjectDecoratorUC input2)
        SetInput2(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self, unsigned char ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self) -> unsigned char const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self) -> unsigned char const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self) -> itk::Functor::Mult< unsigned char,unsigned char,unsigned char >
        GetFunctor(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self) -> itk::Functor::Mult< unsigned char,unsigned char,unsigned char > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self, itk::Functor::Mult< unsigned char,unsigned char,unsigned char > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUC3IUC3IUC3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUC3IUC3IUC3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass self) -> itkMultiplyImageFilterIUC3IUC3IUC3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUC3IUC3IUC3_Superclass

        Create a new object of the class itkMultiplyImageFilterIUC3IUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Clone, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetInput1, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetConstant1, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetConstant1, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetInput2, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetConstant2, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetConstant, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetConstant, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetConstant2, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetFunctor, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_SetFunctor, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_GetPointer, None, itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_swigregister
itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_swigregister(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass)

def itkMultiplyImageFilterIUC3IUC3IUC3_Superclass___New_orig__():
    """itkMultiplyImageFilterIUC3IUC3IUC3_Superclass___New_orig__() -> itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass___New_orig__()

def itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_cast(obj):
    """itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIUC3IUC3IUC3_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Superclass_cast(obj)

class itkMultiplyImageFilterIUS2IUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkMultiplyImageFilterIUS2IUS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self) -> itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self, itkImageUS2 image1)
        SetInput1(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self, itkSimpleDataObjectDecoratorUS input1)
        SetInput1(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self) -> unsigned short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self, itkImageUS2 image2)
        SetInput2(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self, itkSimpleDataObjectDecoratorUS input2)
        SetInput2(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self, unsigned short ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self) -> unsigned short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self) -> unsigned short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self) -> itk::Functor::Mult< unsigned short,unsigned short,unsigned short >
        GetFunctor(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self) -> itk::Functor::Mult< unsigned short,unsigned short,unsigned short > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self, itk::Functor::Mult< unsigned short,unsigned short,unsigned short > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUS2IUS2IUS2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUS2IUS2IUS2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass self) -> itkMultiplyImageFilterIUS2IUS2IUS2_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUS2IUS2IUS2_Superclass

        Create a new object of the class itkMultiplyImageFilterIUS2IUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Clone, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetInput1, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetConstant1, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetConstant1, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetInput2, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetConstant2, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetConstant, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetConstant, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetConstant2, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetFunctor, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_SetFunctor, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_GetPointer, None, itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_swigregister
itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_swigregister(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass)

def itkMultiplyImageFilterIUS2IUS2IUS2_Superclass___New_orig__():
    """itkMultiplyImageFilterIUS2IUS2IUS2_Superclass___New_orig__() -> itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass___New_orig__()

def itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_cast(obj):
    """itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIUS2IUS2IUS2_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Superclass_cast(obj)

class itkMultiplyImageFilterIUS3IUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkMultiplyImageFilterIUS3IUS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self) -> itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self, itkImageUS3 image1)
        SetInput1(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self, itkSimpleDataObjectDecoratorUS input1)
        SetInput1(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input1)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input1)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self) -> unsigned short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self, itkImageUS3 image2)
        SetInput2(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self, itkSimpleDataObjectDecoratorUS input2)
        SetInput2(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input2)
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input2)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self, unsigned short ct)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self) -> unsigned short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self) -> unsigned short const &"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self) -> itk::Functor::Mult< unsigned short,unsigned short,unsigned short >
        GetFunctor(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self) -> itk::Functor::Mult< unsigned short,unsigned short,unsigned short > const &
        """
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self, itk::Functor::Mult< unsigned short,unsigned short,unsigned short > const & functor)"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUS3IUS3IUS3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUS3IUS3IUS3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass self) -> itkMultiplyImageFilterIUS3IUS3IUS3_Superclass"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUS3IUS3IUS3_Superclass

        Create a new object of the class itkMultiplyImageFilterIUS3IUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Clone, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.SetInput1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetInput1, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.SetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetConstant1, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.GetConstant1 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetConstant1, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.SetInput2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetInput2, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.SetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetConstant2, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.SetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetConstant, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.GetConstant = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetConstant, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.GetConstant2 = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetConstant2, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetFunctor, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_SetFunctor, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_GetPointer, None, itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_swigregister
itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_swigregister(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass)

def itkMultiplyImageFilterIUS3IUS3IUS3_Superclass___New_orig__():
    """itkMultiplyImageFilterIUS3IUS3IUS3_Superclass___New_orig__() -> itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass___New_orig__()

def itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_cast(obj):
    """itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_cast(itkLightObject obj) -> itkMultiplyImageFilterIUS3IUS3IUS3_Superclass"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Superclass_cast(obj)

class itkMultiplyImageFilterICF2ICF2ICF2(itkMultiplyImageFilterICF2ICF2ICF2_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterICF2ICF2ICF2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterICF2ICF2ICF2 self) -> itkMultiplyImageFilterICF2ICF2ICF2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF2ICF2ICF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF2ICF2ICF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterICF2ICF2ICF2 self) -> itkMultiplyImageFilterICF2ICF2ICF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF2ICF2ICF2

        Create a new object of the class itkMultiplyImageFilterICF2ICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterICF2ICF2ICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterICF2ICF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF2ICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF2ICF2ICF2.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_Clone, None, itkMultiplyImageFilterICF2ICF2ICF2)
itkMultiplyImageFilterICF2ICF2ICF2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_GetPointer, None, itkMultiplyImageFilterICF2ICF2ICF2)
itkMultiplyImageFilterICF2ICF2ICF2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_swigregister
itkMultiplyImageFilterICF2ICF2ICF2_swigregister(itkMultiplyImageFilterICF2ICF2ICF2)

def itkMultiplyImageFilterICF2ICF2ICF2___New_orig__():
    """itkMultiplyImageFilterICF2ICF2ICF2___New_orig__() -> itkMultiplyImageFilterICF2ICF2ICF2_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2___New_orig__()

def itkMultiplyImageFilterICF2ICF2ICF2_cast(obj):
    """itkMultiplyImageFilterICF2ICF2ICF2_cast(itkLightObject obj) -> itkMultiplyImageFilterICF2ICF2ICF2"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2ICF2ICF2_cast(obj)

class itkMultiplyImageFilterICF2IF2ICF2(itkMultiplyImageFilterICF2IF2ICF2_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterICF2IF2ICF2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterICF2IF2ICF2 self) -> itkMultiplyImageFilterICF2IF2ICF2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF2IF2ICF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF2IF2ICF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterICF2IF2ICF2 self) -> itkMultiplyImageFilterICF2IF2ICF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF2IF2ICF2

        Create a new object of the class itkMultiplyImageFilterICF2IF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterICF2IF2ICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterICF2IF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF2IF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF2IF2ICF2.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_Clone, None, itkMultiplyImageFilterICF2IF2ICF2)
itkMultiplyImageFilterICF2IF2ICF2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_GetPointer, None, itkMultiplyImageFilterICF2IF2ICF2)
itkMultiplyImageFilterICF2IF2ICF2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_swigregister
itkMultiplyImageFilterICF2IF2ICF2_swigregister(itkMultiplyImageFilterICF2IF2ICF2)

def itkMultiplyImageFilterICF2IF2ICF2___New_orig__():
    """itkMultiplyImageFilterICF2IF2ICF2___New_orig__() -> itkMultiplyImageFilterICF2IF2ICF2_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2___New_orig__()

def itkMultiplyImageFilterICF2IF2ICF2_cast(obj):
    """itkMultiplyImageFilterICF2IF2ICF2_cast(itkLightObject obj) -> itkMultiplyImageFilterICF2IF2ICF2"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF2IF2ICF2_cast(obj)

class itkMultiplyImageFilterICF3ICF3ICF3(itkMultiplyImageFilterICF3ICF3ICF3_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterICF3ICF3ICF3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterICF3ICF3ICF3 self) -> itkMultiplyImageFilterICF3ICF3ICF3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF3ICF3ICF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF3ICF3ICF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterICF3ICF3ICF3 self) -> itkMultiplyImageFilterICF3ICF3ICF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF3ICF3ICF3

        Create a new object of the class itkMultiplyImageFilterICF3ICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterICF3ICF3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterICF3ICF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF3ICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF3ICF3ICF3.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_Clone, None, itkMultiplyImageFilterICF3ICF3ICF3)
itkMultiplyImageFilterICF3ICF3ICF3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_GetPointer, None, itkMultiplyImageFilterICF3ICF3ICF3)
itkMultiplyImageFilterICF3ICF3ICF3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_swigregister
itkMultiplyImageFilterICF3ICF3ICF3_swigregister(itkMultiplyImageFilterICF3ICF3ICF3)

def itkMultiplyImageFilterICF3ICF3ICF3___New_orig__():
    """itkMultiplyImageFilterICF3ICF3ICF3___New_orig__() -> itkMultiplyImageFilterICF3ICF3ICF3_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3___New_orig__()

def itkMultiplyImageFilterICF3ICF3ICF3_cast(obj):
    """itkMultiplyImageFilterICF3ICF3ICF3_cast(itkLightObject obj) -> itkMultiplyImageFilterICF3ICF3ICF3"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3ICF3ICF3_cast(obj)

class itkMultiplyImageFilterICF3IF3ICF3(itkMultiplyImageFilterICF3IF3ICF3_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterICF3IF3ICF3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterICF3IF3ICF3 self) -> itkMultiplyImageFilterICF3IF3ICF3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterICF3IF3ICF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterICF3IF3ICF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterICF3IF3ICF3 self) -> itkMultiplyImageFilterICF3IF3ICF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterICF3IF3ICF3

        Create a new object of the class itkMultiplyImageFilterICF3IF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterICF3IF3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterICF3IF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterICF3IF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterICF3IF3ICF3.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_Clone, None, itkMultiplyImageFilterICF3IF3ICF3)
itkMultiplyImageFilterICF3IF3ICF3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_GetPointer, None, itkMultiplyImageFilterICF3IF3ICF3)
itkMultiplyImageFilterICF3IF3ICF3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_swigregister
itkMultiplyImageFilterICF3IF3ICF3_swigregister(itkMultiplyImageFilterICF3IF3ICF3)

def itkMultiplyImageFilterICF3IF3ICF3___New_orig__():
    """itkMultiplyImageFilterICF3IF3ICF3___New_orig__() -> itkMultiplyImageFilterICF3IF3ICF3_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3___New_orig__()

def itkMultiplyImageFilterICF3IF3ICF3_cast(obj):
    """itkMultiplyImageFilterICF3IF3ICF3_cast(itkLightObject obj) -> itkMultiplyImageFilterICF3IF3ICF3"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterICF3IF3ICF3_cast(obj)

class itkMultiplyImageFilterIF2IF2IF2(itkMultiplyImageFilterIF2IF2IF2_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIF2IF2IF2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIF2IF2IF2 self) -> itkMultiplyImageFilterIF2IF2IF2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIF2IF2IF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIF2IF2IF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIF2IF2IF2 self) -> itkMultiplyImageFilterIF2IF2IF2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIF2IF2IF2

        Create a new object of the class itkMultiplyImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIF2IF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIF2IF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIF2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIF2IF2IF2.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_Clone, None, itkMultiplyImageFilterIF2IF2IF2)
itkMultiplyImageFilterIF2IF2IF2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_GetPointer, None, itkMultiplyImageFilterIF2IF2IF2)
itkMultiplyImageFilterIF2IF2IF2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_swigregister
itkMultiplyImageFilterIF2IF2IF2_swigregister(itkMultiplyImageFilterIF2IF2IF2)

def itkMultiplyImageFilterIF2IF2IF2___New_orig__():
    """itkMultiplyImageFilterIF2IF2IF2___New_orig__() -> itkMultiplyImageFilterIF2IF2IF2_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2___New_orig__()

def itkMultiplyImageFilterIF2IF2IF2_cast(obj):
    """itkMultiplyImageFilterIF2IF2IF2_cast(itkLightObject obj) -> itkMultiplyImageFilterIF2IF2IF2"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF2IF2IF2_cast(obj)

class itkMultiplyImageFilterIF3IF3IF3(itkMultiplyImageFilterIF3IF3IF3_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIF3IF3IF3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIF3IF3IF3 self) -> itkMultiplyImageFilterIF3IF3IF3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIF3IF3IF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIF3IF3IF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIF3IF3IF3 self) -> itkMultiplyImageFilterIF3IF3IF3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIF3IF3IF3

        Create a new object of the class itkMultiplyImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIF3IF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIF3IF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIF3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIF3IF3IF3.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_Clone, None, itkMultiplyImageFilterIF3IF3IF3)
itkMultiplyImageFilterIF3IF3IF3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_GetPointer, None, itkMultiplyImageFilterIF3IF3IF3)
itkMultiplyImageFilterIF3IF3IF3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_swigregister
itkMultiplyImageFilterIF3IF3IF3_swigregister(itkMultiplyImageFilterIF3IF3IF3)

def itkMultiplyImageFilterIF3IF3IF3___New_orig__():
    """itkMultiplyImageFilterIF3IF3IF3___New_orig__() -> itkMultiplyImageFilterIF3IF3IF3_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3___New_orig__()

def itkMultiplyImageFilterIF3IF3IF3_cast(obj):
    """itkMultiplyImageFilterIF3IF3IF3_cast(itkLightObject obj) -> itkMultiplyImageFilterIF3IF3IF3"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIF3IF3IF3_cast(obj)

class itkMultiplyImageFilterISS2ISS2ISS2(itkMultiplyImageFilterISS2ISS2ISS2_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterISS2ISS2ISS2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterISS2ISS2ISS2 self) -> itkMultiplyImageFilterISS2ISS2ISS2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterISS2ISS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterISS2ISS2ISS2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterISS2ISS2ISS2 self) -> itkMultiplyImageFilterISS2ISS2ISS2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterISS2ISS2ISS2

        Create a new object of the class itkMultiplyImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterISS2ISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterISS2ISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterISS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterISS2ISS2ISS2.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_Clone, None, itkMultiplyImageFilterISS2ISS2ISS2)
itkMultiplyImageFilterISS2ISS2ISS2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_GetPointer, None, itkMultiplyImageFilterISS2ISS2ISS2)
itkMultiplyImageFilterISS2ISS2ISS2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_swigregister
itkMultiplyImageFilterISS2ISS2ISS2_swigregister(itkMultiplyImageFilterISS2ISS2ISS2)

def itkMultiplyImageFilterISS2ISS2ISS2___New_orig__():
    """itkMultiplyImageFilterISS2ISS2ISS2___New_orig__() -> itkMultiplyImageFilterISS2ISS2ISS2_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2___New_orig__()

def itkMultiplyImageFilterISS2ISS2ISS2_cast(obj):
    """itkMultiplyImageFilterISS2ISS2ISS2_cast(itkLightObject obj) -> itkMultiplyImageFilterISS2ISS2ISS2"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS2ISS2ISS2_cast(obj)

class itkMultiplyImageFilterISS3ISS3ISS3(itkMultiplyImageFilterISS3ISS3ISS3_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterISS3ISS3ISS3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterISS3ISS3ISS3 self) -> itkMultiplyImageFilterISS3ISS3ISS3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterISS3ISS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterISS3ISS3ISS3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterISS3ISS3ISS3 self) -> itkMultiplyImageFilterISS3ISS3ISS3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterISS3ISS3ISS3

        Create a new object of the class itkMultiplyImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterISS3ISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterISS3ISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterISS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterISS3ISS3ISS3.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_Clone, None, itkMultiplyImageFilterISS3ISS3ISS3)
itkMultiplyImageFilterISS3ISS3ISS3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_GetPointer, None, itkMultiplyImageFilterISS3ISS3ISS3)
itkMultiplyImageFilterISS3ISS3ISS3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_swigregister
itkMultiplyImageFilterISS3ISS3ISS3_swigregister(itkMultiplyImageFilterISS3ISS3ISS3)

def itkMultiplyImageFilterISS3ISS3ISS3___New_orig__():
    """itkMultiplyImageFilterISS3ISS3ISS3___New_orig__() -> itkMultiplyImageFilterISS3ISS3ISS3_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3___New_orig__()

def itkMultiplyImageFilterISS3ISS3ISS3_cast(obj):
    """itkMultiplyImageFilterISS3ISS3ISS3_cast(itkLightObject obj) -> itkMultiplyImageFilterISS3ISS3ISS3"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterISS3ISS3ISS3_cast(obj)

class itkMultiplyImageFilterIUC2IUC2IUC2(itkMultiplyImageFilterIUC2IUC2IUC2_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIUC2IUC2IUC2 self) -> itkMultiplyImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUC2IUC2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUC2IUC2IUC2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIUC2IUC2IUC2 self) -> itkMultiplyImageFilterIUC2IUC2IUC2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUC2IUC2IUC2

        Create a new object of the class itkMultiplyImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIUC2IUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIUC2IUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUC2IUC2IUC2.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_Clone, None, itkMultiplyImageFilterIUC2IUC2IUC2)
itkMultiplyImageFilterIUC2IUC2IUC2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_GetPointer, None, itkMultiplyImageFilterIUC2IUC2IUC2)
itkMultiplyImageFilterIUC2IUC2IUC2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_swigregister
itkMultiplyImageFilterIUC2IUC2IUC2_swigregister(itkMultiplyImageFilterIUC2IUC2IUC2)

def itkMultiplyImageFilterIUC2IUC2IUC2___New_orig__():
    """itkMultiplyImageFilterIUC2IUC2IUC2___New_orig__() -> itkMultiplyImageFilterIUC2IUC2IUC2_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2___New_orig__()

def itkMultiplyImageFilterIUC2IUC2IUC2_cast(obj):
    """itkMultiplyImageFilterIUC2IUC2IUC2_cast(itkLightObject obj) -> itkMultiplyImageFilterIUC2IUC2IUC2"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC2IUC2IUC2_cast(obj)

class itkMultiplyImageFilterIUC3IUC3IUC3(itkMultiplyImageFilterIUC3IUC3IUC3_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIUC3IUC3IUC3 self) -> itkMultiplyImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUC3IUC3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUC3IUC3IUC3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIUC3IUC3IUC3 self) -> itkMultiplyImageFilterIUC3IUC3IUC3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUC3IUC3IUC3

        Create a new object of the class itkMultiplyImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIUC3IUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIUC3IUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUC3IUC3IUC3.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_Clone, None, itkMultiplyImageFilterIUC3IUC3IUC3)
itkMultiplyImageFilterIUC3IUC3IUC3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_GetPointer, None, itkMultiplyImageFilterIUC3IUC3IUC3)
itkMultiplyImageFilterIUC3IUC3IUC3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_swigregister
itkMultiplyImageFilterIUC3IUC3IUC3_swigregister(itkMultiplyImageFilterIUC3IUC3IUC3)

def itkMultiplyImageFilterIUC3IUC3IUC3___New_orig__():
    """itkMultiplyImageFilterIUC3IUC3IUC3___New_orig__() -> itkMultiplyImageFilterIUC3IUC3IUC3_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3___New_orig__()

def itkMultiplyImageFilterIUC3IUC3IUC3_cast(obj):
    """itkMultiplyImageFilterIUC3IUC3IUC3_cast(itkLightObject obj) -> itkMultiplyImageFilterIUC3IUC3IUC3"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUC3IUC3IUC3_cast(obj)

class itkMultiplyImageFilterIUS2IUS2IUS2(itkMultiplyImageFilterIUS2IUS2IUS2_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIUS2IUS2IUS2 self) -> itkMultiplyImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUS2IUS2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUS2IUS2IUS2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIUS2IUS2IUS2 self) -> itkMultiplyImageFilterIUS2IUS2IUS2"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUS2IUS2IUS2

        Create a new object of the class itkMultiplyImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIUS2IUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIUS2IUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUS2IUS2IUS2.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_Clone, None, itkMultiplyImageFilterIUS2IUS2IUS2)
itkMultiplyImageFilterIUS2IUS2IUS2.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_GetPointer, None, itkMultiplyImageFilterIUS2IUS2IUS2)
itkMultiplyImageFilterIUS2IUS2IUS2_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_swigregister
itkMultiplyImageFilterIUS2IUS2IUS2_swigregister(itkMultiplyImageFilterIUS2IUS2IUS2)

def itkMultiplyImageFilterIUS2IUS2IUS2___New_orig__():
    """itkMultiplyImageFilterIUS2IUS2IUS2___New_orig__() -> itkMultiplyImageFilterIUS2IUS2IUS2_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2___New_orig__()

def itkMultiplyImageFilterIUS2IUS2IUS2_cast(obj):
    """itkMultiplyImageFilterIUS2IUS2IUS2_cast(itkLightObject obj) -> itkMultiplyImageFilterIUS2IUS2IUS2"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS2IUS2IUS2_cast(obj)

class itkMultiplyImageFilterIUS3IUS3IUS3(itkMultiplyImageFilterIUS3IUS3IUS3_Superclass):
    """


    Pixel-wise multiplication of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    Wiki Examples:  All Examples

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyImageFil
    ter Multiply two images together

    https://www.itk.org/Wiki/ITK/Examples/ImageProcessing/MultiplyByConsta
    ntImageFilter Multiply every pixel in an image by a constant

    C++ includes: itkMultiplyImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkMultiplyImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkMultiplyImageFilterIUS3IUS3IUS3 self) -> itkMultiplyImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Clone(self)

    Input1Input2OutputMultiplyOperatorCheck = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Input1Input2OutputMultiplyOperatorCheck
    __swig_destroy__ = _itkMultiplyImageFilterPython.delete_itkMultiplyImageFilterIUS3IUS3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkMultiplyImageFilterIUS3IUS3IUS3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkMultiplyImageFilterIUS3IUS3IUS3 self) -> itkMultiplyImageFilterIUS3IUS3IUS3"""
        return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMultiplyImageFilterIUS3IUS3IUS3

        Create a new object of the class itkMultiplyImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiplyImageFilterIUS3IUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMultiplyImageFilterIUS3IUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMultiplyImageFilterIUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMultiplyImageFilterIUS3IUS3IUS3.Clone = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_Clone, None, itkMultiplyImageFilterIUS3IUS3IUS3)
itkMultiplyImageFilterIUS3IUS3IUS3.GetPointer = new_instancemethod(_itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_GetPointer, None, itkMultiplyImageFilterIUS3IUS3IUS3)
itkMultiplyImageFilterIUS3IUS3IUS3_swigregister = _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_swigregister
itkMultiplyImageFilterIUS3IUS3IUS3_swigregister(itkMultiplyImageFilterIUS3IUS3IUS3)

def itkMultiplyImageFilterIUS3IUS3IUS3___New_orig__():
    """itkMultiplyImageFilterIUS3IUS3IUS3___New_orig__() -> itkMultiplyImageFilterIUS3IUS3IUS3_Pointer"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3___New_orig__()

def itkMultiplyImageFilterIUS3IUS3IUS3_cast(obj):
    """itkMultiplyImageFilterIUS3IUS3IUS3_cast(itkLightObject obj) -> itkMultiplyImageFilterIUS3IUS3IUS3"""
    return _itkMultiplyImageFilterPython.itkMultiplyImageFilterIUS3IUS3IUS3_cast(obj)



