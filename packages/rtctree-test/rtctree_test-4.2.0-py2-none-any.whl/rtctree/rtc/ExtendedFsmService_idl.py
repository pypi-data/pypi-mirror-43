# Python stubs generated by omniidl from C:\Users\TyouK\Documents\GitHub\rtctree\idl\ExtendedFsmService.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


# #include "SDOPackage.idl"
import rtctree.rtc.SDOPackage_idl
_0_SDOPackage = omniORB.openModule("rtctree.rtc.SDOPackage")
_0_SDOPackage__POA = omniORB.openModule("rtctree.rtc.SDOPackage__POA")

# #include "RTC.idl"
import rtctree.rtc.RTC_idl
_0_RTC = omniORB.openModule("rtctree.rtc.RTC")
_0_RTC__POA = omniORB.openModule("rtctree.rtc.RTC__POA")

#
# Start of module "RTC"
#
__name__ = "rtctree.rtc.RTC"
_0_RTC = omniORB.openModule("rtctree.rtc.RTC", r"C:\Users\TyouK\Documents\GitHub\rtctree\idl\ExtendedFsmService.idl")
_0_RTC__POA = omniORB.openModule("rtctree.rtc.RTC__POA", r"C:\Users\TyouK\Documents\GitHub\rtctree\idl\ExtendedFsmService.idl")


# struct FsmEventProfile
_0_RTC.FsmEventProfile = omniORB.newEmptyClass()
class FsmEventProfile (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/RTC/FsmEventProfile:1.0"

    def __init__(self, name, data_type):
        self.name = name
        self.data_type = data_type

_0_RTC.FsmEventProfile = FsmEventProfile
_0_RTC._d_FsmEventProfile  = (omniORB.tcInternal.tv_struct, FsmEventProfile, FsmEventProfile._NP_RepositoryId, "FsmEventProfile", "name", (omniORB.tcInternal.tv_string,0), "data_type", (omniORB.tcInternal.tv_string,0))
_0_RTC._tc_FsmEventProfile = omniORB.tcInternal.createTypeCode(_0_RTC._d_FsmEventProfile)
omniORB.registerType(FsmEventProfile._NP_RepositoryId, _0_RTC._d_FsmEventProfile, _0_RTC._tc_FsmEventProfile)
del FsmEventProfile

# typedef ... FsmEventProfileList
class FsmEventProfileList:
    _NP_RepositoryId = "IDL:omg.org/RTC/FsmEventProfileList:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_RTC.FsmEventProfileList = FsmEventProfileList
_0_RTC._d_FsmEventProfileList  = (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/RTC/FsmEventProfile:1.0"], 0)
_0_RTC._ad_FsmEventProfileList = (omniORB.tcInternal.tv_alias, FsmEventProfileList._NP_RepositoryId, "FsmEventProfileList", (omniORB.tcInternal.tv_sequence, omniORB.typeMapping["IDL:omg.org/RTC/FsmEventProfile:1.0"], 0))
_0_RTC._tc_FsmEventProfileList = omniORB.tcInternal.createTypeCode(_0_RTC._ad_FsmEventProfileList)
omniORB.registerType(FsmEventProfileList._NP_RepositoryId, _0_RTC._ad_FsmEventProfileList, _0_RTC._tc_FsmEventProfileList)
del FsmEventProfileList

# struct FsmStructure
_0_RTC.FsmStructure = omniORB.newEmptyClass()
class FsmStructure (omniORB.StructBase):
    _NP_RepositoryId = "IDL:omg.org/RTC/FsmStructure:1.0"

    def __init__(self, name, structure, event_profiles, properties):
        self.name = name
        self.structure = structure
        self.event_profiles = event_profiles
        self.properties = properties

_0_RTC.FsmStructure = FsmStructure
_0_RTC._d_FsmStructure  = (omniORB.tcInternal.tv_struct, FsmStructure, FsmStructure._NP_RepositoryId, "FsmStructure", "name", (omniORB.tcInternal.tv_string,0), "structure", (omniORB.tcInternal.tv_string,0), "event_profiles", omniORB.typeMapping["IDL:omg.org/RTC/FsmEventProfileList:1.0"], "properties", omniORB.typeMapping["IDL:omg.org/RTC/NVList:1.0"])
_0_RTC._tc_FsmStructure = omniORB.tcInternal.createTypeCode(_0_RTC._d_FsmStructure)
omniORB.registerType(FsmStructure._NP_RepositoryId, _0_RTC._d_FsmStructure, _0_RTC._tc_FsmStructure)
del FsmStructure

# interface ExtendedFsmService
_0_RTC._d_ExtendedFsmService = (omniORB.tcInternal.tv_objref, "IDL:omg.org/RTC/ExtendedFsmService:1.0", "ExtendedFsmService")
omniORB.typeMapping["IDL:omg.org/RTC/ExtendedFsmService:1.0"] = _0_RTC._d_ExtendedFsmService
_0_RTC.ExtendedFsmService = omniORB.newEmptyClass()
class ExtendedFsmService (_0_SDOPackage.SDOService):
    _NP_RepositoryId = _0_RTC._d_ExtendedFsmService[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_RTC.ExtendedFsmService = ExtendedFsmService
_0_RTC._tc_ExtendedFsmService = omniORB.tcInternal.createTypeCode(_0_RTC._d_ExtendedFsmService)
omniORB.registerType(ExtendedFsmService._NP_RepositoryId, _0_RTC._d_ExtendedFsmService, _0_RTC._tc_ExtendedFsmService)

# ExtendedFsmService operations and attributes
ExtendedFsmService._d_get_current_state = ((), ((omniORB.tcInternal.tv_string,0), ), None)
ExtendedFsmService._d_set_fsm_structure = ((omniORB.typeMapping["IDL:omg.org/RTC/FsmStructure:1.0"], ), (omniORB.typeMapping["IDL:omg.org/RTC/ReturnCode_t:1.0"], ), None)
ExtendedFsmService._d_get_fsm_structure = ((), (omniORB.typeMapping["IDL:omg.org/RTC/ReturnCode_t:1.0"], omniORB.typeMapping["IDL:omg.org/RTC/FsmStructure:1.0"]), None)

# ExtendedFsmService object reference
class _objref_ExtendedFsmService (_0_SDOPackage._objref_SDOService):
    _NP_RepositoryId = ExtendedFsmService._NP_RepositoryId

    def __init__(self, obj):
        _0_SDOPackage._objref_SDOService.__init__(self, obj)

    def get_current_state(self, *args):
        return self._obj.invoke("get_current_state", _0_RTC.ExtendedFsmService._d_get_current_state, args)

    def set_fsm_structure(self, *args):
        return self._obj.invoke("set_fsm_structure", _0_RTC.ExtendedFsmService._d_set_fsm_structure, args)

    def get_fsm_structure(self, *args):
        return self._obj.invoke("get_fsm_structure", _0_RTC.ExtendedFsmService._d_get_fsm_structure, args)

omniORB.registerObjref(ExtendedFsmService._NP_RepositoryId, _objref_ExtendedFsmService)
_0_RTC._objref_ExtendedFsmService = _objref_ExtendedFsmService
del ExtendedFsmService, _objref_ExtendedFsmService

# ExtendedFsmService skeleton
__name__ = "rtctree.rtc.RTC__POA"
class ExtendedFsmService (_0_SDOPackage__POA.SDOService):
    _NP_RepositoryId = _0_RTC.ExtendedFsmService._NP_RepositoryId


    _omni_op_d = {"get_current_state": _0_RTC.ExtendedFsmService._d_get_current_state, "set_fsm_structure": _0_RTC.ExtendedFsmService._d_set_fsm_structure, "get_fsm_structure": _0_RTC.ExtendedFsmService._d_get_fsm_structure}
    _omni_op_d.update(_0_SDOPackage__POA.SDOService._omni_op_d)

ExtendedFsmService._omni_skeleton = ExtendedFsmService
_0_RTC__POA.ExtendedFsmService = ExtendedFsmService
omniORB.registerSkeleton(ExtendedFsmService._NP_RepositoryId, ExtendedFsmService)
del ExtendedFsmService
__name__ = "rtctree.rtc.RTC"

#
# End of module "RTC"
#
__name__ = "rtctree.rtc.ExtendedFsmService_idl"

_exported_modules = ( "rtctree.rtc.RTC", )

# The end.
