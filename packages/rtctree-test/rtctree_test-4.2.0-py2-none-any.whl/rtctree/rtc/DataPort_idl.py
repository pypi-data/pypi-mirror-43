# Python stubs generated by omniidl from C:\Users\TyouK\Documents\GitHub\rtctree\idl\DataPort.idl
# DO NOT EDIT THIS FILE!

import omniORB, _omnipy
from omniORB import CORBA, PortableServer
_0_CORBA = CORBA


_omnipy.checkVersion(4,2, __file__, 1)

try:
    property
except NameError:
    def property(*args):
        return None


#
# Start of module "OpenRTM"
#
__name__ = "rtctree.rtc.OpenRTM"
_0_OpenRTM = omniORB.openModule("rtctree.rtc.OpenRTM", r"C:\Users\TyouK\Documents\GitHub\rtctree\idl\DataPort.idl")
_0_OpenRTM__POA = omniORB.openModule("rtctree.rtc.OpenRTM__POA", r"C:\Users\TyouK\Documents\GitHub\rtctree\idl\DataPort.idl")


# enum PortStatus
_0_OpenRTM.PORT_OK = omniORB.EnumItem("PORT_OK", 0)
_0_OpenRTM.PORT_ERROR = omniORB.EnumItem("PORT_ERROR", 1)
_0_OpenRTM.BUFFER_FULL = omniORB.EnumItem("BUFFER_FULL", 2)
_0_OpenRTM.BUFFER_EMPTY = omniORB.EnumItem("BUFFER_EMPTY", 3)
_0_OpenRTM.BUFFER_TIMEOUT = omniORB.EnumItem("BUFFER_TIMEOUT", 4)
_0_OpenRTM.UNKNOWN_ERROR = omniORB.EnumItem("UNKNOWN_ERROR", 5)
_0_OpenRTM.PortStatus = omniORB.Enum("IDL:OpenRTM/PortStatus:1.0", (_0_OpenRTM.PORT_OK, _0_OpenRTM.PORT_ERROR, _0_OpenRTM.BUFFER_FULL, _0_OpenRTM.BUFFER_EMPTY, _0_OpenRTM.BUFFER_TIMEOUT, _0_OpenRTM.UNKNOWN_ERROR,))

_0_OpenRTM._d_PortStatus  = (omniORB.tcInternal.tv_enum, _0_OpenRTM.PortStatus._NP_RepositoryId, "PortStatus", _0_OpenRTM.PortStatus._items)
_0_OpenRTM._tc_PortStatus = omniORB.tcInternal.createTypeCode(_0_OpenRTM._d_PortStatus)
omniORB.registerType(_0_OpenRTM.PortStatus._NP_RepositoryId, _0_OpenRTM._d_PortStatus, _0_OpenRTM._tc_PortStatus)

# typedef ... CdrData
class CdrData:
    _NP_RepositoryId = "IDL:OpenRTM/CdrData:1.0"
    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")
_0_OpenRTM.CdrData = CdrData
_0_OpenRTM._d_CdrData  = (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0)
_0_OpenRTM._ad_CdrData = (omniORB.tcInternal.tv_alias, CdrData._NP_RepositoryId, "CdrData", (omniORB.tcInternal.tv_sequence, omniORB.tcInternal.tv_octet, 0))
_0_OpenRTM._tc_CdrData = omniORB.tcInternal.createTypeCode(_0_OpenRTM._ad_CdrData)
omniORB.registerType(CdrData._NP_RepositoryId, _0_OpenRTM._ad_CdrData, _0_OpenRTM._tc_CdrData)
del CdrData

# interface InPortCdr
_0_OpenRTM._d_InPortCdr = (omniORB.tcInternal.tv_objref, "IDL:OpenRTM/InPortCdr:1.0", "InPortCdr")
omniORB.typeMapping["IDL:OpenRTM/InPortCdr:1.0"] = _0_OpenRTM._d_InPortCdr
_0_OpenRTM.InPortCdr = omniORB.newEmptyClass()
class InPortCdr :
    _NP_RepositoryId = _0_OpenRTM._d_InPortCdr[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_OpenRTM.InPortCdr = InPortCdr
_0_OpenRTM._tc_InPortCdr = omniORB.tcInternal.createTypeCode(_0_OpenRTM._d_InPortCdr)
omniORB.registerType(InPortCdr._NP_RepositoryId, _0_OpenRTM._d_InPortCdr, _0_OpenRTM._tc_InPortCdr)

# InPortCdr operations and attributes
InPortCdr._d_put = ((omniORB.typeMapping["IDL:OpenRTM/CdrData:1.0"], ), (omniORB.typeMapping["IDL:OpenRTM/PortStatus:1.0"], ), None)

# InPortCdr object reference
class _objref_InPortCdr (CORBA.Object):
    _NP_RepositoryId = InPortCdr._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def put(self, *args):
        return self._obj.invoke("put", _0_OpenRTM.InPortCdr._d_put, args)

omniORB.registerObjref(InPortCdr._NP_RepositoryId, _objref_InPortCdr)
_0_OpenRTM._objref_InPortCdr = _objref_InPortCdr
del InPortCdr, _objref_InPortCdr

# InPortCdr skeleton
__name__ = "rtctree.rtc.OpenRTM__POA"
class InPortCdr (PortableServer.Servant):
    _NP_RepositoryId = _0_OpenRTM.InPortCdr._NP_RepositoryId


    _omni_op_d = {"put": _0_OpenRTM.InPortCdr._d_put}

InPortCdr._omni_skeleton = InPortCdr
_0_OpenRTM__POA.InPortCdr = InPortCdr
omniORB.registerSkeleton(InPortCdr._NP_RepositoryId, InPortCdr)
del InPortCdr
__name__ = "rtctree.rtc.OpenRTM"

# interface OutPortCdr
_0_OpenRTM._d_OutPortCdr = (omniORB.tcInternal.tv_objref, "IDL:OpenRTM/OutPortCdr:1.0", "OutPortCdr")
omniORB.typeMapping["IDL:OpenRTM/OutPortCdr:1.0"] = _0_OpenRTM._d_OutPortCdr
_0_OpenRTM.OutPortCdr = omniORB.newEmptyClass()
class OutPortCdr :
    _NP_RepositoryId = _0_OpenRTM._d_OutPortCdr[1]

    def __init__(self, *args, **kw):
        raise RuntimeError("Cannot construct objects of this type.")

    _nil = CORBA.Object._nil


_0_OpenRTM.OutPortCdr = OutPortCdr
_0_OpenRTM._tc_OutPortCdr = omniORB.tcInternal.createTypeCode(_0_OpenRTM._d_OutPortCdr)
omniORB.registerType(OutPortCdr._NP_RepositoryId, _0_OpenRTM._d_OutPortCdr, _0_OpenRTM._tc_OutPortCdr)

# OutPortCdr operations and attributes
OutPortCdr._d_get = ((), (omniORB.typeMapping["IDL:OpenRTM/PortStatus:1.0"], omniORB.typeMapping["IDL:OpenRTM/CdrData:1.0"]), None)

# OutPortCdr object reference
class _objref_OutPortCdr (CORBA.Object):
    _NP_RepositoryId = OutPortCdr._NP_RepositoryId

    def __init__(self, obj):
        CORBA.Object.__init__(self, obj)

    def get(self, *args):
        return self._obj.invoke("get", _0_OpenRTM.OutPortCdr._d_get, args)

omniORB.registerObjref(OutPortCdr._NP_RepositoryId, _objref_OutPortCdr)
_0_OpenRTM._objref_OutPortCdr = _objref_OutPortCdr
del OutPortCdr, _objref_OutPortCdr

# OutPortCdr skeleton
__name__ = "rtctree.rtc.OpenRTM__POA"
class OutPortCdr (PortableServer.Servant):
    _NP_RepositoryId = _0_OpenRTM.OutPortCdr._NP_RepositoryId


    _omni_op_d = {"get": _0_OpenRTM.OutPortCdr._d_get}

OutPortCdr._omni_skeleton = OutPortCdr
_0_OpenRTM__POA.OutPortCdr = OutPortCdr
omniORB.registerSkeleton(OutPortCdr._NP_RepositoryId, OutPortCdr)
del OutPortCdr
__name__ = "rtctree.rtc.OpenRTM"

#
# End of module "OpenRTM"
#
__name__ = "rtctree.rtc.DataPort_idl"

_exported_modules = ( "rtctree.rtc.OpenRTM", )

# The end.
