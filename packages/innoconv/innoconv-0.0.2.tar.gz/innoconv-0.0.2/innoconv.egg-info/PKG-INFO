Metadata-Version: 2.1
Name: innoconv
Version: 0.0.2
Summary: Converter for interactive educational content.
Home-page: https://gitlab.tu-berlin.de/innodoc/innoconv
Author: Mirko Dietrich, innoCampus, TU Berlin
Author-email: dietrich@math.tu-berlin.de
License: GPLv3
Project-URL: Documentation, https://readthedocs.org/projects/innoconv/
Description: [![build status](https://gitlab.tubit.tu-berlin.de/innodoc/innoconv/badges/master/build.svg)](https://gitlab.tubit.tu-berlin.de/innodoc/innoconv/commits/master) [![coverage report](https://gitlab.tubit.tu-berlin.de/innodoc/innoconv/badges/master/coverage.svg)](https://gitlab.tubit.tu-berlin.de/innodoc/innoconv/commits/master) [![Documentation Status](https://readthedocs.org/projects/innoconv/badge/?version=latest)](https://innoconv.readthedocs.io/en/latest/?badge=latest)
        
        # innoConv
        
        Converter for interactive educational content.
        
        Please refer to the [documentation](https://innoconv.readthedocs.io/) for installation and usage.
        
        ## Quickstart
        
        ```sh
        # Install innoconv locally using pip
        $ python3 -m pip install --user innoconv
        # Convert some content
        $ innoconv .
        ```
        
        ## Development
        
        ### Setup environment
        
        ```sh
        $ python3 -m venv venv
        $ . venv/bin/activate
        $ pip install -e .[dev]
        ```
        
        ### Commands
        
        #### Build example content
        
        ##### JSON
        
        Get the content source code and convert it to JSON.
        
        ```sh
        $ git clone -b innoconv git@gitlab.tubit.tu-berlin.de:innodoc/tub_base
        $ innoconv tub_base
        ```
        
        #### Linting
        
        Adhere to [PEP8](https://www.python.org/dev/peps/pep-0008/).
        
        ```sh
        $ ./setup.py lint
        ```
        
        #### Tests
        
        ```sh
        $ ./setup.py test
        $ ./setup.py integration_test
        ```
        
        #### Build HTML coverage report
        
        A coverage report will be created in `./htmlcov`.
        
        ```sh
        $ ./setup.py coverage
        ```
        
        #### Documentation
        
        You can find the documentation in `./build/sphinx`.
        
        ```sh
        $ ./setup.py build_sphinx
        ```
        
Keywords: innodoc,pandoc,markdown,education
Platform: UNKNOWN
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)
Classifier: Operating System :: POSIX :: Linux
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Intended Audience :: Education
Classifier: Topic :: Education
Classifier: Topic :: Text Processing :: Markup
Requires-Python: >=3.6.0
Description-Content-Type: text/markdown
Provides-Extra: dev
Provides-Extra: doc
