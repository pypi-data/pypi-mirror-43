[tox]
envlist = py27dj18,py27dj19,py27dj110,py27dj111,py35dj18,py35dj19,py35dj110,py35dj111,pep8,releasenotes
minversion = 2.3.2
skipsdist = True

[testenv]
usedevelop = True
install_command = {toxinidir}/tools/tox_install.sh \
                  {env:UPPER_CONSTRAINTS_FILE:https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?h=stable/queens} \
                  {opts} {packages}
setenv =
  VIRTUAL_ENV={envdir}
  INTEGRATION_TESTS=0
  NOSE_WITH_OPENSTACK=1
  NOSE_OPENSTACK_COLOR=1
  NOSE_OPENSTACK_RED=0.05
  NOSE_OPENSTACK_YELLOW=0.025
  NOSE_OPENSTACK_SHOW_ELAPSED=1
deps = -r{toxinidir}/requirements.txt
       -r{toxinidir}/test-requirements.txt
commands =
  py27: {[unit_tests]commands}
  py35: {[unit_tests]commands}

[unit_tests]
commands = python manage.py test heat_dashboard.test --settings=heat_dashboard.test.settings

[testenv:pep8]
commands = flake8 {posargs}

[testenv:venv]
commands = {posargs}

[testenv:cover]
commands =
  coverage erase
  coverage run --source=heat_dashboard {toxinidir}/manage.py test heat_dashboard.test.tests --settings=heat_dashboard.test.settings {posargs}
  coverage xml
  coverage html

[testenv:py27dj18]
basepython = python2.7
commands =
  pip install django>=1.8,<1.9
  {[unit_tests]commands}

[testenv:py27dj19]
basepython = python2.7
commands =
  pip install django>=1.9,<1.10
  {[unit_tests]commands}

[testenv:py27dj110]
basepython = python2.7
commands =
  pip install django>=1.10,<1.11
  {[unit_tests]commands}

[testenv:py27dj111]
basepython = python2.7
commands =
  pip install django>=1.11,<2.0
  {[unit_tests]commands}

[testenv:py35]
basepython = python3.5
commands = {[unit_tests]commands}

[testenv:py35dj18]
basepython = python3.5
commands =
  pip install django>=1.8,<1.9
  {[unit_tests]commands}

[testenv:py35dj19]
basepython = python3.5
commands =
  pip install django>=1.9,<1.10
  {[unit_tests]commands}

[testenv:py35dj110]
basepython = python3.5
commands =
  pip install django>=1.10,<1.11
  {[unit_tests]commands}

[testenv:py35dj111]
basepython = python3.5
commands =
  pip install django>=1.11,<2.0
  {[unit_tests]commands}

[testenv:docs]
deps = -r{toxinidir}/doc/requirements.txt
commands = python setup.py build_sphinx

[testenv:releasenotes]
deps = -r{toxinidir}/doc/requirements.txt
commands = sphinx-build -a -E -W -d releasenotes/build/doctrees -b html releasenotes/source releasenotes/build/html

[hacking]
local-check-factory = horizon.hacking.checks.factory

[flake8]
exclude = .venv,.git,.tox,dist,*lib/python*,*egg,build,panel_template,dash_template,local_settings.py,*/local/*,*/test/test_plugins/*,.ropeproject,node_modules,.tmp
max-complexity = 20
import-order-style = pep8

[testenv:npm]
passenv =
  HOME
  DISPLAY
commands =
  nodeenv -p
  npm install
  npm run {posargs:test}

[doc8]
# File extensions to check
extensions = .rst, .yaml
# Maximal line length should be 80 but we have some overlong lines.
# Let's not get far more in.
max-line-length = 80
# Disable some doc8 checks:
# D000: Check RST validity
# - cannot handle "none" for code-block directive
ignore = D000
