heat_template_version: rocky

description: >
  OpenStack containerized Liquidio compute service
parameters:
  DockerLiquidioImage:
    description: The container image to use for the Liquidio Service
    type: string
  DockerLiquidioConfigImage:
    description: The container image to use for the Liquidio config generation
    type: string
  EndpointMap:
    default: {}
    description: Mapping of service endpoint -> protocol. Typically set
                 via parameter_defaults in the resource registry.
    type: json
  ServiceData:
    default: {}
    description: Dictionary packing service data
    type: json
  ServiceNetMap:
    default: {}
    description: Mapping of service_name -> network name. Typically set
                 via parameter_defaults in the resource registry.  This
                 mapping overrides those in ServiceNetMapDefaults.
    type: json
  DefaultPasswords:
    default: {}
    type: json
  RoleName:
    default: ''
    description: Role name on which the service is applied
    type: string
  RoleParameters:
    default: {}
    description: Parameters specific to the role
    type: json

resources:

  ContainersCommon:
    type: ./containers-common.yaml

  LiquidioBase:
    type: ../../puppet/services/liquidio-compute-config.yaml
    properties:
      EndpointMap: {get_param: EndpointMap}
      ServiceData: {get_param: ServiceData}
      ServiceNetMap: {get_param: ServiceNetMap}
      DefaultPasswords: {get_param: DefaultPasswords}
      RoleName: {get_param: RoleName}
      RoleParameters: {get_param: RoleParameters}

outputs:
  role_data:
    description: Role data for Liquidio compute service.
    value:
      service_name: {get_attr: [LiquidioBase, role_data, service_name]}
      config_settings:
        get_attr: [LiquidioBase, role_data, config_settings]
      puppet_config:
        config_volume: liquidio
        puppet_tags: liquidio_config
        step_config:
          get_attr: [LiquidioBase, role_data, step_config]
        config_image: {get_param: DockerLiquidioConfigImage}
      kolla_config:
        /var/lib/kolla/config_files/liquidio_config.json:
          command: "/usr/bin/liquidio-compute start"
          config_files:
            - source: "/var/lib/kolla/config_files/src/*"
              dest: "/"
              merge: true
              preserve_properties: true
          permissions:
            - path: /var/log/liquidio/
              owner: root:root
              recurse: true
      docker_config:
        step_5:
          liquidio_compute_service:
            start_order: 10
            image: {get_param: DockerLiquidioImage}
            net: host
            detach: true
            user: root
            privileged: true
            restart: always
            volumes:
              list_concat:
                - {get_attr: [ContainersCommon, volumes]}
                -
                  - /var/lib/kolla/config_files/liquidio_config.json:/var/lib/kolla/config_files/config.json:ro
                  - /var/lib/config-data/puppet-generated/liquidio/:/var/lib/kolla/config_files/src:ro
                  - /etc/udev/:/etc/udev/:z
                  - /usr/lib/udev/:/usr/lib/udev/:z
                  - /lib/modules/:/lib/modules/:z
                  - /usr/lib/firmware/liquidio/:/usr/lib/firmware/liquidio/:z
                  - /dev:/dev
                  - /run:/run
            environment:
              - KOLLA_CONFIG_STRATEGY=COPY_ALWAYS
      post_upgrade_tasks:
        - when: step|int == 1
          import_role:
            name: tripleo-docker-rm
          vars:
            containers_to_rm:
              - liquidio_compute_service
