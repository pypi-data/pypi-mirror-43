# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from m3s_grpc import m3s_pb2 as m3s__grpc_dot_m3s__pb2


class M3STwoDotFourRequestorStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.SendM3SRequest = channel.unary_unary(
        '/m3s.M3STwoDotFourRequestor/SendM3SRequest',
        request_serializer=m3s__grpc_dot_m3s__pb2.M3STwoDotFourRequestList.SerializeToString,
        response_deserializer=m3s__grpc_dot_m3s__pb2.M3SResponse.FromString,
        )


class M3STwoDotFourRequestorServicer(object):
  """The greeting service definition.
  """

  def SendM3SRequest(self, request, context):
    """Sends a greeting
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_M3STwoDotFourRequestorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'SendM3SRequest': grpc.unary_unary_rpc_method_handler(
          servicer.SendM3SRequest,
          request_deserializer=m3s__grpc_dot_m3s__pb2.M3STwoDotFourRequestList.FromString,
          response_serializer=m3s__grpc_dot_m3s__pb2.M3SResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'm3s.M3STwoDotFourRequestor', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
