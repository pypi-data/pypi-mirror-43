---
- name: "Set Heat parameters for template"
  set_fact:
    heat_params : "{{ res_grp_vars | selectattr('resource_group_name', 'match', '^' + res_grp_name + '$') | first }}"

- name: "Set Heat parameters for template"
  set_fact:
    heat_params : "{{ heat_params['heat_params'] }}"

- name: "provision/deprovision os_heat stack"
  os_hot_stack:
    stack_name: "{{ res_def['res_name'] | default(res_def['name']) }}"
    template: "{{ res_def['template_path'] }}"
    state: "{{ state }}"
    wait: "yes"
    os_auth_url: "{{ auth_var['auth_url']| default(omit) }}"
    os_username: "{{ auth_var['username']| default(omit) }}"
    os_password: "{{ auth_var['password']| default(omit) }}"
    os_tenant_name: "{{ auth_var['project_name']| default(omit) }}"
    parameters: "{{ heat_params }}"
  register: res_def_output
  when: not async
  no_log: "{{ not debug_mode }}"

- name: "Append outputitem to topology_outputs"
  set_fact:
    topology_outputs_os_heat: "{{ topology_outputs_os_heat + [ res_def_output.output ] }}"
  when: not async

- name: "provision/deprovision os_heat stack"
  os_hot_stack:
    stack_name: "{{ res_def['res_name'] | default(res_def['name']) }}"
    template: "{{ res_def['template_path']  }}"
    state: "{{ state }}"
    wait: "yes"
    os_auth_url: "{{ auth_var['auth_url'] | default(omit) }}"
    os_username: "{{ auth_var['username']| default(omit) }}"
    os_password: "{{ auth_var['password']| default(omit) }}"
    os_tenant_name: "{{ auth_var['project_name'] | default(omit) }}"
    parameters: "{{ heat_params }}"
  async: "{{ async_timeout }}"
  poll: 0
  register: res_def_output
  when: async
  no_log: "{{ not debug_mode }}"

# following tasks saves the async job details
- name: "Async:: save the job id"
  set_fact:
    topology_outputs_os_heat: "{{ topology_outputs_os_heat + [ res_def_output ] }}"
  when: async

- name: "Add type to resource"
  set_fact:
    topology_outputs_os_heat: "{{ topology_outputs_os_heat | add_res_type('os_heat_res') }}"
