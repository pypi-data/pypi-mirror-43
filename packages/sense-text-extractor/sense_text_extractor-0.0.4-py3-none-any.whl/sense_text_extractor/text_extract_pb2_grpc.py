# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from  sense_text_extractor import text_extract_pb2 as text__extract__pb2


class TextExtractorStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.extract = channel.unary_unary(
        '/text_extract.TextExtractor/extract',
        request_serializer=text__extract__pb2.ExtractRequest.SerializeToString,
        response_deserializer=text__extract__pb2.ExtractReply.FromString,
        )


class TextExtractorServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def extract(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_TextExtractorServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'extract': grpc.unary_unary_rpc_method_handler(
          servicer.extract,
          request_deserializer=text__extract__pb2.ExtractRequest.FromString,
          response_serializer=text__extract__pb2.ExtractReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'text_extract.TextExtractor', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
