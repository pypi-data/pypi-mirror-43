# -*- coding: utf-8 -*-
from distutils.core import setup

packages = \
['quantdom', 'quantdom.lib']

package_data = \
{'': ['*']}

install_requires = \
['PyQt5-sip>=4.19,<5.0',
 'PyQt5>=5.11,<6.0',
 'numpy>=1.16,<2.0',
 'pandas-datareader>=0.7.0,<0.8.0',
 'pandas>=0.24.1,<0.25.0',
 'pyqtgraph>=0.10.0,<0.11.0']

entry_points = \
{'console_scripts': ['quantdom = quantdom.cli:cli']}

setup_kwargs = {
    'name': 'quantdom',
    'version': '0.1.1',
    'description': 'Simple but powerful backtesting framework, that strives to let you focus on modeling financial strategies, portfolio management, and analyzing backtests.',
    'long_description': "Quantdom\n========\n\n.. image:: https://img.shields.io/pypi/v/quantdom.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/quantdom/\n.. image:: https://img.shields.io/travis/constverum/Quantdom.svg?style=flat-square\n    :target: https://travis-ci.org/constverum/Quantdom\n.. image:: https://img.shields.io/pypi/wheel/quantdom.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/quantdom/\n.. image:: https://img.shields.io/pypi/pyversions/quantdom.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/quantdom/\n.. image:: https://img.shields.io/pypi/l/quantdom.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/quantdom/\n\nQuantdom is a simple but powerful backtesting framework written in python, that strives to let you focus on modeling financial strategies, portfolio management, and analyzing backtests. It has been created as a useful and flexible tool to save the systematic trading community from re-inventing the wheel and let them evaluate their trading ideas easier with minimal effort. It's designed for people who are already comfortable with *Python* and who want to create, test and explore their own trading strategies.\n\n.. image:: http://f.cl.ly/items/1z1t1T0A0P161f053i45/quantdom_v0.1a1.gif\n\nQuantdom is in an early alpha state at the moment. So please be patient with possible errors and report them.\n\n\nFeatures\n--------\n\n* Free, open-source and cross-platform backtesting framework\n* Multiple data feeds: csv files and online sources such as Google Finance, Yahoo Finance, Quandl and more\n* Investment Analysis (performance and risk analysis of financial portfolio)\n* Charting and reporting that help visualize backtest results\n\n\nRequirements\n------------\n\n* Python **3.6** or higher\n* `PyQt5 <https://pypi.python.org/pypi/PyQt5>`_\n* `PyQtGraph <http://www.pyqtgraph.org/>`_\n* `NumPy <http://www.numpy.org/>`_\n* See `pyproject.toml <https://github.com/constverum/Quantdom/blob/master/pyproject.toml#L43-L50>`_ for full details.\n\n\nInstallation\n------------\n\nUsing the binaries\n##################\n\nYou can download binary packages for your system (see the `Github Releases <https://github.com/constverum/Quantdom/releases>`_ page for available downloads):\n\n* For `Windows  <https://github.com/constverum/Quantdom/releases/download/v0.1/quantdom_0.1.exe>`_\n* For `MacOS  <https://github.com/constverum/Quantdom/releases/download/v0.1/quantdom_0.1.dmg>`_\n* For `Linux  <https://github.com/constverum/Quantdom/releases/download/v0.1/quantdom_0.1.zip>`_\n\nRunning from source code\n########################\n\nYou can install last *stable release* from pypi:\n\n.. code-block:: bash\n\n    $ pip install quantdom\n\nAnd latest *development version* can be installed directly from GitHub:\n\n.. code-block:: bash\n\n    $ pip install -U git+https://github.com/constverum/Quantdom.git\n\nAfter that, to run the application just execute one command:\n\n.. code-block:: bash\n\n    $ quantdom\n\n\nUsage\n-----\n\n1. Run Quantdom.\n2. Choose a market instrument (symbol) for backtesting on the ``Data`` tab.\n3. Specify a file with your strategies on the ``Quotes`` tab, and select one of them.\n4. Run a backtest. Once this is done, you can analyze the results and optimize parameters of the strategy.\n\n\nStrategy Examples\n-----------------\n\nThree-bar strategy\n##################\n\nA simple trading strategy based on the assumption that after three consecutive bullish bars (bar closing occurred higher than its opening) bulls predominate in the market and therefore the price will continue to grow; after 3 consecutive bearish bars (the bar closes lower than its opening), the price will continue to down, since bears predominate in the market.\n\n.. code-block:: python\n\n    from quantdom import AbstractStrategy, Order, Portfolio\n\n    class ThreeBarStrategy(AbstractStrategy):\n\n        def init(self, high_bars=3, low_bars=3):\n            Portfolio.initial_balance = 100000  # default value\n            self.seq_low_bars = 0\n            self.seq_high_bars = 0\n            self.signal = None\n            self.last_position = None\n            self.volume = 100  # shares\n            self.high_bars = high_bars\n            self.low_bars = low_bars\n\n        def handle(self, quote):\n            if self.signal:\n                props = {\n                    'symbol': self.symbol,  # current selected symbol\n                    'otype': self.signal,\n                    'price': quote.open,\n                    'volume': self.volume,\n                    'time': quote.time,\n                }\n                if not self.last_position:\n                    self.last_position = Order.open(**props)\n                elif self.last_position.type != self.signal:\n                    Order.close(self.last_position, price=quote.open, time=quote.time)\n                    self.last_position = Order.open(**props)\n                self.signal = False\n                self.seq_high_bars = self.seq_low_bars = 0\n\n            if quote.close > quote.open:\n                self.seq_high_bars += 1\n                self.seq_low_bars = 0\n            else:\n                self.seq_high_bars = 0\n                self.seq_low_bars += 1\n\n            if self.seq_high_bars == self.high_bars:\n                self.signal = Order.BUY\n            elif self.seq_low_bars == self.low_bars:\n                self.signal = Order.SELL\n\n\nDocumentation\n-------------\n\nIn progress ;)\n\n\nTODO\n----\n\n* Add integration with `TA-Lib <http://ta-lib.org/>`_\n* Add the ability to use TensorFlow/CatBoost/Scikit-Learn and other ML tools to create incredible algorithms and strategies. Just as one of the first tasks is Elliott Wave Theory(Principle) - to recognize of current wave and on the basis of this predict price movement at confidence intervals\n* Add the ability to make a sentiment analysis from different sources (news, tweets, etc)\n* Add ability to create custom screens, ranking functions, reports\n\n\nContributing\n------------\n\n* Fork it: https://github.com/constverum/Quantdom/fork\n* Create your feature branch: git checkout -b my-new-feature\n* Commit your changes: git commit -am 'Add some feature'\n* Push to the branch: git push origin my-new-feature\n* Submit a pull request!\n\n\nDisclaimer\n----------\n\nThis software should not be used as a financial advisor, it is for educational use only.\nAbsolutely no warranty is implied with this product. By using this software you release the author(s) from any liability regarding the use of this software. You can lose money because this program probably has some errors in it, so use it at your own risk. And please don't take risks with money you can't afford to lose.\n\n\nFeedback\n--------\n\nI'm very interested in your experience with Quantdom.\nPlease feel free to send me any feedback, ideas, enhancement requests or anything else.\n\n\nLicense\n-------\n\nLicensed under the Apache License, Version 2.0\n",
    'author': 'Constverum',
    'author_email': 'constverum@gmail.com',
    'url': 'https://github.com/constverum/Quantdom',
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
