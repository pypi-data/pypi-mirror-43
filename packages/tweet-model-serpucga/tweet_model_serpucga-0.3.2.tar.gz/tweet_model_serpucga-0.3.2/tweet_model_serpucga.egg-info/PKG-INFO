Metadata-Version: 1.1
Name: tweet-model-serpucga
Version: 0.3.2
Summary: A modelization of a tweet object with convenient features and functionalities
Home-page: https://github.com/Serbaf/tweet_model
Author: Sergio Puche Garc√≠a
Author-email: serpucga@protonmail.com
License: MIT license
Description: ===========
        Tweet Model
        ===========
        
        
        .. image:: https://img.shields.io/pypi/v/tweet_model_serpucga.svg
                :target: https://pypi.python.org/pypi/tweet_model_serpucga
        
        .. image:: https://img.shields.io/travis/Serbaf/tweet_model.svg
                :target: https://travis-ci.org/Serbaf/tweet_model
        
        .. image:: https://readthedocs.org/projects/tweet-model/badge/?version=latest
                :target: https://tweet-model.readthedocs.io/en/latest/?badge=latest
                :alt: Documentation Status
        
        
        
        
        A modelization of a tweet object with convenient features and functionalities.
        This project was thought for integration and usage as a package by the Twitter
        Dashboard project.
        
        
        * Free software: MIT license
        * Documentation: https://tweet-model.readthedocs.io.
        
        
        Features
        --------
        
        * A modelization of a tweet in the form of class Tweet. This class contains a
          constructor that initializes all the possible tweet attributes to None
          except those indicated otherwise.
        * The inner objects of a tweet ("user", "entities", "places", etc.) are stored
          internally as nested dictionaries.
        * The __getitem__() method for Tweet is overriden to allow a dictionary-like
          access to the tweet contents. For example, if "tweet1" is an instance of
          Tweet, one could do tweet1["id"] to get the id of that tweet, or
          tweet1["user"]["name"] to get the name of the person that published the
          tweet.
        
        Credits
        -------
        Creator: Sergio
        
        This package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.
        
        .. _Cookiecutter: https://github.com/audreyr/cookiecutter
        .. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage
        
        
        =======
        History
        =======
        
        0.1.0 (2019-03-13)
        ------------------
        
        * First release on PyPI.
        
        
        0.2.0 (2019-03-20)
        ------------------
        * Completed the Tweet class that allows the user to make usable instances of a
          tweet model. Includes initialization of all the Tweet attributes indicated in
          the Twitter documentation (default to None, unless the user provides a value)
          and overriding of __getitem__ to provide a dictionary-like access to the
          information.
        
        
        0.3.0 (2019-03-20)
        ------------------
        * Added method "get_tweets_from_csv()", which gets a CSV file as an argument
          and returns a list containing as many Tweet objects as lines (minus the
          header) in the CSV file. The header of the CSV is used to know which 
          attributes should be set.
        * The method will raise an error and exit if any item in the header does not
          match with the specification of the Tweet object (for example, the header
          word "media.sizes.thumb.h" would be valid, but "user.lightsaber.color" would
          not.
        * At this point, the method took 1.75s aprox to read and return the contents of
          a 5.7 MB as a list of 'Tweet's. This could be troublesome with very large
          collections in a future if the progression of time was proportional with the 
          file size (estimation would be 25 minutes for a 5 GB file)
        
Keywords: tweet_model
Platform: UNKNOWN
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 2
Classifier: Programming Language :: Python :: 2.7
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
