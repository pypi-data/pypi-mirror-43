from . import pyscf
from ..testdata import get_json
import unittest
import json


reference_c = json.loads("""[
    [0, [7857.1, 0.00056825], [1178.7, 0.0043915], [268.32, 0.022504], [75.948, 0.086653],
        [24.559, 0.24405], [8.6212, 0.44148], [3.1278, 0.35332]],
    [0, [1178.7, -5.9492e-07], [268.32, -6.2748e-05], [75.948, -0.00075773],
        [24.559, -0.0073308], [8.6212, -0.038932], [3.1278, -0.088908],
        [0.82202, 0.21689]],
    [0, [0.33017, 1.0]],
    [0, [0.11463, 1.0]],
    [1, [33.775, 0.0060294], [7.6766, 0.043228], [2.2357, 0.16301], [0.76447, 0.36504]],
    [1, [0.26232, 1.0]],
    [1, [0.084638, 1.0]],
    [2, [1.4, 1.0]],
    [2, [0.45, 1.0]],
    [3, [0.95, 1.0]]
]""")

reference_si = json.loads("""[
    [0, [120040.0, 0.00016075], [17991.0, 0.0012472], [4094.8, 0.006504],
        [1159.6, 0.026665], [378.0, 0.088816], [135.93, 0.22932], [52.411, 0.40025],
        [20.927, 0.33828], [7.713, 0.065512]],
    [0, [17991.0, -6.8403e-07], [4094.8, -2.1124e-06], [1159.6, -6.9157e-05],
        [378.0, -0.0004808], [135.93, -0.0041694], [52.411, -0.017674],
        [20.927, -0.042891], [7.713, 0.045368], [3.1604, 0.13904]],
    [0, [4094.8, -3.9897e-06], [1159.6, -5.0203e-05], [378.0, -0.00057553],
        [135.93, -0.0041524], [52.411, -0.020437], [20.927, -0.046998], [7.713, 0.043986],
        [3.1604, 0.33957], [1.2348, 0.35038]],
    [0, [0.26775, 1.0]],
    [0, [0.094067, 1.0]],
    [1, [677.13, 0.0010925], [160.67, 0.0089601], [51.585, 0.044744], [18.948, 0.14748],
        [7.6163, 0.3148], [3.1317, 0.41339], [1.2703, 0.2644]],
    [1, [160.67, 7.9014e-06], [51.585, -0.00013613], [18.948, -0.00090378],
        [7.6163, -0.0055863], [3.1317, -0.010141], [1.2703, 0.018661], [0.43332, 0.2889]],
    [1, [0.16088, 1.0]],
    [1, [0.054883, 1.0]],
    [2, [1.68, 1.0]],
    [2, [0.38, 1.0]],
    [3, [0.54, 1.0]]
]""")


class TestQChem(unittest.TestCase):
    """
    Test using pyscf convert_to function
    """
    def test_convert_to(self):
        data = get_json("pc-2")
        basis = pyscf.convert_to(data)
        assert "Si" in basis
        assert "C" in basis

        assert reference_c == basis["C"]
        assert reference_si == basis["Si"]
