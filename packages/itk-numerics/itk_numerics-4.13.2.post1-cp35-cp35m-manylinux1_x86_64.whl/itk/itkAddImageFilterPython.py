# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkAddImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkAddImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkAddImageFilterPython
            return _itkAddImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkAddImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkAddImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkAddImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSimpleDataObjectDecoratorPython
import itkRGBPixelPython
import itkFixedArrayPython
import pyBasePython
import itkArrayPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkVectorPython
import vnl_vector_refPython
import itkRGBAPixelPython
import ITKCommonBasePython
import itkCovariantVectorPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkVectorImagePython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkVariableLengthVectorPython
import itkImagePython
import itkPointPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkImageRegionPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython

def itkAddImageFilterIF3IF3IF3_New():
  return itkAddImageFilterIF3IF3IF3.New()


def itkAddImageFilterIF3IF3IF3_Superclass_New():
  return itkAddImageFilterIF3IF3IF3_Superclass.New()


def itkAddImageFilterIF2IF2IF2_New():
  return itkAddImageFilterIF2IF2IF2.New()


def itkAddImageFilterIF2IF2IF2_Superclass_New():
  return itkAddImageFilterIF2IF2IF2_Superclass.New()


def itkAddImageFilterIUS3IUS3IUS3_New():
  return itkAddImageFilterIUS3IUS3IUS3.New()


def itkAddImageFilterIUS3IUS3IUS3_Superclass_New():
  return itkAddImageFilterIUS3IUS3IUS3_Superclass.New()


def itkAddImageFilterIUS2IUS2IUS2_New():
  return itkAddImageFilterIUS2IUS2IUS2.New()


def itkAddImageFilterIUS2IUS2IUS2_Superclass_New():
  return itkAddImageFilterIUS2IUS2IUS2_Superclass.New()


def itkAddImageFilterIUC3IUC3IUC3_New():
  return itkAddImageFilterIUC3IUC3IUC3.New()


def itkAddImageFilterIUC3IUC3IUC3_Superclass_New():
  return itkAddImageFilterIUC3IUC3IUC3_Superclass.New()


def itkAddImageFilterIUC2IUC2IUC2_New():
  return itkAddImageFilterIUC2IUC2IUC2.New()


def itkAddImageFilterIUC2IUC2IUC2_Superclass_New():
  return itkAddImageFilterIUC2IUC2IUC2_Superclass.New()


def itkAddImageFilterISS3ISS3ISS3_New():
  return itkAddImageFilterISS3ISS3ISS3.New()


def itkAddImageFilterISS3ISS3ISS3_Superclass_New():
  return itkAddImageFilterISS3ISS3ISS3_Superclass.New()


def itkAddImageFilterISS2ISS2ISS2_New():
  return itkAddImageFilterISS2ISS2ISS2.New()


def itkAddImageFilterISS2ISS2ISS2_Superclass_New():
  return itkAddImageFilterISS2ISS2ISS2_Superclass.New()

class itkAddImageFilterIF2IF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkAddImageFilterIF2IF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIF2IF2IF2_Superclass_Pointer":
        """__New_orig__() -> itkAddImageFilterIF2IF2IF2_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIF2IF2IF2_Superclass_Pointer":
        """Clone(itkAddImageFilterIF2IF2IF2_Superclass self) -> itkAddImageFilterIF2IF2IF2_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_Clone(self)


    def SetInput1(self, *args) -> "void":
        """
        SetInput1(itkAddImageFilterIF2IF2IF2_Superclass self, itkImageF2 image1)
        SetInput1(itkAddImageFilterIF2IF2IF2_Superclass self, itkSimpleDataObjectDecoratorF input1)
        SetInput1(itkAddImageFilterIF2IF2IF2_Superclass self, float const & input1)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1: 'float const &') -> "void":
        """SetConstant1(itkAddImageFilterIF2IF2IF2_Superclass self, float const & input1)"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self) -> "float const &":
        """GetConstant1(itkAddImageFilterIF2IF2IF2_Superclass self) -> float const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_GetConstant1(self)


    def SetInput2(self, *args) -> "void":
        """
        SetInput2(itkAddImageFilterIF2IF2IF2_Superclass self, itkImageF2 image2)
        SetInput2(itkAddImageFilterIF2IF2IF2_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkAddImageFilterIF2IF2IF2_Superclass self, float const & input2)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2: 'float const &') -> "void":
        """SetConstant2(itkAddImageFilterIF2IF2IF2_Superclass self, float const & input2)"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct: 'float') -> "void":
        """SetConstant(itkAddImageFilterIF2IF2IF2_Superclass self, float ct)"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetConstant(self, ct)


    def GetConstant(self) -> "float const &":
        """GetConstant(itkAddImageFilterIF2IF2IF2_Superclass self) -> float const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_GetConstant(self)


    def GetConstant2(self) -> "float const &":
        """GetConstant2(itkAddImageFilterIF2IF2IF2_Superclass self) -> float const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args) -> "itk::Functor::Add2< float,float,float > const &":
        """
        GetFunctor(itkAddImageFilterIF2IF2IF2_Superclass self) -> itk::Functor::Add2< float,float,float >
        GetFunctor(itkAddImageFilterIF2IF2IF2_Superclass self) -> itk::Functor::Add2< float,float,float > const &
        """
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Add2< float,float,float > const &') -> "void":
        """SetFunctor(itkAddImageFilterIF2IF2IF2_Superclass self, itk::Functor::Add2< float,float,float > const & functor)"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIF2IF2IF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIF2IF2IF2_Superclass *":
        """cast(itkLightObject obj) -> itkAddImageFilterIF2IF2IF2_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIF2IF2IF2_Superclass *":
        """GetPointer(itkAddImageFilterIF2IF2IF2_Superclass self) -> itkAddImageFilterIF2IF2IF2_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIF2IF2IF2_Superclass

        Create a new object of the class itkAddImageFilterIF2IF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIF2IF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIF2IF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIF2IF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIF2IF2IF2_Superclass.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_Clone, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass.SetInput1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetInput1, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass.SetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetConstant1, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass.GetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_GetConstant1, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass.SetInput2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetInput2, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass.SetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetConstant2, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass.SetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetConstant, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass.GetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_GetConstant, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass.GetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_GetConstant2, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass.GetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_GetFunctor, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass.SetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_SetFunctor, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_GetPointer, None, itkAddImageFilterIF2IF2IF2_Superclass)
itkAddImageFilterIF2IF2IF2_Superclass_swigregister = _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_swigregister
itkAddImageFilterIF2IF2IF2_Superclass_swigregister(itkAddImageFilterIF2IF2IF2_Superclass)

def itkAddImageFilterIF2IF2IF2_Superclass___New_orig__() -> "itkAddImageFilterIF2IF2IF2_Superclass_Pointer":
    """itkAddImageFilterIF2IF2IF2_Superclass___New_orig__() -> itkAddImageFilterIF2IF2IF2_Superclass_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass___New_orig__()

def itkAddImageFilterIF2IF2IF2_Superclass_cast(obj: 'itkLightObject') -> "itkAddImageFilterIF2IF2IF2_Superclass *":
    """itkAddImageFilterIF2IF2IF2_Superclass_cast(itkLightObject obj) -> itkAddImageFilterIF2IF2IF2_Superclass"""
    return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Superclass_cast(obj)

class itkAddImageFilterIF3IF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkAddImageFilterIF3IF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIF3IF3IF3_Superclass_Pointer":
        """__New_orig__() -> itkAddImageFilterIF3IF3IF3_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIF3IF3IF3_Superclass_Pointer":
        """Clone(itkAddImageFilterIF3IF3IF3_Superclass self) -> itkAddImageFilterIF3IF3IF3_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_Clone(self)


    def SetInput1(self, *args) -> "void":
        """
        SetInput1(itkAddImageFilterIF3IF3IF3_Superclass self, itkImageF3 image1)
        SetInput1(itkAddImageFilterIF3IF3IF3_Superclass self, itkSimpleDataObjectDecoratorF input1)
        SetInput1(itkAddImageFilterIF3IF3IF3_Superclass self, float const & input1)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1: 'float const &') -> "void":
        """SetConstant1(itkAddImageFilterIF3IF3IF3_Superclass self, float const & input1)"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self) -> "float const &":
        """GetConstant1(itkAddImageFilterIF3IF3IF3_Superclass self) -> float const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_GetConstant1(self)


    def SetInput2(self, *args) -> "void":
        """
        SetInput2(itkAddImageFilterIF3IF3IF3_Superclass self, itkImageF3 image2)
        SetInput2(itkAddImageFilterIF3IF3IF3_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkAddImageFilterIF3IF3IF3_Superclass self, float const & input2)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2: 'float const &') -> "void":
        """SetConstant2(itkAddImageFilterIF3IF3IF3_Superclass self, float const & input2)"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct: 'float') -> "void":
        """SetConstant(itkAddImageFilterIF3IF3IF3_Superclass self, float ct)"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetConstant(self, ct)


    def GetConstant(self) -> "float const &":
        """GetConstant(itkAddImageFilterIF3IF3IF3_Superclass self) -> float const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_GetConstant(self)


    def GetConstant2(self) -> "float const &":
        """GetConstant2(itkAddImageFilterIF3IF3IF3_Superclass self) -> float const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args) -> "itk::Functor::Add2< float,float,float > const &":
        """
        GetFunctor(itkAddImageFilterIF3IF3IF3_Superclass self) -> itk::Functor::Add2< float,float,float >
        GetFunctor(itkAddImageFilterIF3IF3IF3_Superclass self) -> itk::Functor::Add2< float,float,float > const &
        """
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Add2< float,float,float > const &') -> "void":
        """SetFunctor(itkAddImageFilterIF3IF3IF3_Superclass self, itk::Functor::Add2< float,float,float > const & functor)"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIF3IF3IF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIF3IF3IF3_Superclass *":
        """cast(itkLightObject obj) -> itkAddImageFilterIF3IF3IF3_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIF3IF3IF3_Superclass *":
        """GetPointer(itkAddImageFilterIF3IF3IF3_Superclass self) -> itkAddImageFilterIF3IF3IF3_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIF3IF3IF3_Superclass

        Create a new object of the class itkAddImageFilterIF3IF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIF3IF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIF3IF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIF3IF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIF3IF3IF3_Superclass.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_Clone, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass.SetInput1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetInput1, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass.SetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetConstant1, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass.GetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_GetConstant1, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass.SetInput2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetInput2, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass.SetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetConstant2, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass.SetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetConstant, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass.GetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_GetConstant, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass.GetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_GetConstant2, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass.GetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_GetFunctor, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass.SetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_SetFunctor, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_GetPointer, None, itkAddImageFilterIF3IF3IF3_Superclass)
itkAddImageFilterIF3IF3IF3_Superclass_swigregister = _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_swigregister
itkAddImageFilterIF3IF3IF3_Superclass_swigregister(itkAddImageFilterIF3IF3IF3_Superclass)

def itkAddImageFilterIF3IF3IF3_Superclass___New_orig__() -> "itkAddImageFilterIF3IF3IF3_Superclass_Pointer":
    """itkAddImageFilterIF3IF3IF3_Superclass___New_orig__() -> itkAddImageFilterIF3IF3IF3_Superclass_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass___New_orig__()

def itkAddImageFilterIF3IF3IF3_Superclass_cast(obj: 'itkLightObject') -> "itkAddImageFilterIF3IF3IF3_Superclass *":
    """itkAddImageFilterIF3IF3IF3_Superclass_cast(itkLightObject obj) -> itkAddImageFilterIF3IF3IF3_Superclass"""
    return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Superclass_cast(obj)

class itkAddImageFilterISS2ISS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkAddImageFilterISS2ISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterISS2ISS2ISS2_Superclass_Pointer":
        """__New_orig__() -> itkAddImageFilterISS2ISS2ISS2_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterISS2ISS2ISS2_Superclass_Pointer":
        """Clone(itkAddImageFilterISS2ISS2ISS2_Superclass self) -> itkAddImageFilterISS2ISS2ISS2_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_Clone(self)


    def SetInput1(self, *args) -> "void":
        """
        SetInput1(itkAddImageFilterISS2ISS2ISS2_Superclass self, itkImageSS2 image1)
        SetInput1(itkAddImageFilterISS2ISS2ISS2_Superclass self, itkSimpleDataObjectDecoratorSS input1)
        SetInput1(itkAddImageFilterISS2ISS2ISS2_Superclass self, short const & input1)
        """
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1: 'short const &') -> "void":
        """SetConstant1(itkAddImageFilterISS2ISS2ISS2_Superclass self, short const & input1)"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self) -> "short const &":
        """GetConstant1(itkAddImageFilterISS2ISS2ISS2_Superclass self) -> short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_GetConstant1(self)


    def SetInput2(self, *args) -> "void":
        """
        SetInput2(itkAddImageFilterISS2ISS2ISS2_Superclass self, itkImageSS2 image2)
        SetInput2(itkAddImageFilterISS2ISS2ISS2_Superclass self, itkSimpleDataObjectDecoratorSS input2)
        SetInput2(itkAddImageFilterISS2ISS2ISS2_Superclass self, short const & input2)
        """
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2: 'short const &') -> "void":
        """SetConstant2(itkAddImageFilterISS2ISS2ISS2_Superclass self, short const & input2)"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct: 'short') -> "void":
        """SetConstant(itkAddImageFilterISS2ISS2ISS2_Superclass self, short ct)"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetConstant(self, ct)


    def GetConstant(self) -> "short const &":
        """GetConstant(itkAddImageFilterISS2ISS2ISS2_Superclass self) -> short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_GetConstant(self)


    def GetConstant2(self) -> "short const &":
        """GetConstant2(itkAddImageFilterISS2ISS2ISS2_Superclass self) -> short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args) -> "itk::Functor::Add2< short,short,short > const &":
        """
        GetFunctor(itkAddImageFilterISS2ISS2ISS2_Superclass self) -> itk::Functor::Add2< short,short,short >
        GetFunctor(itkAddImageFilterISS2ISS2ISS2_Superclass self) -> itk::Functor::Add2< short,short,short > const &
        """
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Add2< short,short,short > const &') -> "void":
        """SetFunctor(itkAddImageFilterISS2ISS2ISS2_Superclass self, itk::Functor::Add2< short,short,short > const & functor)"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterISS2ISS2ISS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterISS2ISS2ISS2_Superclass *":
        """cast(itkLightObject obj) -> itkAddImageFilterISS2ISS2ISS2_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterISS2ISS2ISS2_Superclass *":
        """GetPointer(itkAddImageFilterISS2ISS2ISS2_Superclass self) -> itkAddImageFilterISS2ISS2ISS2_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterISS2ISS2ISS2_Superclass

        Create a new object of the class itkAddImageFilterISS2ISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterISS2ISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterISS2ISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterISS2ISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterISS2ISS2ISS2_Superclass.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_Clone, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass.SetInput1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetInput1, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass.SetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetConstant1, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass.GetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_GetConstant1, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass.SetInput2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetInput2, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass.SetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetConstant2, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass.SetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetConstant, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass.GetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_GetConstant, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass.GetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_GetConstant2, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_GetFunctor, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_SetFunctor, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_GetPointer, None, itkAddImageFilterISS2ISS2ISS2_Superclass)
itkAddImageFilterISS2ISS2ISS2_Superclass_swigregister = _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_swigregister
itkAddImageFilterISS2ISS2ISS2_Superclass_swigregister(itkAddImageFilterISS2ISS2ISS2_Superclass)

def itkAddImageFilterISS2ISS2ISS2_Superclass___New_orig__() -> "itkAddImageFilterISS2ISS2ISS2_Superclass_Pointer":
    """itkAddImageFilterISS2ISS2ISS2_Superclass___New_orig__() -> itkAddImageFilterISS2ISS2ISS2_Superclass_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass___New_orig__()

def itkAddImageFilterISS2ISS2ISS2_Superclass_cast(obj: 'itkLightObject') -> "itkAddImageFilterISS2ISS2ISS2_Superclass *":
    """itkAddImageFilterISS2ISS2ISS2_Superclass_cast(itkLightObject obj) -> itkAddImageFilterISS2ISS2ISS2_Superclass"""
    return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Superclass_cast(obj)

class itkAddImageFilterISS3ISS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkAddImageFilterISS3ISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterISS3ISS3ISS3_Superclass_Pointer":
        """__New_orig__() -> itkAddImageFilterISS3ISS3ISS3_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterISS3ISS3ISS3_Superclass_Pointer":
        """Clone(itkAddImageFilterISS3ISS3ISS3_Superclass self) -> itkAddImageFilterISS3ISS3ISS3_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_Clone(self)


    def SetInput1(self, *args) -> "void":
        """
        SetInput1(itkAddImageFilterISS3ISS3ISS3_Superclass self, itkImageSS3 image1)
        SetInput1(itkAddImageFilterISS3ISS3ISS3_Superclass self, itkSimpleDataObjectDecoratorSS input1)
        SetInput1(itkAddImageFilterISS3ISS3ISS3_Superclass self, short const & input1)
        """
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1: 'short const &') -> "void":
        """SetConstant1(itkAddImageFilterISS3ISS3ISS3_Superclass self, short const & input1)"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self) -> "short const &":
        """GetConstant1(itkAddImageFilterISS3ISS3ISS3_Superclass self) -> short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_GetConstant1(self)


    def SetInput2(self, *args) -> "void":
        """
        SetInput2(itkAddImageFilterISS3ISS3ISS3_Superclass self, itkImageSS3 image2)
        SetInput2(itkAddImageFilterISS3ISS3ISS3_Superclass self, itkSimpleDataObjectDecoratorSS input2)
        SetInput2(itkAddImageFilterISS3ISS3ISS3_Superclass self, short const & input2)
        """
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2: 'short const &') -> "void":
        """SetConstant2(itkAddImageFilterISS3ISS3ISS3_Superclass self, short const & input2)"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct: 'short') -> "void":
        """SetConstant(itkAddImageFilterISS3ISS3ISS3_Superclass self, short ct)"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetConstant(self, ct)


    def GetConstant(self) -> "short const &":
        """GetConstant(itkAddImageFilterISS3ISS3ISS3_Superclass self) -> short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_GetConstant(self)


    def GetConstant2(self) -> "short const &":
        """GetConstant2(itkAddImageFilterISS3ISS3ISS3_Superclass self) -> short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args) -> "itk::Functor::Add2< short,short,short > const &":
        """
        GetFunctor(itkAddImageFilterISS3ISS3ISS3_Superclass self) -> itk::Functor::Add2< short,short,short >
        GetFunctor(itkAddImageFilterISS3ISS3ISS3_Superclass self) -> itk::Functor::Add2< short,short,short > const &
        """
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Add2< short,short,short > const &') -> "void":
        """SetFunctor(itkAddImageFilterISS3ISS3ISS3_Superclass self, itk::Functor::Add2< short,short,short > const & functor)"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterISS3ISS3ISS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterISS3ISS3ISS3_Superclass *":
        """cast(itkLightObject obj) -> itkAddImageFilterISS3ISS3ISS3_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterISS3ISS3ISS3_Superclass *":
        """GetPointer(itkAddImageFilterISS3ISS3ISS3_Superclass self) -> itkAddImageFilterISS3ISS3ISS3_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterISS3ISS3ISS3_Superclass

        Create a new object of the class itkAddImageFilterISS3ISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterISS3ISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterISS3ISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterISS3ISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterISS3ISS3ISS3_Superclass.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_Clone, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass.SetInput1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetInput1, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass.SetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetConstant1, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass.GetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_GetConstant1, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass.SetInput2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetInput2, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass.SetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetConstant2, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass.SetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetConstant, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass.GetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_GetConstant, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass.GetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_GetConstant2, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_GetFunctor, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_SetFunctor, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_GetPointer, None, itkAddImageFilterISS3ISS3ISS3_Superclass)
itkAddImageFilterISS3ISS3ISS3_Superclass_swigregister = _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_swigregister
itkAddImageFilterISS3ISS3ISS3_Superclass_swigregister(itkAddImageFilterISS3ISS3ISS3_Superclass)

def itkAddImageFilterISS3ISS3ISS3_Superclass___New_orig__() -> "itkAddImageFilterISS3ISS3ISS3_Superclass_Pointer":
    """itkAddImageFilterISS3ISS3ISS3_Superclass___New_orig__() -> itkAddImageFilterISS3ISS3ISS3_Superclass_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass___New_orig__()

def itkAddImageFilterISS3ISS3ISS3_Superclass_cast(obj: 'itkLightObject') -> "itkAddImageFilterISS3ISS3ISS3_Superclass *":
    """itkAddImageFilterISS3ISS3ISS3_Superclass_cast(itkLightObject obj) -> itkAddImageFilterISS3ISS3ISS3_Superclass"""
    return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Superclass_cast(obj)

class itkAddImageFilterIUC2IUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkAddImageFilterIUC2IUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer":
        """__New_orig__() -> itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer":
        """Clone(itkAddImageFilterIUC2IUC2IUC2_Superclass self) -> itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_Clone(self)


    def SetInput1(self, *args) -> "void":
        """
        SetInput1(itkAddImageFilterIUC2IUC2IUC2_Superclass self, itkImageUC2 image1)
        SetInput1(itkAddImageFilterIUC2IUC2IUC2_Superclass self, itkSimpleDataObjectDecoratorUC input1)
        SetInput1(itkAddImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input1)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1: 'unsigned char const &') -> "void":
        """SetConstant1(itkAddImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input1)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self) -> "unsigned char const &":
        """GetConstant1(itkAddImageFilterIUC2IUC2IUC2_Superclass self) -> unsigned char const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_GetConstant1(self)


    def SetInput2(self, *args) -> "void":
        """
        SetInput2(itkAddImageFilterIUC2IUC2IUC2_Superclass self, itkImageUC2 image2)
        SetInput2(itkAddImageFilterIUC2IUC2IUC2_Superclass self, itkSimpleDataObjectDecoratorUC input2)
        SetInput2(itkAddImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input2)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2: 'unsigned char const &') -> "void":
        """SetConstant2(itkAddImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input2)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct: 'unsigned char') -> "void":
        """SetConstant(itkAddImageFilterIUC2IUC2IUC2_Superclass self, unsigned char ct)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetConstant(self, ct)


    def GetConstant(self) -> "unsigned char const &":
        """GetConstant(itkAddImageFilterIUC2IUC2IUC2_Superclass self) -> unsigned char const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_GetConstant(self)


    def GetConstant2(self) -> "unsigned char const &":
        """GetConstant2(itkAddImageFilterIUC2IUC2IUC2_Superclass self) -> unsigned char const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args) -> "itk::Functor::Add2< unsigned char,unsigned char,unsigned char > const &":
        """
        GetFunctor(itkAddImageFilterIUC2IUC2IUC2_Superclass self) -> itk::Functor::Add2< unsigned char,unsigned char,unsigned char >
        GetFunctor(itkAddImageFilterIUC2IUC2IUC2_Superclass self) -> itk::Functor::Add2< unsigned char,unsigned char,unsigned char > const &
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Add2< unsigned char,unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkAddImageFilterIUC2IUC2IUC2_Superclass self, itk::Functor::Add2< unsigned char,unsigned char,unsigned char > const & functor)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIUC2IUC2IUC2_Superclass

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIUC2IUC2IUC2_Superclass *":
        """cast(itkLightObject obj) -> itkAddImageFilterIUC2IUC2IUC2_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIUC2IUC2IUC2_Superclass *":
        """GetPointer(itkAddImageFilterIUC2IUC2IUC2_Superclass self) -> itkAddImageFilterIUC2IUC2IUC2_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIUC2IUC2IUC2_Superclass

        Create a new object of the class itkAddImageFilterIUC2IUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIUC2IUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIUC2IUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIUC2IUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIUC2IUC2IUC2_Superclass.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_Clone, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass.SetInput1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetInput1, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass.SetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetConstant1, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass.GetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_GetConstant1, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass.SetInput2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetInput2, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass.SetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetConstant2, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass.SetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetConstant, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass.GetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_GetConstant, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass.GetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_GetConstant2, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_GetFunctor, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_SetFunctor, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_GetPointer, None, itkAddImageFilterIUC2IUC2IUC2_Superclass)
itkAddImageFilterIUC2IUC2IUC2_Superclass_swigregister = _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_swigregister
itkAddImageFilterIUC2IUC2IUC2_Superclass_swigregister(itkAddImageFilterIUC2IUC2IUC2_Superclass)

def itkAddImageFilterIUC2IUC2IUC2_Superclass___New_orig__() -> "itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer":
    """itkAddImageFilterIUC2IUC2IUC2_Superclass___New_orig__() -> itkAddImageFilterIUC2IUC2IUC2_Superclass_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass___New_orig__()

def itkAddImageFilterIUC2IUC2IUC2_Superclass_cast(obj: 'itkLightObject') -> "itkAddImageFilterIUC2IUC2IUC2_Superclass *":
    """itkAddImageFilterIUC2IUC2IUC2_Superclass_cast(itkLightObject obj) -> itkAddImageFilterIUC2IUC2IUC2_Superclass"""
    return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Superclass_cast(obj)

class itkAddImageFilterIUC3IUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkAddImageFilterIUC3IUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer":
        """__New_orig__() -> itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer":
        """Clone(itkAddImageFilterIUC3IUC3IUC3_Superclass self) -> itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_Clone(self)


    def SetInput1(self, *args) -> "void":
        """
        SetInput1(itkAddImageFilterIUC3IUC3IUC3_Superclass self, itkImageUC3 image1)
        SetInput1(itkAddImageFilterIUC3IUC3IUC3_Superclass self, itkSimpleDataObjectDecoratorUC input1)
        SetInput1(itkAddImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input1)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1: 'unsigned char const &') -> "void":
        """SetConstant1(itkAddImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input1)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self) -> "unsigned char const &":
        """GetConstant1(itkAddImageFilterIUC3IUC3IUC3_Superclass self) -> unsigned char const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_GetConstant1(self)


    def SetInput2(self, *args) -> "void":
        """
        SetInput2(itkAddImageFilterIUC3IUC3IUC3_Superclass self, itkImageUC3 image2)
        SetInput2(itkAddImageFilterIUC3IUC3IUC3_Superclass self, itkSimpleDataObjectDecoratorUC input2)
        SetInput2(itkAddImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input2)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2: 'unsigned char const &') -> "void":
        """SetConstant2(itkAddImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input2)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct: 'unsigned char') -> "void":
        """SetConstant(itkAddImageFilterIUC3IUC3IUC3_Superclass self, unsigned char ct)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetConstant(self, ct)


    def GetConstant(self) -> "unsigned char const &":
        """GetConstant(itkAddImageFilterIUC3IUC3IUC3_Superclass self) -> unsigned char const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_GetConstant(self)


    def GetConstant2(self) -> "unsigned char const &":
        """GetConstant2(itkAddImageFilterIUC3IUC3IUC3_Superclass self) -> unsigned char const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args) -> "itk::Functor::Add2< unsigned char,unsigned char,unsigned char > const &":
        """
        GetFunctor(itkAddImageFilterIUC3IUC3IUC3_Superclass self) -> itk::Functor::Add2< unsigned char,unsigned char,unsigned char >
        GetFunctor(itkAddImageFilterIUC3IUC3IUC3_Superclass self) -> itk::Functor::Add2< unsigned char,unsigned char,unsigned char > const &
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Add2< unsigned char,unsigned char,unsigned char > const &') -> "void":
        """SetFunctor(itkAddImageFilterIUC3IUC3IUC3_Superclass self, itk::Functor::Add2< unsigned char,unsigned char,unsigned char > const & functor)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIUC3IUC3IUC3_Superclass

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIUC3IUC3IUC3_Superclass *":
        """cast(itkLightObject obj) -> itkAddImageFilterIUC3IUC3IUC3_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIUC3IUC3IUC3_Superclass *":
        """GetPointer(itkAddImageFilterIUC3IUC3IUC3_Superclass self) -> itkAddImageFilterIUC3IUC3IUC3_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIUC3IUC3IUC3_Superclass

        Create a new object of the class itkAddImageFilterIUC3IUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIUC3IUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIUC3IUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIUC3IUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIUC3IUC3IUC3_Superclass.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_Clone, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass.SetInput1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetInput1, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass.SetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetConstant1, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass.GetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_GetConstant1, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass.SetInput2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetInput2, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass.SetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetConstant2, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass.SetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetConstant, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass.GetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_GetConstant, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass.GetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_GetConstant2, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_GetFunctor, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_SetFunctor, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_GetPointer, None, itkAddImageFilterIUC3IUC3IUC3_Superclass)
itkAddImageFilterIUC3IUC3IUC3_Superclass_swigregister = _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_swigregister
itkAddImageFilterIUC3IUC3IUC3_Superclass_swigregister(itkAddImageFilterIUC3IUC3IUC3_Superclass)

def itkAddImageFilterIUC3IUC3IUC3_Superclass___New_orig__() -> "itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer":
    """itkAddImageFilterIUC3IUC3IUC3_Superclass___New_orig__() -> itkAddImageFilterIUC3IUC3IUC3_Superclass_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass___New_orig__()

def itkAddImageFilterIUC3IUC3IUC3_Superclass_cast(obj: 'itkLightObject') -> "itkAddImageFilterIUC3IUC3IUC3_Superclass *":
    """itkAddImageFilterIUC3IUC3IUC3_Superclass_cast(itkLightObject obj) -> itkAddImageFilterIUC3IUC3IUC3_Superclass"""
    return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Superclass_cast(obj)

class itkAddImageFilterIUS2IUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkAddImageFilterIUS2IUS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer":
        """__New_orig__() -> itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer":
        """Clone(itkAddImageFilterIUS2IUS2IUS2_Superclass self) -> itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_Clone(self)


    def SetInput1(self, *args) -> "void":
        """
        SetInput1(itkAddImageFilterIUS2IUS2IUS2_Superclass self, itkImageUS2 image1)
        SetInput1(itkAddImageFilterIUS2IUS2IUS2_Superclass self, itkSimpleDataObjectDecoratorUS input1)
        SetInput1(itkAddImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input1)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1: 'unsigned short const &') -> "void":
        """SetConstant1(itkAddImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input1)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self) -> "unsigned short const &":
        """GetConstant1(itkAddImageFilterIUS2IUS2IUS2_Superclass self) -> unsigned short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_GetConstant1(self)


    def SetInput2(self, *args) -> "void":
        """
        SetInput2(itkAddImageFilterIUS2IUS2IUS2_Superclass self, itkImageUS2 image2)
        SetInput2(itkAddImageFilterIUS2IUS2IUS2_Superclass self, itkSimpleDataObjectDecoratorUS input2)
        SetInput2(itkAddImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input2)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2: 'unsigned short const &') -> "void":
        """SetConstant2(itkAddImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input2)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct: 'unsigned short') -> "void":
        """SetConstant(itkAddImageFilterIUS2IUS2IUS2_Superclass self, unsigned short ct)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetConstant(self, ct)


    def GetConstant(self) -> "unsigned short const &":
        """GetConstant(itkAddImageFilterIUS2IUS2IUS2_Superclass self) -> unsigned short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_GetConstant(self)


    def GetConstant2(self) -> "unsigned short const &":
        """GetConstant2(itkAddImageFilterIUS2IUS2IUS2_Superclass self) -> unsigned short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args) -> "itk::Functor::Add2< unsigned short,unsigned short,unsigned short > const &":
        """
        GetFunctor(itkAddImageFilterIUS2IUS2IUS2_Superclass self) -> itk::Functor::Add2< unsigned short,unsigned short,unsigned short >
        GetFunctor(itkAddImageFilterIUS2IUS2IUS2_Superclass self) -> itk::Functor::Add2< unsigned short,unsigned short,unsigned short > const &
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Add2< unsigned short,unsigned short,unsigned short > const &') -> "void":
        """SetFunctor(itkAddImageFilterIUS2IUS2IUS2_Superclass self, itk::Functor::Add2< unsigned short,unsigned short,unsigned short > const & functor)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIUS2IUS2IUS2_Superclass

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIUS2IUS2IUS2_Superclass *":
        """cast(itkLightObject obj) -> itkAddImageFilterIUS2IUS2IUS2_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIUS2IUS2IUS2_Superclass *":
        """GetPointer(itkAddImageFilterIUS2IUS2IUS2_Superclass self) -> itkAddImageFilterIUS2IUS2IUS2_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIUS2IUS2IUS2_Superclass

        Create a new object of the class itkAddImageFilterIUS2IUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIUS2IUS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIUS2IUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIUS2IUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIUS2IUS2IUS2_Superclass.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_Clone, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass.SetInput1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetInput1, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass.SetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetConstant1, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass.GetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_GetConstant1, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass.SetInput2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetInput2, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass.SetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetConstant2, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass.SetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetConstant, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass.GetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_GetConstant, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass.GetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_GetConstant2, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_GetFunctor, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_SetFunctor, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_GetPointer, None, itkAddImageFilterIUS2IUS2IUS2_Superclass)
itkAddImageFilterIUS2IUS2IUS2_Superclass_swigregister = _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_swigregister
itkAddImageFilterIUS2IUS2IUS2_Superclass_swigregister(itkAddImageFilterIUS2IUS2IUS2_Superclass)

def itkAddImageFilterIUS2IUS2IUS2_Superclass___New_orig__() -> "itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer":
    """itkAddImageFilterIUS2IUS2IUS2_Superclass___New_orig__() -> itkAddImageFilterIUS2IUS2IUS2_Superclass_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass___New_orig__()

def itkAddImageFilterIUS2IUS2IUS2_Superclass_cast(obj: 'itkLightObject') -> "itkAddImageFilterIUS2IUS2IUS2_Superclass *":
    """itkAddImageFilterIUS2IUS2IUS2_Superclass_cast(itkLightObject obj) -> itkAddImageFilterIUS2IUS2IUS2_Superclass"""
    return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Superclass_cast(obj)

class itkAddImageFilterIUS3IUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkAddImageFilterIUS3IUS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer":
        """__New_orig__() -> itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer":
        """Clone(itkAddImageFilterIUS3IUS3IUS3_Superclass self) -> itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_Clone(self)


    def SetInput1(self, *args) -> "void":
        """
        SetInput1(itkAddImageFilterIUS3IUS3IUS3_Superclass self, itkImageUS3 image1)
        SetInput1(itkAddImageFilterIUS3IUS3IUS3_Superclass self, itkSimpleDataObjectDecoratorUS input1)
        SetInput1(itkAddImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input1)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1: 'unsigned short const &') -> "void":
        """SetConstant1(itkAddImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input1)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self) -> "unsigned short const &":
        """GetConstant1(itkAddImageFilterIUS3IUS3IUS3_Superclass self) -> unsigned short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_GetConstant1(self)


    def SetInput2(self, *args) -> "void":
        """
        SetInput2(itkAddImageFilterIUS3IUS3IUS3_Superclass self, itkImageUS3 image2)
        SetInput2(itkAddImageFilterIUS3IUS3IUS3_Superclass self, itkSimpleDataObjectDecoratorUS input2)
        SetInput2(itkAddImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input2)
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2: 'unsigned short const &') -> "void":
        """SetConstant2(itkAddImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input2)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct: 'unsigned short') -> "void":
        """SetConstant(itkAddImageFilterIUS3IUS3IUS3_Superclass self, unsigned short ct)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetConstant(self, ct)


    def GetConstant(self) -> "unsigned short const &":
        """GetConstant(itkAddImageFilterIUS3IUS3IUS3_Superclass self) -> unsigned short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_GetConstant(self)


    def GetConstant2(self) -> "unsigned short const &":
        """GetConstant2(itkAddImageFilterIUS3IUS3IUS3_Superclass self) -> unsigned short const &"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args) -> "itk::Functor::Add2< unsigned short,unsigned short,unsigned short > const &":
        """
        GetFunctor(itkAddImageFilterIUS3IUS3IUS3_Superclass self) -> itk::Functor::Add2< unsigned short,unsigned short,unsigned short >
        GetFunctor(itkAddImageFilterIUS3IUS3IUS3_Superclass self) -> itk::Functor::Add2< unsigned short,unsigned short,unsigned short > const &
        """
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::Add2< unsigned short,unsigned short,unsigned short > const &') -> "void":
        """SetFunctor(itkAddImageFilterIUS3IUS3IUS3_Superclass self, itk::Functor::Add2< unsigned short,unsigned short,unsigned short > const & functor)"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIUS3IUS3IUS3_Superclass

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIUS3IUS3IUS3_Superclass *":
        """cast(itkLightObject obj) -> itkAddImageFilterIUS3IUS3IUS3_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIUS3IUS3IUS3_Superclass *":
        """GetPointer(itkAddImageFilterIUS3IUS3IUS3_Superclass self) -> itkAddImageFilterIUS3IUS3IUS3_Superclass"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIUS3IUS3IUS3_Superclass

        Create a new object of the class itkAddImageFilterIUS3IUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIUS3IUS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIUS3IUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIUS3IUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIUS3IUS3IUS3_Superclass.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_Clone, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass.SetInput1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetInput1, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass.SetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetConstant1, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass.GetConstant1 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_GetConstant1, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass.SetInput2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetInput2, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass.SetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetConstant2, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass.SetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetConstant, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass.GetConstant = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_GetConstant, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass.GetConstant2 = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_GetConstant2, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_GetFunctor, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_SetFunctor, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_GetPointer, None, itkAddImageFilterIUS3IUS3IUS3_Superclass)
itkAddImageFilterIUS3IUS3IUS3_Superclass_swigregister = _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_swigregister
itkAddImageFilterIUS3IUS3IUS3_Superclass_swigregister(itkAddImageFilterIUS3IUS3IUS3_Superclass)

def itkAddImageFilterIUS3IUS3IUS3_Superclass___New_orig__() -> "itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer":
    """itkAddImageFilterIUS3IUS3IUS3_Superclass___New_orig__() -> itkAddImageFilterIUS3IUS3IUS3_Superclass_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass___New_orig__()

def itkAddImageFilterIUS3IUS3IUS3_Superclass_cast(obj: 'itkLightObject') -> "itkAddImageFilterIUS3IUS3IUS3_Superclass *":
    """itkAddImageFilterIUS3IUS3IUS3_Superclass_cast(itkLightObject obj) -> itkAddImageFilterIUS3IUS3IUS3_Superclass"""
    return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Superclass_cast(obj)

class itkAddImageFilterIF2IF2IF2(itkAddImageFilterIF2IF2IF2_Superclass):
    """


    Pixel-wise addition of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the input 1 image must have a valid definition of
    the operator+ with a pixel type of the image 2. This condition is
    required because internally this filter will perform the operation

    Additionally the type resulting from the sum, will be cast to the
    pixel type of the output image.

    The total operation over one pixel will be

    pixels are vectors of the same dimension, and to store the resulting
    vector in an output image of vector pixels.

    The images to be added are set using the methods:

    Additionally, this filter can be used to add a constant to every pixel
    of an image by using

    WARNING:  No numeric overflow checking is performed in this filter.
    Wiki Examples:

    All Examples

    C++ includes: itkAddImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIF2IF2IF2_Pointer":
        """__New_orig__() -> itkAddImageFilterIF2IF2IF2_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIF2IF2IF2_Pointer":
        """Clone(itkAddImageFilterIF2IF2IF2 self) -> itkAddImageFilterIF2IF2IF2_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Clone(self)

    Input1Input2OutputAdditiveOperatorsCheck = _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Input1Input2OutputAdditiveOperatorsCheck
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIF2IF2IF2

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIF2IF2IF2 *":
        """cast(itkLightObject obj) -> itkAddImageFilterIF2IF2IF2"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIF2IF2IF2 *":
        """GetPointer(itkAddImageFilterIF2IF2IF2 self) -> itkAddImageFilterIF2IF2IF2"""
        return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIF2IF2IF2

        Create a new object of the class itkAddImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIF2IF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIF2IF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIF2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIF2IF2IF2.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_Clone, None, itkAddImageFilterIF2IF2IF2)
itkAddImageFilterIF2IF2IF2.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_GetPointer, None, itkAddImageFilterIF2IF2IF2)
itkAddImageFilterIF2IF2IF2_swigregister = _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_swigregister
itkAddImageFilterIF2IF2IF2_swigregister(itkAddImageFilterIF2IF2IF2)

def itkAddImageFilterIF2IF2IF2___New_orig__() -> "itkAddImageFilterIF2IF2IF2_Pointer":
    """itkAddImageFilterIF2IF2IF2___New_orig__() -> itkAddImageFilterIF2IF2IF2_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2___New_orig__()

def itkAddImageFilterIF2IF2IF2_cast(obj: 'itkLightObject') -> "itkAddImageFilterIF2IF2IF2 *":
    """itkAddImageFilterIF2IF2IF2_cast(itkLightObject obj) -> itkAddImageFilterIF2IF2IF2"""
    return _itkAddImageFilterPython.itkAddImageFilterIF2IF2IF2_cast(obj)

class itkAddImageFilterIF3IF3IF3(itkAddImageFilterIF3IF3IF3_Superclass):
    """


    Pixel-wise addition of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the input 1 image must have a valid definition of
    the operator+ with a pixel type of the image 2. This condition is
    required because internally this filter will perform the operation

    Additionally the type resulting from the sum, will be cast to the
    pixel type of the output image.

    The total operation over one pixel will be

    pixels are vectors of the same dimension, and to store the resulting
    vector in an output image of vector pixels.

    The images to be added are set using the methods:

    Additionally, this filter can be used to add a constant to every pixel
    of an image by using

    WARNING:  No numeric overflow checking is performed in this filter.
    Wiki Examples:

    All Examples

    C++ includes: itkAddImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIF3IF3IF3_Pointer":
        """__New_orig__() -> itkAddImageFilterIF3IF3IF3_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIF3IF3IF3_Pointer":
        """Clone(itkAddImageFilterIF3IF3IF3 self) -> itkAddImageFilterIF3IF3IF3_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Clone(self)

    Input1Input2OutputAdditiveOperatorsCheck = _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Input1Input2OutputAdditiveOperatorsCheck
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIF3IF3IF3

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIF3IF3IF3 *":
        """cast(itkLightObject obj) -> itkAddImageFilterIF3IF3IF3"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIF3IF3IF3 *":
        """GetPointer(itkAddImageFilterIF3IF3IF3 self) -> itkAddImageFilterIF3IF3IF3"""
        return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIF3IF3IF3

        Create a new object of the class itkAddImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIF3IF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIF3IF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIF3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIF3IF3IF3.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_Clone, None, itkAddImageFilterIF3IF3IF3)
itkAddImageFilterIF3IF3IF3.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_GetPointer, None, itkAddImageFilterIF3IF3IF3)
itkAddImageFilterIF3IF3IF3_swigregister = _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_swigregister
itkAddImageFilterIF3IF3IF3_swigregister(itkAddImageFilterIF3IF3IF3)

def itkAddImageFilterIF3IF3IF3___New_orig__() -> "itkAddImageFilterIF3IF3IF3_Pointer":
    """itkAddImageFilterIF3IF3IF3___New_orig__() -> itkAddImageFilterIF3IF3IF3_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3___New_orig__()

def itkAddImageFilterIF3IF3IF3_cast(obj: 'itkLightObject') -> "itkAddImageFilterIF3IF3IF3 *":
    """itkAddImageFilterIF3IF3IF3_cast(itkLightObject obj) -> itkAddImageFilterIF3IF3IF3"""
    return _itkAddImageFilterPython.itkAddImageFilterIF3IF3IF3_cast(obj)

class itkAddImageFilterISS2ISS2ISS2(itkAddImageFilterISS2ISS2ISS2_Superclass):
    """


    Pixel-wise addition of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the input 1 image must have a valid definition of
    the operator+ with a pixel type of the image 2. This condition is
    required because internally this filter will perform the operation

    Additionally the type resulting from the sum, will be cast to the
    pixel type of the output image.

    The total operation over one pixel will be

    pixels are vectors of the same dimension, and to store the resulting
    vector in an output image of vector pixels.

    The images to be added are set using the methods:

    Additionally, this filter can be used to add a constant to every pixel
    of an image by using

    WARNING:  No numeric overflow checking is performed in this filter.
    Wiki Examples:

    All Examples

    C++ includes: itkAddImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterISS2ISS2ISS2_Pointer":
        """__New_orig__() -> itkAddImageFilterISS2ISS2ISS2_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterISS2ISS2ISS2_Pointer":
        """Clone(itkAddImageFilterISS2ISS2ISS2 self) -> itkAddImageFilterISS2ISS2ISS2_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Clone(self)

    Input1Input2OutputAdditiveOperatorsCheck = _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Input1Input2OutputAdditiveOperatorsCheck
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterISS2ISS2ISS2

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterISS2ISS2ISS2 *":
        """cast(itkLightObject obj) -> itkAddImageFilterISS2ISS2ISS2"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterISS2ISS2ISS2 *":
        """GetPointer(itkAddImageFilterISS2ISS2ISS2 self) -> itkAddImageFilterISS2ISS2ISS2"""
        return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterISS2ISS2ISS2

        Create a new object of the class itkAddImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterISS2ISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterISS2ISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterISS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterISS2ISS2ISS2.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_Clone, None, itkAddImageFilterISS2ISS2ISS2)
itkAddImageFilterISS2ISS2ISS2.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_GetPointer, None, itkAddImageFilterISS2ISS2ISS2)
itkAddImageFilterISS2ISS2ISS2_swigregister = _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_swigregister
itkAddImageFilterISS2ISS2ISS2_swigregister(itkAddImageFilterISS2ISS2ISS2)

def itkAddImageFilterISS2ISS2ISS2___New_orig__() -> "itkAddImageFilterISS2ISS2ISS2_Pointer":
    """itkAddImageFilterISS2ISS2ISS2___New_orig__() -> itkAddImageFilterISS2ISS2ISS2_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2___New_orig__()

def itkAddImageFilterISS2ISS2ISS2_cast(obj: 'itkLightObject') -> "itkAddImageFilterISS2ISS2ISS2 *":
    """itkAddImageFilterISS2ISS2ISS2_cast(itkLightObject obj) -> itkAddImageFilterISS2ISS2ISS2"""
    return _itkAddImageFilterPython.itkAddImageFilterISS2ISS2ISS2_cast(obj)

class itkAddImageFilterISS3ISS3ISS3(itkAddImageFilterISS3ISS3ISS3_Superclass):
    """


    Pixel-wise addition of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the input 1 image must have a valid definition of
    the operator+ with a pixel type of the image 2. This condition is
    required because internally this filter will perform the operation

    Additionally the type resulting from the sum, will be cast to the
    pixel type of the output image.

    The total operation over one pixel will be

    pixels are vectors of the same dimension, and to store the resulting
    vector in an output image of vector pixels.

    The images to be added are set using the methods:

    Additionally, this filter can be used to add a constant to every pixel
    of an image by using

    WARNING:  No numeric overflow checking is performed in this filter.
    Wiki Examples:

    All Examples

    C++ includes: itkAddImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterISS3ISS3ISS3_Pointer":
        """__New_orig__() -> itkAddImageFilterISS3ISS3ISS3_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterISS3ISS3ISS3_Pointer":
        """Clone(itkAddImageFilterISS3ISS3ISS3 self) -> itkAddImageFilterISS3ISS3ISS3_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Clone(self)

    Input1Input2OutputAdditiveOperatorsCheck = _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Input1Input2OutputAdditiveOperatorsCheck
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterISS3ISS3ISS3

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterISS3ISS3ISS3 *":
        """cast(itkLightObject obj) -> itkAddImageFilterISS3ISS3ISS3"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterISS3ISS3ISS3 *":
        """GetPointer(itkAddImageFilterISS3ISS3ISS3 self) -> itkAddImageFilterISS3ISS3ISS3"""
        return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterISS3ISS3ISS3

        Create a new object of the class itkAddImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterISS3ISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterISS3ISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterISS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterISS3ISS3ISS3.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_Clone, None, itkAddImageFilterISS3ISS3ISS3)
itkAddImageFilterISS3ISS3ISS3.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_GetPointer, None, itkAddImageFilterISS3ISS3ISS3)
itkAddImageFilterISS3ISS3ISS3_swigregister = _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_swigregister
itkAddImageFilterISS3ISS3ISS3_swigregister(itkAddImageFilterISS3ISS3ISS3)

def itkAddImageFilterISS3ISS3ISS3___New_orig__() -> "itkAddImageFilterISS3ISS3ISS3_Pointer":
    """itkAddImageFilterISS3ISS3ISS3___New_orig__() -> itkAddImageFilterISS3ISS3ISS3_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3___New_orig__()

def itkAddImageFilterISS3ISS3ISS3_cast(obj: 'itkLightObject') -> "itkAddImageFilterISS3ISS3ISS3 *":
    """itkAddImageFilterISS3ISS3ISS3_cast(itkLightObject obj) -> itkAddImageFilterISS3ISS3ISS3"""
    return _itkAddImageFilterPython.itkAddImageFilterISS3ISS3ISS3_cast(obj)

class itkAddImageFilterIUC2IUC2IUC2(itkAddImageFilterIUC2IUC2IUC2_Superclass):
    """


    Pixel-wise addition of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the input 1 image must have a valid definition of
    the operator+ with a pixel type of the image 2. This condition is
    required because internally this filter will perform the operation

    Additionally the type resulting from the sum, will be cast to the
    pixel type of the output image.

    The total operation over one pixel will be

    pixels are vectors of the same dimension, and to store the resulting
    vector in an output image of vector pixels.

    The images to be added are set using the methods:

    Additionally, this filter can be used to add a constant to every pixel
    of an image by using

    WARNING:  No numeric overflow checking is performed in this filter.
    Wiki Examples:

    All Examples

    C++ includes: itkAddImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIUC2IUC2IUC2_Pointer":
        """__New_orig__() -> itkAddImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIUC2IUC2IUC2_Pointer":
        """Clone(itkAddImageFilterIUC2IUC2IUC2 self) -> itkAddImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Clone(self)

    Input1Input2OutputAdditiveOperatorsCheck = _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Input1Input2OutputAdditiveOperatorsCheck
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIUC2IUC2IUC2

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIUC2IUC2IUC2 *":
        """cast(itkLightObject obj) -> itkAddImageFilterIUC2IUC2IUC2"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIUC2IUC2IUC2 *":
        """GetPointer(itkAddImageFilterIUC2IUC2IUC2 self) -> itkAddImageFilterIUC2IUC2IUC2"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIUC2IUC2IUC2

        Create a new object of the class itkAddImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIUC2IUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIUC2IUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIUC2IUC2IUC2.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_Clone, None, itkAddImageFilterIUC2IUC2IUC2)
itkAddImageFilterIUC2IUC2IUC2.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_GetPointer, None, itkAddImageFilterIUC2IUC2IUC2)
itkAddImageFilterIUC2IUC2IUC2_swigregister = _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_swigregister
itkAddImageFilterIUC2IUC2IUC2_swigregister(itkAddImageFilterIUC2IUC2IUC2)

def itkAddImageFilterIUC2IUC2IUC2___New_orig__() -> "itkAddImageFilterIUC2IUC2IUC2_Pointer":
    """itkAddImageFilterIUC2IUC2IUC2___New_orig__() -> itkAddImageFilterIUC2IUC2IUC2_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2___New_orig__()

def itkAddImageFilterIUC2IUC2IUC2_cast(obj: 'itkLightObject') -> "itkAddImageFilterIUC2IUC2IUC2 *":
    """itkAddImageFilterIUC2IUC2IUC2_cast(itkLightObject obj) -> itkAddImageFilterIUC2IUC2IUC2"""
    return _itkAddImageFilterPython.itkAddImageFilterIUC2IUC2IUC2_cast(obj)

class itkAddImageFilterIUC3IUC3IUC3(itkAddImageFilterIUC3IUC3IUC3_Superclass):
    """


    Pixel-wise addition of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the input 1 image must have a valid definition of
    the operator+ with a pixel type of the image 2. This condition is
    required because internally this filter will perform the operation

    Additionally the type resulting from the sum, will be cast to the
    pixel type of the output image.

    The total operation over one pixel will be

    pixels are vectors of the same dimension, and to store the resulting
    vector in an output image of vector pixels.

    The images to be added are set using the methods:

    Additionally, this filter can be used to add a constant to every pixel
    of an image by using

    WARNING:  No numeric overflow checking is performed in this filter.
    Wiki Examples:

    All Examples

    C++ includes: itkAddImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIUC3IUC3IUC3_Pointer":
        """__New_orig__() -> itkAddImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIUC3IUC3IUC3_Pointer":
        """Clone(itkAddImageFilterIUC3IUC3IUC3 self) -> itkAddImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Clone(self)

    Input1Input2OutputAdditiveOperatorsCheck = _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Input1Input2OutputAdditiveOperatorsCheck
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIUC3IUC3IUC3

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIUC3IUC3IUC3 *":
        """cast(itkLightObject obj) -> itkAddImageFilterIUC3IUC3IUC3"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIUC3IUC3IUC3 *":
        """GetPointer(itkAddImageFilterIUC3IUC3IUC3 self) -> itkAddImageFilterIUC3IUC3IUC3"""
        return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIUC3IUC3IUC3

        Create a new object of the class itkAddImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIUC3IUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIUC3IUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIUC3IUC3IUC3.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_Clone, None, itkAddImageFilterIUC3IUC3IUC3)
itkAddImageFilterIUC3IUC3IUC3.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_GetPointer, None, itkAddImageFilterIUC3IUC3IUC3)
itkAddImageFilterIUC3IUC3IUC3_swigregister = _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_swigregister
itkAddImageFilterIUC3IUC3IUC3_swigregister(itkAddImageFilterIUC3IUC3IUC3)

def itkAddImageFilterIUC3IUC3IUC3___New_orig__() -> "itkAddImageFilterIUC3IUC3IUC3_Pointer":
    """itkAddImageFilterIUC3IUC3IUC3___New_orig__() -> itkAddImageFilterIUC3IUC3IUC3_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3___New_orig__()

def itkAddImageFilterIUC3IUC3IUC3_cast(obj: 'itkLightObject') -> "itkAddImageFilterIUC3IUC3IUC3 *":
    """itkAddImageFilterIUC3IUC3IUC3_cast(itkLightObject obj) -> itkAddImageFilterIUC3IUC3IUC3"""
    return _itkAddImageFilterPython.itkAddImageFilterIUC3IUC3IUC3_cast(obj)

class itkAddImageFilterIUS2IUS2IUS2(itkAddImageFilterIUS2IUS2IUS2_Superclass):
    """


    Pixel-wise addition of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the input 1 image must have a valid definition of
    the operator+ with a pixel type of the image 2. This condition is
    required because internally this filter will perform the operation

    Additionally the type resulting from the sum, will be cast to the
    pixel type of the output image.

    The total operation over one pixel will be

    pixels are vectors of the same dimension, and to store the resulting
    vector in an output image of vector pixels.

    The images to be added are set using the methods:

    Additionally, this filter can be used to add a constant to every pixel
    of an image by using

    WARNING:  No numeric overflow checking is performed in this filter.
    Wiki Examples:

    All Examples

    C++ includes: itkAddImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIUS2IUS2IUS2_Pointer":
        """__New_orig__() -> itkAddImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIUS2IUS2IUS2_Pointer":
        """Clone(itkAddImageFilterIUS2IUS2IUS2 self) -> itkAddImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Clone(self)

    Input1Input2OutputAdditiveOperatorsCheck = _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Input1Input2OutputAdditiveOperatorsCheck
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIUS2IUS2IUS2

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIUS2IUS2IUS2 *":
        """cast(itkLightObject obj) -> itkAddImageFilterIUS2IUS2IUS2"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIUS2IUS2IUS2 *":
        """GetPointer(itkAddImageFilterIUS2IUS2IUS2 self) -> itkAddImageFilterIUS2IUS2IUS2"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIUS2IUS2IUS2

        Create a new object of the class itkAddImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIUS2IUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIUS2IUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIUS2IUS2IUS2.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_Clone, None, itkAddImageFilterIUS2IUS2IUS2)
itkAddImageFilterIUS2IUS2IUS2.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_GetPointer, None, itkAddImageFilterIUS2IUS2IUS2)
itkAddImageFilterIUS2IUS2IUS2_swigregister = _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_swigregister
itkAddImageFilterIUS2IUS2IUS2_swigregister(itkAddImageFilterIUS2IUS2IUS2)

def itkAddImageFilterIUS2IUS2IUS2___New_orig__() -> "itkAddImageFilterIUS2IUS2IUS2_Pointer":
    """itkAddImageFilterIUS2IUS2IUS2___New_orig__() -> itkAddImageFilterIUS2IUS2IUS2_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2___New_orig__()

def itkAddImageFilterIUS2IUS2IUS2_cast(obj: 'itkLightObject') -> "itkAddImageFilterIUS2IUS2IUS2 *":
    """itkAddImageFilterIUS2IUS2IUS2_cast(itkLightObject obj) -> itkAddImageFilterIUS2IUS2IUS2"""
    return _itkAddImageFilterPython.itkAddImageFilterIUS2IUS2IUS2_cast(obj)

class itkAddImageFilterIUS3IUS3IUS3(itkAddImageFilterIUS3IUS3IUS3_Superclass):
    """


    Pixel-wise addition of two images.

    This class is templated over the types of the two input images and the
    type of the output image. Numeric conversions (castings) are done by
    the C++ defaults.

    The pixel type of the input 1 image must have a valid definition of
    the operator+ with a pixel type of the image 2. This condition is
    required because internally this filter will perform the operation

    Additionally the type resulting from the sum, will be cast to the
    pixel type of the output image.

    The total operation over one pixel will be

    pixels are vectors of the same dimension, and to store the resulting
    vector in an output image of vector pixels.

    The images to be added are set using the methods:

    Additionally, this filter can be used to add a constant to every pixel
    of an image by using

    WARNING:  No numeric overflow checking is performed in this filter.
    Wiki Examples:

    All Examples

    C++ includes: itkAddImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkAddImageFilterIUS3IUS3IUS3_Pointer":
        """__New_orig__() -> itkAddImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkAddImageFilterIUS3IUS3IUS3_Pointer":
        """Clone(itkAddImageFilterIUS3IUS3IUS3 self) -> itkAddImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Clone(self)

    Input1Input2OutputAdditiveOperatorsCheck = _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Input1Input2OutputAdditiveOperatorsCheck
    __swig_destroy__ = _itkAddImageFilterPython.delete_itkAddImageFilterIUS3IUS3IUS3

    def cast(obj: 'itkLightObject') -> "itkAddImageFilterIUS3IUS3IUS3 *":
        """cast(itkLightObject obj) -> itkAddImageFilterIUS3IUS3IUS3"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkAddImageFilterIUS3IUS3IUS3 *":
        """GetPointer(itkAddImageFilterIUS3IUS3IUS3 self) -> itkAddImageFilterIUS3IUS3IUS3"""
        return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkAddImageFilterIUS3IUS3IUS3

        Create a new object of the class itkAddImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkAddImageFilterIUS3IUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkAddImageFilterIUS3IUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkAddImageFilterIUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkAddImageFilterIUS3IUS3IUS3.Clone = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_Clone, None, itkAddImageFilterIUS3IUS3IUS3)
itkAddImageFilterIUS3IUS3IUS3.GetPointer = new_instancemethod(_itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_GetPointer, None, itkAddImageFilterIUS3IUS3IUS3)
itkAddImageFilterIUS3IUS3IUS3_swigregister = _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_swigregister
itkAddImageFilterIUS3IUS3IUS3_swigregister(itkAddImageFilterIUS3IUS3IUS3)

def itkAddImageFilterIUS3IUS3IUS3___New_orig__() -> "itkAddImageFilterIUS3IUS3IUS3_Pointer":
    """itkAddImageFilterIUS3IUS3IUS3___New_orig__() -> itkAddImageFilterIUS3IUS3IUS3_Pointer"""
    return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3___New_orig__()

def itkAddImageFilterIUS3IUS3IUS3_cast(obj: 'itkLightObject') -> "itkAddImageFilterIUS3IUS3IUS3 *":
    """itkAddImageFilterIUS3IUS3IUS3_cast(itkLightObject obj) -> itkAddImageFilterIUS3IUS3IUS3"""
    return _itkAddImageFilterPython.itkAddImageFilterIUS3IUS3IUS3_cast(obj)



