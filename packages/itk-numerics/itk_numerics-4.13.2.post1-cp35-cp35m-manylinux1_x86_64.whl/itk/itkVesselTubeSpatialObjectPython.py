# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkVesselTubeSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkVesselTubeSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkVesselTubeSpatialObjectPython
            return _itkVesselTubeSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkVesselTubeSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkVesselTubeSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkVesselTubeSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkSpatialObjectPointPython
import itkRGBAPixelPython
import itkFixedArrayPython
import pyBasePython
import ITKCommonBasePython
import itkPointPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkVectorPython
import vnl_vector_refPython
import itkPointBasedSpatialObjectPython
import itkSpatialObjectBasePython
import itkSpatialObjectPropertyPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkAffineGeometryFramePython
import itkScalableAffineTransformPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkAffineTransformPython
import itkMatrixOffsetTransformBasePython
import itkDiffusionTensor3DPython
import itkSymmetricSecondRankTensorPython
import itkOptimizerParametersPython
import itkArrayPython
import itkArray2DPython
import itkVariableLengthVectorPython
import itkTransformBasePython
import itkBoundingBoxPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkMapContainerPython
import itkImageRegionPython
import itkVesselTubeSpatialObjectPointPython
import itkTubeSpatialObjectPointPython

def itkVesselTubeSpatialObject3_New():
  return itkVesselTubeSpatialObject3.New()


def itkVesselTubeSpatialObject3_Superclass_New():
  return itkVesselTubeSpatialObject3_Superclass.New()


def itkVesselTubeSpatialObject2_New():
  return itkVesselTubeSpatialObject2.New()


def itkVesselTubeSpatialObject2_Superclass_New():
  return itkVesselTubeSpatialObject2_Superclass.New()

class itkVesselTubeSpatialObject2_Superclass(itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject2):
    """Proxy of C++ itkVesselTubeSpatialObject2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVesselTubeSpatialObject2_Superclass_Pointer":
        """__New_orig__() -> itkVesselTubeSpatialObject2_Superclass_Pointer"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVesselTubeSpatialObject2_Superclass_Pointer":
        """Clone(itkVesselTubeSpatialObject2_Superclass self) -> itkVesselTubeSpatialObject2_Superclass_Pointer"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_Clone(self)


    def GetPoints(self, *args) -> "std::vector< itkVesselTubeSpatialObjectPoint2,std::allocator< itkVesselTubeSpatialObjectPoint2 > > const &":
        """
        GetPoints(itkVesselTubeSpatialObject2_Superclass self) -> std::vector< itkVesselTubeSpatialObjectPoint2,std::allocator< itkVesselTubeSpatialObjectPoint2 > >
        GetPoints(itkVesselTubeSpatialObject2_Superclass self) -> std::vector< itkVesselTubeSpatialObjectPoint2,std::allocator< itkVesselTubeSpatialObjectPoint2 > > const &
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetPoints(self, *args)


    def SetPoints(self, newPoints: 'std::vector< itkVesselTubeSpatialObjectPoint2,std::allocator< itkVesselTubeSpatialObjectPoint2 > > &') -> "void":
        """SetPoints(itkVesselTubeSpatialObject2_Superclass self, std::vector< itkVesselTubeSpatialObjectPoint2,std::allocator< itkVesselTubeSpatialObjectPoint2 > > & newPoints)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetPoints(self, newPoints)


    def GetPoint(self, *args) -> "itkSpatialObjectPoint2 *":
        """
        GetPoint(itkVesselTubeSpatialObject2_Superclass self, unsigned long ind) -> itkSpatialObjectPoint2
        GetPoint(itkVesselTubeSpatialObject2_Superclass self, unsigned long ind) -> itkSpatialObjectPoint2

        Return a
        SpatialObjectPoint given its position in the list 
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetPoint(self, *args)


    def SetPoint(self, ind: 'unsigned long', pnt: 'itkVesselTubeSpatialObjectPoint2') -> "void":
        """SetPoint(itkVesselTubeSpatialObject2_Superclass self, unsigned long ind, itkVesselTubeSpatialObjectPoint2 pnt)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetPoint(self, ind, pnt)


    def RemovePoint(self, ind: 'unsigned long') -> "void":
        """RemovePoint(itkVesselTubeSpatialObject2_Superclass self, unsigned long ind)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_RemovePoint(self, ind)


    def SetEndType(self, _arg: 'unsigned int const') -> "void":
        """SetEndType(itkVesselTubeSpatialObject2_Superclass self, unsigned int const _arg)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetEndType(self, _arg)


    def GetEndType(self) -> "unsigned int":
        """GetEndType(itkVesselTubeSpatialObject2_Superclass self) -> unsigned int"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetEndType(self)


    def ComputeTangentAndNormals(self) -> "bool":
        """ComputeTangentAndNormals(itkVesselTubeSpatialObject2_Superclass self) -> bool"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_ComputeTangentAndNormals(self)


    def RemoveDuplicatePoints(self, step: 'unsigned int'=1) -> "unsigned int":
        """
        RemoveDuplicatePoints(itkVesselTubeSpatialObject2_Superclass self, unsigned int step=1) -> unsigned int
        RemoveDuplicatePoints(itkVesselTubeSpatialObject2_Superclass self) -> unsigned int
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_RemoveDuplicatePoints(self, step)


    def IsEvaluableAt(self, point: 'itkPointD2', depth: 'unsigned int'=0, name: 'char *'=None) -> "bool":
        """
        IsEvaluableAt(itkVesselTubeSpatialObject2_Superclass self, itkPointD2 point, unsigned int depth=0, char * name=None) -> bool
        IsEvaluableAt(itkVesselTubeSpatialObject2_Superclass self, itkPointD2 point, unsigned int depth=0) -> bool
        IsEvaluableAt(itkVesselTubeSpatialObject2_Superclass self, itkPointD2 point) -> bool

        Returns true if the
        object can provide a "meaningful" value at a point. Often defaults
        to returning same answer as IsInside, but certain objects influence
        space beyond their spatial extent, e.g., an RFA Needle Spatial Object
        can cause a burn that extends beyond the tip of the needle. 
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_IsEvaluableAt(self, point, depth, name)


    def ValueAt(self, point: 'itkPointD2', value: 'double &', depth: 'unsigned int'=0, name: 'char *'=None) -> "bool":
        """
        ValueAt(itkVesselTubeSpatialObject2_Superclass self, itkPointD2 point, double & value, unsigned int depth=0, char * name=None) -> bool
        ValueAt(itkVesselTubeSpatialObject2_Superclass self, itkPointD2 point, double & value, unsigned int depth=0) -> bool
        ValueAt(itkVesselTubeSpatialObject2_Superclass self, itkPointD2 point, double & value) -> bool

        Returns the value at a
        point 
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_ValueAt(self, point, value, depth, name)


    def IsInside(self, *args) -> "bool":
        """
        IsInside(itkVesselTubeSpatialObject2_Superclass self, itkPointD2 point, unsigned int depth, char * name) -> bool
        IsInside(itkVesselTubeSpatialObject2_Superclass self, itkPointD2 point) -> bool

        Returns true if a point is
        inside the object. 
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_IsInside(self, *args)


    def SetParentPoint(self, _arg: 'int const') -> "void":
        """SetParentPoint(itkVesselTubeSpatialObject2_Superclass self, int const _arg)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetParentPoint(self, _arg)


    def GetParentPoint(self) -> "int":
        """GetParentPoint(itkVesselTubeSpatialObject2_Superclass self) -> int"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetParentPoint(self)


    def SetRoot(self, _arg: 'bool const') -> "void":
        """SetRoot(itkVesselTubeSpatialObject2_Superclass self, bool const _arg)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetRoot(self, _arg)


    def GetRoot(self) -> "bool":
        """GetRoot(itkVesselTubeSpatialObject2_Superclass self) -> bool"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetRoot(self)


    def SetArtery(self, _arg: 'bool const') -> "void":
        """SetArtery(itkVesselTubeSpatialObject2_Superclass self, bool const _arg)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetArtery(self, _arg)


    def GetArtery(self) -> "bool":
        """GetArtery(itkVesselTubeSpatialObject2_Superclass self) -> bool"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetArtery(self)

    __swig_destroy__ = _itkVesselTubeSpatialObjectPython.delete_itkVesselTubeSpatialObject2_Superclass

    def cast(obj: 'itkLightObject') -> "itkVesselTubeSpatialObject2_Superclass *":
        """cast(itkLightObject obj) -> itkVesselTubeSpatialObject2_Superclass"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkVesselTubeSpatialObject2_Superclass *":
        """GetPointer(itkVesselTubeSpatialObject2_Superclass self) -> itkVesselTubeSpatialObject2_Superclass"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkVesselTubeSpatialObject2_Superclass

        Create a new object of the class itkVesselTubeSpatialObject2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVesselTubeSpatialObject2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVesselTubeSpatialObject2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVesselTubeSpatialObject2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVesselTubeSpatialObject2_Superclass.Clone = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_Clone, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.GetPoints = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetPoints, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.SetPoints = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetPoints, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.GetPoint = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetPoint, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.SetPoint = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetPoint, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.RemovePoint = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_RemovePoint, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.SetEndType = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetEndType, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.GetEndType = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetEndType, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.ComputeTangentAndNormals = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_ComputeTangentAndNormals, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.RemoveDuplicatePoints = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_RemoveDuplicatePoints, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.IsEvaluableAt = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_IsEvaluableAt, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.ValueAt = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_ValueAt, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.IsInside = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_IsInside, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.SetParentPoint = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetParentPoint, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.GetParentPoint = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetParentPoint, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.SetRoot = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetRoot, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.GetRoot = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetRoot, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.SetArtery = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_SetArtery, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.GetArtery = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetArtery, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass.GetPointer = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_GetPointer, None, itkVesselTubeSpatialObject2_Superclass)
itkVesselTubeSpatialObject2_Superclass_swigregister = _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_swigregister
itkVesselTubeSpatialObject2_Superclass_swigregister(itkVesselTubeSpatialObject2_Superclass)

def itkVesselTubeSpatialObject2_Superclass___New_orig__() -> "itkVesselTubeSpatialObject2_Superclass_Pointer":
    """itkVesselTubeSpatialObject2_Superclass___New_orig__() -> itkVesselTubeSpatialObject2_Superclass_Pointer"""
    return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass___New_orig__()

def itkVesselTubeSpatialObject2_Superclass_cast(obj: 'itkLightObject') -> "itkVesselTubeSpatialObject2_Superclass *":
    """itkVesselTubeSpatialObject2_Superclass_cast(itkLightObject obj) -> itkVesselTubeSpatialObject2_Superclass"""
    return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Superclass_cast(obj)

class itkVesselTubeSpatialObject3_Superclass(itkPointBasedSpatialObjectPython.itkPointBasedSpatialObject3):
    """Proxy of C++ itkVesselTubeSpatialObject3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVesselTubeSpatialObject3_Superclass_Pointer":
        """__New_orig__() -> itkVesselTubeSpatialObject3_Superclass_Pointer"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVesselTubeSpatialObject3_Superclass_Pointer":
        """Clone(itkVesselTubeSpatialObject3_Superclass self) -> itkVesselTubeSpatialObject3_Superclass_Pointer"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_Clone(self)


    def GetPoints(self, *args) -> "std::vector< itkVesselTubeSpatialObjectPoint3,std::allocator< itkVesselTubeSpatialObjectPoint3 > > const &":
        """
        GetPoints(itkVesselTubeSpatialObject3_Superclass self) -> std::vector< itkVesselTubeSpatialObjectPoint3,std::allocator< itkVesselTubeSpatialObjectPoint3 > >
        GetPoints(itkVesselTubeSpatialObject3_Superclass self) -> std::vector< itkVesselTubeSpatialObjectPoint3,std::allocator< itkVesselTubeSpatialObjectPoint3 > > const &
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetPoints(self, *args)


    def SetPoints(self, newPoints: 'std::vector< itkVesselTubeSpatialObjectPoint3,std::allocator< itkVesselTubeSpatialObjectPoint3 > > &') -> "void":
        """SetPoints(itkVesselTubeSpatialObject3_Superclass self, std::vector< itkVesselTubeSpatialObjectPoint3,std::allocator< itkVesselTubeSpatialObjectPoint3 > > & newPoints)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetPoints(self, newPoints)


    def GetPoint(self, *args) -> "itkSpatialObjectPoint3 *":
        """
        GetPoint(itkVesselTubeSpatialObject3_Superclass self, unsigned long ind) -> itkSpatialObjectPoint3
        GetPoint(itkVesselTubeSpatialObject3_Superclass self, unsigned long ind) -> itkSpatialObjectPoint3

        Return a
        SpatialObjectPoint given its position in the list 
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetPoint(self, *args)


    def SetPoint(self, ind: 'unsigned long', pnt: 'itkVesselTubeSpatialObjectPoint3') -> "void":
        """SetPoint(itkVesselTubeSpatialObject3_Superclass self, unsigned long ind, itkVesselTubeSpatialObjectPoint3 pnt)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetPoint(self, ind, pnt)


    def RemovePoint(self, ind: 'unsigned long') -> "void":
        """RemovePoint(itkVesselTubeSpatialObject3_Superclass self, unsigned long ind)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_RemovePoint(self, ind)


    def SetEndType(self, _arg: 'unsigned int const') -> "void":
        """SetEndType(itkVesselTubeSpatialObject3_Superclass self, unsigned int const _arg)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetEndType(self, _arg)


    def GetEndType(self) -> "unsigned int":
        """GetEndType(itkVesselTubeSpatialObject3_Superclass self) -> unsigned int"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetEndType(self)


    def ComputeTangentAndNormals(self) -> "bool":
        """ComputeTangentAndNormals(itkVesselTubeSpatialObject3_Superclass self) -> bool"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_ComputeTangentAndNormals(self)


    def RemoveDuplicatePoints(self, step: 'unsigned int'=1) -> "unsigned int":
        """
        RemoveDuplicatePoints(itkVesselTubeSpatialObject3_Superclass self, unsigned int step=1) -> unsigned int
        RemoveDuplicatePoints(itkVesselTubeSpatialObject3_Superclass self) -> unsigned int
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_RemoveDuplicatePoints(self, step)


    def IsEvaluableAt(self, point: 'itkPointD3', depth: 'unsigned int'=0, name: 'char *'=None) -> "bool":
        """
        IsEvaluableAt(itkVesselTubeSpatialObject3_Superclass self, itkPointD3 point, unsigned int depth=0, char * name=None) -> bool
        IsEvaluableAt(itkVesselTubeSpatialObject3_Superclass self, itkPointD3 point, unsigned int depth=0) -> bool
        IsEvaluableAt(itkVesselTubeSpatialObject3_Superclass self, itkPointD3 point) -> bool

        Returns true if the
        object can provide a "meaningful" value at a point. Often defaults
        to returning same answer as IsInside, but certain objects influence
        space beyond their spatial extent, e.g., an RFA Needle Spatial Object
        can cause a burn that extends beyond the tip of the needle. 
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_IsEvaluableAt(self, point, depth, name)


    def ValueAt(self, point: 'itkPointD3', value: 'double &', depth: 'unsigned int'=0, name: 'char *'=None) -> "bool":
        """
        ValueAt(itkVesselTubeSpatialObject3_Superclass self, itkPointD3 point, double & value, unsigned int depth=0, char * name=None) -> bool
        ValueAt(itkVesselTubeSpatialObject3_Superclass self, itkPointD3 point, double & value, unsigned int depth=0) -> bool
        ValueAt(itkVesselTubeSpatialObject3_Superclass self, itkPointD3 point, double & value) -> bool

        Returns the value at a
        point 
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_ValueAt(self, point, value, depth, name)


    def IsInside(self, *args) -> "bool":
        """
        IsInside(itkVesselTubeSpatialObject3_Superclass self, itkPointD3 point, unsigned int depth, char * name) -> bool
        IsInside(itkVesselTubeSpatialObject3_Superclass self, itkPointD3 point) -> bool

        Returns true if a point is
        inside the object. 
        """
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_IsInside(self, *args)


    def SetParentPoint(self, _arg: 'int const') -> "void":
        """SetParentPoint(itkVesselTubeSpatialObject3_Superclass self, int const _arg)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetParentPoint(self, _arg)


    def GetParentPoint(self) -> "int":
        """GetParentPoint(itkVesselTubeSpatialObject3_Superclass self) -> int"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetParentPoint(self)


    def SetRoot(self, _arg: 'bool const') -> "void":
        """SetRoot(itkVesselTubeSpatialObject3_Superclass self, bool const _arg)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetRoot(self, _arg)


    def GetRoot(self) -> "bool":
        """GetRoot(itkVesselTubeSpatialObject3_Superclass self) -> bool"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetRoot(self)


    def SetArtery(self, _arg: 'bool const') -> "void":
        """SetArtery(itkVesselTubeSpatialObject3_Superclass self, bool const _arg)"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetArtery(self, _arg)


    def GetArtery(self) -> "bool":
        """GetArtery(itkVesselTubeSpatialObject3_Superclass self) -> bool"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetArtery(self)

    __swig_destroy__ = _itkVesselTubeSpatialObjectPython.delete_itkVesselTubeSpatialObject3_Superclass

    def cast(obj: 'itkLightObject') -> "itkVesselTubeSpatialObject3_Superclass *":
        """cast(itkLightObject obj) -> itkVesselTubeSpatialObject3_Superclass"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkVesselTubeSpatialObject3_Superclass *":
        """GetPointer(itkVesselTubeSpatialObject3_Superclass self) -> itkVesselTubeSpatialObject3_Superclass"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkVesselTubeSpatialObject3_Superclass

        Create a new object of the class itkVesselTubeSpatialObject3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVesselTubeSpatialObject3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVesselTubeSpatialObject3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVesselTubeSpatialObject3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVesselTubeSpatialObject3_Superclass.Clone = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_Clone, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.GetPoints = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetPoints, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.SetPoints = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetPoints, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.GetPoint = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetPoint, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.SetPoint = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetPoint, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.RemovePoint = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_RemovePoint, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.SetEndType = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetEndType, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.GetEndType = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetEndType, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.ComputeTangentAndNormals = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_ComputeTangentAndNormals, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.RemoveDuplicatePoints = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_RemoveDuplicatePoints, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.IsEvaluableAt = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_IsEvaluableAt, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.ValueAt = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_ValueAt, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.IsInside = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_IsInside, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.SetParentPoint = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetParentPoint, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.GetParentPoint = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetParentPoint, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.SetRoot = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetRoot, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.GetRoot = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetRoot, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.SetArtery = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_SetArtery, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.GetArtery = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetArtery, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass.GetPointer = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_GetPointer, None, itkVesselTubeSpatialObject3_Superclass)
itkVesselTubeSpatialObject3_Superclass_swigregister = _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_swigregister
itkVesselTubeSpatialObject3_Superclass_swigregister(itkVesselTubeSpatialObject3_Superclass)

def itkVesselTubeSpatialObject3_Superclass___New_orig__() -> "itkVesselTubeSpatialObject3_Superclass_Pointer":
    """itkVesselTubeSpatialObject3_Superclass___New_orig__() -> itkVesselTubeSpatialObject3_Superclass_Pointer"""
    return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass___New_orig__()

def itkVesselTubeSpatialObject3_Superclass_cast(obj: 'itkLightObject') -> "itkVesselTubeSpatialObject3_Superclass *":
    """itkVesselTubeSpatialObject3_Superclass_cast(itkLightObject obj) -> itkVesselTubeSpatialObject3_Superclass"""
    return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Superclass_cast(obj)

class itkVesselTubeSpatialObject2(itkVesselTubeSpatialObject2_Superclass):
    """


    Representation of a tube based on the spatial object classes.

    The tube is basically defined by a set of points. Each tube can be
    connected to a tube network, by using the AddSpatialObject() methods
    of a VesselTubeSpatialObject Object. A tube is also identified by an
    id number when connected to a network.

    See:   VesselTubeSpatialObjectPoint

    C++ includes: itkVesselTubeSpatialObject.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVesselTubeSpatialObject2_Pointer":
        """__New_orig__() -> itkVesselTubeSpatialObject2_Pointer"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVesselTubeSpatialObject2_Pointer":
        """Clone(itkVesselTubeSpatialObject2 self) -> itkVesselTubeSpatialObject2_Pointer"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Clone(self)

    __swig_destroy__ = _itkVesselTubeSpatialObjectPython.delete_itkVesselTubeSpatialObject2

    def cast(obj: 'itkLightObject') -> "itkVesselTubeSpatialObject2 *":
        """cast(itkLightObject obj) -> itkVesselTubeSpatialObject2"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkVesselTubeSpatialObject2 *":
        """GetPointer(itkVesselTubeSpatialObject2 self) -> itkVesselTubeSpatialObject2"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkVesselTubeSpatialObject2

        Create a new object of the class itkVesselTubeSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVesselTubeSpatialObject2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVesselTubeSpatialObject2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVesselTubeSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVesselTubeSpatialObject2.Clone = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_Clone, None, itkVesselTubeSpatialObject2)
itkVesselTubeSpatialObject2.GetPointer = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_GetPointer, None, itkVesselTubeSpatialObject2)
itkVesselTubeSpatialObject2_swigregister = _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_swigregister
itkVesselTubeSpatialObject2_swigregister(itkVesselTubeSpatialObject2)

def itkVesselTubeSpatialObject2___New_orig__() -> "itkVesselTubeSpatialObject2_Pointer":
    """itkVesselTubeSpatialObject2___New_orig__() -> itkVesselTubeSpatialObject2_Pointer"""
    return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2___New_orig__()

def itkVesselTubeSpatialObject2_cast(obj: 'itkLightObject') -> "itkVesselTubeSpatialObject2 *":
    """itkVesselTubeSpatialObject2_cast(itkLightObject obj) -> itkVesselTubeSpatialObject2"""
    return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject2_cast(obj)

class itkVesselTubeSpatialObject3(itkVesselTubeSpatialObject3_Superclass):
    """


    Representation of a tube based on the spatial object classes.

    The tube is basically defined by a set of points. Each tube can be
    connected to a tube network, by using the AddSpatialObject() methods
    of a VesselTubeSpatialObject Object. A tube is also identified by an
    id number when connected to a network.

    See:   VesselTubeSpatialObjectPoint

    C++ includes: itkVesselTubeSpatialObject.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkVesselTubeSpatialObject3_Pointer":
        """__New_orig__() -> itkVesselTubeSpatialObject3_Pointer"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkVesselTubeSpatialObject3_Pointer":
        """Clone(itkVesselTubeSpatialObject3 self) -> itkVesselTubeSpatialObject3_Pointer"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Clone(self)

    __swig_destroy__ = _itkVesselTubeSpatialObjectPython.delete_itkVesselTubeSpatialObject3

    def cast(obj: 'itkLightObject') -> "itkVesselTubeSpatialObject3 *":
        """cast(itkLightObject obj) -> itkVesselTubeSpatialObject3"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkVesselTubeSpatialObject3 *":
        """GetPointer(itkVesselTubeSpatialObject3 self) -> itkVesselTubeSpatialObject3"""
        return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkVesselTubeSpatialObject3

        Create a new object of the class itkVesselTubeSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVesselTubeSpatialObject3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkVesselTubeSpatialObject3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkVesselTubeSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkVesselTubeSpatialObject3.Clone = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_Clone, None, itkVesselTubeSpatialObject3)
itkVesselTubeSpatialObject3.GetPointer = new_instancemethod(_itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_GetPointer, None, itkVesselTubeSpatialObject3)
itkVesselTubeSpatialObject3_swigregister = _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_swigregister
itkVesselTubeSpatialObject3_swigregister(itkVesselTubeSpatialObject3)

def itkVesselTubeSpatialObject3___New_orig__() -> "itkVesselTubeSpatialObject3_Pointer":
    """itkVesselTubeSpatialObject3___New_orig__() -> itkVesselTubeSpatialObject3_Pointer"""
    return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3___New_orig__()

def itkVesselTubeSpatialObject3_cast(obj: 'itkLightObject') -> "itkVesselTubeSpatialObject3 *":
    """itkVesselTubeSpatialObject3_cast(itkLightObject obj) -> itkVesselTubeSpatialObject3"""
    return _itkVesselTubeSpatialObjectPython.itkVesselTubeSpatialObject3_cast(obj)



