# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkPolygonSpatialObjectPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkPolygonSpatialObjectPython', [dirname(__file__)])
        except ImportError:
            import _itkPolygonSpatialObjectPython
            return _itkPolygonSpatialObjectPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkPolygonSpatialObjectPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkPolygonSpatialObjectPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkPolygonSpatialObjectPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkPointPython
import vnl_vectorPython
import vnl_matrixPython
import stdcomplexPython
import itkVectorPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkBlobSpatialObjectPython
import itkSpatialObjectPointPython
import itkRGBAPixelPython
import itkPointBasedSpatialObjectPython
import itkSpatialObjectBasePython
import itkSpatialObjectPropertyPython
import itkIndexPython
import itkSizePython
import itkOffsetPython
import itkAffineGeometryFramePython
import itkScalableAffineTransformPython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkCovariantVectorPython
import itkAffineTransformPython
import itkMatrixOffsetTransformBasePython
import itkDiffusionTensor3DPython
import itkSymmetricSecondRankTensorPython
import itkOptimizerParametersPython
import itkArrayPython
import itkArray2DPython
import itkVariableLengthVectorPython
import itkTransformBasePython
import itkBoundingBoxPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkMapContainerPython
import itkImageRegionPython

def itkPolygonSpatialObject3_New():
  return itkPolygonSpatialObject3.New()


def itkPolygonSpatialObject2_New():
  return itkPolygonSpatialObject2.New()

class itkPolygonSpatialObject2(itkBlobSpatialObjectPython.itkBlobSpatialObject2):
    """


    TODO.

    C++ includes: itkPolygonSpatialObject.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPolygonSpatialObject2_Pointer":
        """__New_orig__() -> itkPolygonSpatialObject2_Pointer"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPolygonSpatialObject2_Pointer":
        """Clone(itkPolygonSpatialObject2 self) -> itkPolygonSpatialObject2_Pointer"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_Clone(self)

    Axial = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_Axial
    Coronal = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_Coronal
    Sagittal = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_Sagittal
    UserPlane = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_UserPlane
    Unknown = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_Unknown

    def Plane(self) -> "itkPolygonSpatialObject2::PolygonGroupOrientation":
        """
        Plane(itkPolygonSpatialObject2 self) -> itkPolygonSpatialObject2::PolygonGroupOrientation

        Method returning plane
        alignment of strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_Plane(self)


    def SetThickness(self, _arg: 'double const') -> "void":
        """
        SetThickness(itkPolygonSpatialObject2 self, double const _arg)

        Method sets the
        thickness of the current strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_SetThickness(self, _arg)


    def GetThickness(self) -> "double":
        """
        GetThickness(itkPolygonSpatialObject2 self) -> double

        Method gets the
        thickness of the current strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_GetThickness(self)


    def IsClosed(self) -> "bool":
        """
        IsClosed(itkPolygonSpatialObject2 self) -> bool

        Returns if the polygon is
        closed 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_IsClosed(self)


    def NumberOfPoints(self) -> "unsigned int":
        """
        NumberOfPoints(itkPolygonSpatialObject2 self) -> unsigned int

        Returns the number
        of points of the polygon 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_NumberOfPoints(self)


    def ClosestPoint(self, curPoint: 'itkPointD2') -> "itkPointD2":
        """
        ClosestPoint(itkPolygonSpatialObject2 self, itkPointD2 curPoint) -> itkPointD2

        Method returns the
        Point closest to the given point 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_ClosestPoint(self, curPoint)


    def MeasureArea(self) -> "double":
        """
        MeasureArea(itkPolygonSpatialObject2 self) -> double

        Method returns area of
        polygon described by points 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasureArea(self)


    def MeasureVolume(self) -> "double":
        """
        MeasureVolume(itkPolygonSpatialObject2 self) -> double

        Method returns the
        volume of the strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasureVolume(self)


    def MeasurePerimeter(self) -> "double":
        """
        MeasurePerimeter(itkPolygonSpatialObject2 self) -> double

        Method returns the
        length of the perimeter 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasurePerimeter(self)


    def DeletePoint(self, pointToDelete: 'itkPointD2') -> "bool":
        """
        DeletePoint(itkPolygonSpatialObject2 self, itkPointD2 pointToDelete) -> bool

        Method deletes a point
        from the strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_DeletePoint(self, pointToDelete)


    def AddPoint(self, pointToAdd: 'itkPointD2') -> "bool":
        """
        AddPoint(itkPolygonSpatialObject2 self, itkPointD2 pointToAdd) -> bool

        Method adds a point to the
        end of the strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_AddPoint(self, pointToAdd)


    def InsertPoint(self, point1: 'itkPointD2', pointToAdd: 'itkPointD2') -> "bool":
        """
        InsertPoint(itkPolygonSpatialObject2 self, itkPointD2 point1, itkPointD2 pointToAdd) -> bool

        Method inserts point
        after point1 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_InsertPoint(self, point1, pointToAdd)


    def ReplacePoint(self, oldpoint: 'itkPointD2', newPoint: 'itkPointD2') -> "bool":
        """
        ReplacePoint(itkPolygonSpatialObject2 self, itkPointD2 oldpoint, itkPointD2 newPoint) -> bool

        Method replaces a
        point 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_ReplacePoint(self, oldpoint, newPoint)


    def RemoveSegment(self, startpoint: 'itkPointD2', endPoint: 'itkPointD2') -> "bool":
        """
        RemoveSegment(itkPolygonSpatialObject2 self, itkPointD2 startpoint, itkPointD2 endPoint) -> bool

        Method removes the
        series of points between startpoint and endpoint 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_RemoveSegment(self, startpoint, endPoint)


    def IsInside(self, *args) -> "bool":
        """
        IsInside(itkPolygonSpatialObject2 self, itkPointD2 point, unsigned int depth, char * name) -> bool
        IsInside(itkPolygonSpatialObject2 self, itkPointD2 point) -> bool

        Test whether a point is
        inside or outside the object For computational speed purposes, it is
        faster if the method does not check the name of the class and the
        current depth. 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_IsInside(self, *args)

    __swig_destroy__ = _itkPolygonSpatialObjectPython.delete_itkPolygonSpatialObject2

    def cast(obj: 'itkLightObject') -> "itkPolygonSpatialObject2 *":
        """cast(itkLightObject obj) -> itkPolygonSpatialObject2"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkPolygonSpatialObject2 *":
        """GetPointer(itkPolygonSpatialObject2 self) -> itkPolygonSpatialObject2"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkPolygonSpatialObject2

        Create a new object of the class itkPolygonSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPolygonSpatialObject2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPolygonSpatialObject2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPolygonSpatialObject2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPolygonSpatialObject2.Clone = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_Clone, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.Plane = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_Plane, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.SetThickness = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_SetThickness, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.GetThickness = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_GetThickness, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.IsClosed = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_IsClosed, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.NumberOfPoints = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_NumberOfPoints, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.ClosestPoint = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_ClosestPoint, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.MeasureArea = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasureArea, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.MeasureVolume = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasureVolume, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.MeasurePerimeter = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_MeasurePerimeter, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.DeletePoint = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_DeletePoint, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.AddPoint = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_AddPoint, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.InsertPoint = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_InsertPoint, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.ReplacePoint = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_ReplacePoint, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.RemoveSegment = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_RemoveSegment, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.IsInside = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_IsInside, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2.GetPointer = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_GetPointer, None, itkPolygonSpatialObject2)
itkPolygonSpatialObject2_swigregister = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_swigregister
itkPolygonSpatialObject2_swigregister(itkPolygonSpatialObject2)

def itkPolygonSpatialObject2___New_orig__() -> "itkPolygonSpatialObject2_Pointer":
    """itkPolygonSpatialObject2___New_orig__() -> itkPolygonSpatialObject2_Pointer"""
    return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2___New_orig__()

def itkPolygonSpatialObject2_cast(obj: 'itkLightObject') -> "itkPolygonSpatialObject2 *":
    """itkPolygonSpatialObject2_cast(itkLightObject obj) -> itkPolygonSpatialObject2"""
    return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject2_cast(obj)

class itkPolygonSpatialObject3(itkBlobSpatialObjectPython.itkBlobSpatialObject3):
    """


    TODO.

    C++ includes: itkPolygonSpatialObject.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkPolygonSpatialObject3_Pointer":
        """__New_orig__() -> itkPolygonSpatialObject3_Pointer"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkPolygonSpatialObject3_Pointer":
        """Clone(itkPolygonSpatialObject3 self) -> itkPolygonSpatialObject3_Pointer"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_Clone(self)

    Axial = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_Axial
    Coronal = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_Coronal
    Sagittal = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_Sagittal
    UserPlane = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_UserPlane
    Unknown = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_Unknown

    def Plane(self) -> "itkPolygonSpatialObject3::PolygonGroupOrientation":
        """
        Plane(itkPolygonSpatialObject3 self) -> itkPolygonSpatialObject3::PolygonGroupOrientation

        Method returning plane
        alignment of strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_Plane(self)


    def SetThickness(self, _arg: 'double const') -> "void":
        """
        SetThickness(itkPolygonSpatialObject3 self, double const _arg)

        Method sets the
        thickness of the current strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_SetThickness(self, _arg)


    def GetThickness(self) -> "double":
        """
        GetThickness(itkPolygonSpatialObject3 self) -> double

        Method gets the
        thickness of the current strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_GetThickness(self)


    def IsClosed(self) -> "bool":
        """
        IsClosed(itkPolygonSpatialObject3 self) -> bool

        Returns if the polygon is
        closed 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_IsClosed(self)


    def NumberOfPoints(self) -> "unsigned int":
        """
        NumberOfPoints(itkPolygonSpatialObject3 self) -> unsigned int

        Returns the number
        of points of the polygon 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_NumberOfPoints(self)


    def ClosestPoint(self, curPoint: 'itkPointD3') -> "itkPointD3":
        """
        ClosestPoint(itkPolygonSpatialObject3 self, itkPointD3 curPoint) -> itkPointD3

        Method returns the
        Point closest to the given point 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_ClosestPoint(self, curPoint)


    def MeasureArea(self) -> "double":
        """
        MeasureArea(itkPolygonSpatialObject3 self) -> double

        Method returns area of
        polygon described by points 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasureArea(self)


    def MeasureVolume(self) -> "double":
        """
        MeasureVolume(itkPolygonSpatialObject3 self) -> double

        Method returns the
        volume of the strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasureVolume(self)


    def MeasurePerimeter(self) -> "double":
        """
        MeasurePerimeter(itkPolygonSpatialObject3 self) -> double

        Method returns the
        length of the perimeter 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasurePerimeter(self)


    def DeletePoint(self, pointToDelete: 'itkPointD3') -> "bool":
        """
        DeletePoint(itkPolygonSpatialObject3 self, itkPointD3 pointToDelete) -> bool

        Method deletes a point
        from the strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_DeletePoint(self, pointToDelete)


    def AddPoint(self, pointToAdd: 'itkPointD3') -> "bool":
        """
        AddPoint(itkPolygonSpatialObject3 self, itkPointD3 pointToAdd) -> bool

        Method adds a point to the
        end of the strand 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_AddPoint(self, pointToAdd)


    def InsertPoint(self, point1: 'itkPointD3', pointToAdd: 'itkPointD3') -> "bool":
        """
        InsertPoint(itkPolygonSpatialObject3 self, itkPointD3 point1, itkPointD3 pointToAdd) -> bool

        Method inserts point
        after point1 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_InsertPoint(self, point1, pointToAdd)


    def ReplacePoint(self, oldpoint: 'itkPointD3', newPoint: 'itkPointD3') -> "bool":
        """
        ReplacePoint(itkPolygonSpatialObject3 self, itkPointD3 oldpoint, itkPointD3 newPoint) -> bool

        Method replaces a
        point 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_ReplacePoint(self, oldpoint, newPoint)


    def RemoveSegment(self, startpoint: 'itkPointD3', endPoint: 'itkPointD3') -> "bool":
        """
        RemoveSegment(itkPolygonSpatialObject3 self, itkPointD3 startpoint, itkPointD3 endPoint) -> bool

        Method removes the
        series of points between startpoint and endpoint 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_RemoveSegment(self, startpoint, endPoint)


    def IsInside(self, *args) -> "bool":
        """
        IsInside(itkPolygonSpatialObject3 self, itkPointD3 point, unsigned int depth, char * name) -> bool
        IsInside(itkPolygonSpatialObject3 self, itkPointD3 point) -> bool

        Test whether a point is
        inside or outside the object For computational speed purposes, it is
        faster if the method does not check the name of the class and the
        current depth. 
        """
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_IsInside(self, *args)

    __swig_destroy__ = _itkPolygonSpatialObjectPython.delete_itkPolygonSpatialObject3

    def cast(obj: 'itkLightObject') -> "itkPolygonSpatialObject3 *":
        """cast(itkLightObject obj) -> itkPolygonSpatialObject3"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkPolygonSpatialObject3 *":
        """GetPointer(itkPolygonSpatialObject3 self) -> itkPolygonSpatialObject3"""
        return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkPolygonSpatialObject3

        Create a new object of the class itkPolygonSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPolygonSpatialObject3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkPolygonSpatialObject3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkPolygonSpatialObject3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkPolygonSpatialObject3.Clone = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_Clone, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.Plane = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_Plane, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.SetThickness = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_SetThickness, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.GetThickness = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_GetThickness, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.IsClosed = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_IsClosed, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.NumberOfPoints = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_NumberOfPoints, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.ClosestPoint = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_ClosestPoint, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.MeasureArea = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasureArea, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.MeasureVolume = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasureVolume, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.MeasurePerimeter = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_MeasurePerimeter, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.DeletePoint = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_DeletePoint, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.AddPoint = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_AddPoint, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.InsertPoint = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_InsertPoint, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.ReplacePoint = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_ReplacePoint, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.RemoveSegment = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_RemoveSegment, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.IsInside = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_IsInside, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3.GetPointer = new_instancemethod(_itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_GetPointer, None, itkPolygonSpatialObject3)
itkPolygonSpatialObject3_swigregister = _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_swigregister
itkPolygonSpatialObject3_swigregister(itkPolygonSpatialObject3)

def itkPolygonSpatialObject3___New_orig__() -> "itkPolygonSpatialObject3_Pointer":
    """itkPolygonSpatialObject3___New_orig__() -> itkPolygonSpatialObject3_Pointer"""
    return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3___New_orig__()

def itkPolygonSpatialObject3_cast(obj: 'itkLightObject') -> "itkPolygonSpatialObject3 *":
    """itkPolygonSpatialObject3_cast(itkLightObject obj) -> itkPolygonSpatialObject3"""
    return _itkPolygonSpatialObjectPython.itkPolygonSpatialObject3_cast(obj)



