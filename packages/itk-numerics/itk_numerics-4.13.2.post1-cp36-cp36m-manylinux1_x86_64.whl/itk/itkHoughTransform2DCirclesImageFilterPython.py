# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkHoughTransform2DCirclesImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkHoughTransform2DCirclesImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkHoughTransform2DCirclesImageFilterPython
            return _itkHoughTransform2DCirclesImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkHoughTransform2DCirclesImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkHoughTransform2DCirclesImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkHoughTransform2DCirclesImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import ITKCommonBasePython
import pyBasePython
import itkImagePython
import itkMatrixPython
import vnl_matrix_fixedPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import itkPointPython
import itkVectorPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkCovariantVectorPython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import itkRGBPixelPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkEllipseSpatialObjectPython
import itkSpatialObjectBasePython
import itkSpatialObjectPropertyPython
import itkBoundingBoxPython
import itkVectorContainerPython
import itkContinuousIndexPython
import itkMapContainerPython
import itkAffineGeometryFramePython
import itkScalableAffineTransformPython
import itkAffineTransformPython
import itkMatrixOffsetTransformBasePython
import itkArray2DPython
import itkDiffusionTensor3DPython
import itkVariableLengthVectorPython
import itkOptimizerParametersPython
import itkArrayPython
import itkTransformBasePython
import itkImageToImageFilterAPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkImageToImageFilterCommonPython

def itkHoughTransform2DCirclesImageFilterFF_New():
  return itkHoughTransform2DCirclesImageFilterFF.New()

class itkHoughTransform2DCirclesImageFilterFF(itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    """


    Performs the Hough Transform to find circles in a 2D image.

    This filter derives from the base class ImageToImageFilter. The input
    is an image, and all pixels above some threshold are those we want to
    consider during the process.

    This filter produces two output: 1) The accumulator array, which
    represents probability of centers. 2) The array or radii, which has
    the radius value at each coordinate point.

    When the filter finds a "correct" point, it computes the gradient at
    this point and draws a regular narrow-banded circle using the minimum
    and maximum radius given by the user, and fills in the array of radii.
    The SweepAngle value can be adjusted to improve the segmentation.

    The filter will detect ring-shaped objects in the image, but it also
    finds discs. For a disc to be found, the intensity values within the
    disc must be higher than the surrounding of the disc.

    TOutputPixelType is the pixel type of the accumulator image. An
    unsigned integer type (like 'unsigned long') is usually the best
    choice for this pixel type.

    TRadiusPixelType is the pixel type of the radius image. A floating
    point type is recommended, as the estimation of the radius involves
    floating point calculations. Usually, 'double' is the best choice for
    this pixel type.

    By default, TRadiusPixelType = TOutputPixelType, in order to preserve
    backward compatibility with ITK <= 4.12.2.

    C++ includes: itkHoughTransform2DCirclesImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkHoughTransform2DCirclesImageFilterFF_Pointer":
        """__New_orig__() -> itkHoughTransform2DCirclesImageFilterFF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkHoughTransform2DCirclesImageFilterFF_Pointer":
        """Clone(itkHoughTransform2DCirclesImageFilterFF self) -> itkHoughTransform2DCirclesImageFilterFF_Pointer"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_Clone(self)


    def GenerateData(self) -> "void":
        """
        GenerateData(itkHoughTransform2DCirclesImageFilterFF self)

        Method for evaluating
        the implicit function over the image. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GenerateData(self)


    def SetRadius(self, radius: 'double') -> "void":
        """
        SetRadius(itkHoughTransform2DCirclesImageFilterFF self, double radius)

        Set both Minimum and
        Maximum radius values. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetRadius(self, radius)


    def SetMinimumRadius(self, _arg: 'double const') -> "void":
        """
        SetMinimumRadius(itkHoughTransform2DCirclesImageFilterFF self, double const _arg)

        Set the minimum
        radius value the filter should look for. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetMinimumRadius(self, _arg)


    def GetMinimumRadius(self) -> "double":
        """GetMinimumRadius(itkHoughTransform2DCirclesImageFilterFF self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetMinimumRadius(self)


    def SetMaximumRadius(self, _arg: 'double const') -> "void":
        """
        SetMaximumRadius(itkHoughTransform2DCirclesImageFilterFF self, double const _arg)

        Set the maximum
        radius value the filter should look for. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetMaximumRadius(self, _arg)


    def GetMaximumRadius(self) -> "double":
        """GetMaximumRadius(itkHoughTransform2DCirclesImageFilterFF self) -> double"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetMaximumRadius(self)


    def SetThreshold(self, _arg: 'double const') -> "void":
        """
        SetThreshold(itkHoughTransform2DCirclesImageFilterFF self, double const _arg)

        Set the threshold
        above which the filter should consider the point as a valid point. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetThreshold(self, _arg)


    def GetThreshold(self) -> "double":
        """
        GetThreshold(itkHoughTransform2DCirclesImageFilterFF self) -> double

        Get the threshold
        value. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetThreshold(self)


    def GetModifiableRadiusImage(self) -> "itkImageF2 *":
        """GetModifiableRadiusImage(itkHoughTransform2DCirclesImageFilterFF self) -> itkImageF2"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetModifiableRadiusImage(self)


    def GetRadiusImage(self, *args) -> "itkImageF2 *":
        """
        GetRadiusImage(itkHoughTransform2DCirclesImageFilterFF self) -> itkImageF2
        GetRadiusImage(itkHoughTransform2DCirclesImageFilterFF self) -> itkImageF2
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetRadiusImage(self, *args)


    def SetSigmaGradient(self, _arg: 'double const') -> "void":
        """
        SetSigmaGradient(itkHoughTransform2DCirclesImageFilterFF self, double const _arg)

        Set the scale of
        the derivative function (using DoG). 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetSigmaGradient(self, _arg)


    def GetSigmaGradient(self) -> "double":
        """
        GetSigmaGradient(itkHoughTransform2DCirclesImageFilterFF self) -> double

        Get the scale
        value. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetSigmaGradient(self)


    def GetCircles(self, *args) -> "std::list< itkEllipseSpatialObject2_Pointer,std::allocator< itkEllipseSpatialObject2_Pointer > > &":
        """
        GetCircles(itkHoughTransform2DCirclesImageFilterFF self) -> listitkEllipseSpatialObject2_Pointer
        GetCircles(itkHoughTransform2DCirclesImageFilterFF self, unsigned int n) -> listitkEllipseSpatialObject2_Pointer

        Get the list of circles.
        This recomputes the circles. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetCircles(self, *args)


    def SetNumberOfCircles(self, _arg: 'unsigned long const') -> "void":
        """
        SetNumberOfCircles(itkHoughTransform2DCirclesImageFilterFF self, unsigned long const _arg)

        Set/Get the
        number of circles to extract. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetNumberOfCircles(self, _arg)


    def GetNumberOfCircles(self) -> "unsigned long":
        """GetNumberOfCircles(itkHoughTransform2DCirclesImageFilterFF self) -> unsigned long"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetNumberOfCircles(self)


    def SetDiscRadiusRatio(self, _arg: 'float const') -> "void":
        """
        SetDiscRadiusRatio(itkHoughTransform2DCirclesImageFilterFF self, float const _arg)

        Set/Get the
        radius of the disc to remove from the accumulator for each circle
        found. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetDiscRadiusRatio(self, _arg)


    def GetDiscRadiusRatio(self) -> "float":
        """GetDiscRadiusRatio(itkHoughTransform2DCirclesImageFilterFF self) -> float"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetDiscRadiusRatio(self)


    def SetVariance(self, _arg: 'float const') -> "void":
        """
        SetVariance(itkHoughTransform2DCirclesImageFilterFF self, float const _arg)

        Set/Get the variance of
        the Gaussian blurring for the accumulator. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetVariance(self, _arg)


    def GetVariance(self) -> "float":
        """GetVariance(itkHoughTransform2DCirclesImageFilterFF self) -> float"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetVariance(self)


    def SetSweepAngle(self, _arg: 'float const') -> "void":
        """
        SetSweepAngle(itkHoughTransform2DCirclesImageFilterFF self, float const _arg)

        Set/Get the sweep
        angle. 
        """
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetSweepAngle(self, _arg)


    def GetSweepAngle(self) -> "float":
        """GetSweepAngle(itkHoughTransform2DCirclesImageFilterFF self) -> float"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetSweepAngle(self)

    IntConvertibleToOutputCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_IntConvertibleToOutputCheck
    InputGreaterThanDoubleCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_InputGreaterThanDoubleCheck
    OutputPlusIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_OutputPlusIntCheck
    OutputDividedByIntCheck = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_OutputDividedByIntCheck
    __swig_destroy__ = _itkHoughTransform2DCirclesImageFilterPython.delete_itkHoughTransform2DCirclesImageFilterFF

    def cast(obj: 'itkLightObject') -> "itkHoughTransform2DCirclesImageFilterFF *":
        """cast(itkLightObject obj) -> itkHoughTransform2DCirclesImageFilterFF"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkHoughTransform2DCirclesImageFilterFF *":
        """GetPointer(itkHoughTransform2DCirclesImageFilterFF self) -> itkHoughTransform2DCirclesImageFilterFF"""
        return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkHoughTransform2DCirclesImageFilterFF

        Create a new object of the class itkHoughTransform2DCirclesImageFilterFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHoughTransform2DCirclesImageFilterFF.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkHoughTransform2DCirclesImageFilterFF.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkHoughTransform2DCirclesImageFilterFF.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkHoughTransform2DCirclesImageFilterFF.Clone = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_Clone, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GenerateData = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GenerateData, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.SetRadius = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetRadius, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.SetMinimumRadius = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetMinimumRadius, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetMinimumRadius = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetMinimumRadius, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.SetMaximumRadius = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetMaximumRadius, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetMaximumRadius = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetMaximumRadius, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.SetThreshold = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetThreshold, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetThreshold = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetThreshold, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetModifiableRadiusImage = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetModifiableRadiusImage, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetRadiusImage = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetRadiusImage, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.SetSigmaGradient = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetSigmaGradient, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetSigmaGradient = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetSigmaGradient, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetCircles = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetCircles, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.SetNumberOfCircles = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetNumberOfCircles, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetNumberOfCircles = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetNumberOfCircles, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.SetDiscRadiusRatio = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetDiscRadiusRatio, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetDiscRadiusRatio = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetDiscRadiusRatio, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.SetVariance = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetVariance, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetVariance = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetVariance, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.SetSweepAngle = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_SetSweepAngle, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetSweepAngle = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetSweepAngle, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF.GetPointer = new_instancemethod(_itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_GetPointer, None, itkHoughTransform2DCirclesImageFilterFF)
itkHoughTransform2DCirclesImageFilterFF_swigregister = _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_swigregister
itkHoughTransform2DCirclesImageFilterFF_swigregister(itkHoughTransform2DCirclesImageFilterFF)

def itkHoughTransform2DCirclesImageFilterFF___New_orig__() -> "itkHoughTransform2DCirclesImageFilterFF_Pointer":
    """itkHoughTransform2DCirclesImageFilterFF___New_orig__() -> itkHoughTransform2DCirclesImageFilterFF_Pointer"""
    return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF___New_orig__()

def itkHoughTransform2DCirclesImageFilterFF_cast(obj: 'itkLightObject') -> "itkHoughTransform2DCirclesImageFilterFF *":
    """itkHoughTransform2DCirclesImageFilterFF_cast(itkLightObject obj) -> itkHoughTransform2DCirclesImageFilterFF"""
    return _itkHoughTransform2DCirclesImageFilterPython.itkHoughTransform2DCirclesImageFilterFF_cast(obj)



