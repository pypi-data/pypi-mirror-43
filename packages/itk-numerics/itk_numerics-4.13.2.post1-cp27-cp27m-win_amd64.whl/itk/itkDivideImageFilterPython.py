# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkDivideImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkDivideImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkDivideImageFilterPython
            return _itkDivideImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkDivideImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkDivideImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkDivideImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import stdcomplexPython
import pyBasePython
import itkImagePython
import itkCovariantVectorPython
import itkVectorPython
import vnl_vectorPython
import vnl_matrixPython
import vnl_vector_refPython
import itkFixedArrayPython
import itkRGBPixelPython
import itkImageRegionPython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import ITKCommonBasePython
import itkMatrixPython
import vnl_matrix_fixedPython
import itkPointPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkInPlaceImageFilterAPython
import itkImageToImageFilterBPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkVectorImagePython
import itkVariableLengthVectorPython
import itkImageToImageFilterCommonPython
import itkImageToImageFilterAPython
import itkInPlaceImageFilterBPython
import itkSimpleDataObjectDecoratorPython
import itkArrayPython

def itkDivideImageFilterICF3IF3ICF3_New():
  return itkDivideImageFilterICF3IF3ICF3.New()


def itkDivideImageFilterICF3IF3ICF3_Superclass_New():
  return itkDivideImageFilterICF3IF3ICF3_Superclass.New()


def itkDivideImageFilterICF2IF2ICF2_New():
  return itkDivideImageFilterICF2IF2ICF2.New()


def itkDivideImageFilterICF2IF2ICF2_Superclass_New():
  return itkDivideImageFilterICF2IF2ICF2_Superclass.New()


def itkDivideImageFilterICF3ICF3ICF3_New():
  return itkDivideImageFilterICF3ICF3ICF3.New()


def itkDivideImageFilterICF3ICF3ICF3_Superclass_New():
  return itkDivideImageFilterICF3ICF3ICF3_Superclass.New()


def itkDivideImageFilterICF2ICF2ICF2_New():
  return itkDivideImageFilterICF2ICF2ICF2.New()


def itkDivideImageFilterICF2ICF2ICF2_Superclass_New():
  return itkDivideImageFilterICF2ICF2ICF2_Superclass.New()


def itkDivideImageFilterIF3IF3IF3_New():
  return itkDivideImageFilterIF3IF3IF3.New()


def itkDivideImageFilterIF3IF3IF3_Superclass_New():
  return itkDivideImageFilterIF3IF3IF3_Superclass.New()


def itkDivideImageFilterIF2IF2IF2_New():
  return itkDivideImageFilterIF2IF2IF2.New()


def itkDivideImageFilterIF2IF2IF2_Superclass_New():
  return itkDivideImageFilterIF2IF2IF2_Superclass.New()


def itkDivideImageFilterIUS3IUS3IUS3_New():
  return itkDivideImageFilterIUS3IUS3IUS3.New()


def itkDivideImageFilterIUS3IUS3IUS3_Superclass_New():
  return itkDivideImageFilterIUS3IUS3IUS3_Superclass.New()


def itkDivideImageFilterIUS2IUS2IUS2_New():
  return itkDivideImageFilterIUS2IUS2IUS2.New()


def itkDivideImageFilterIUS2IUS2IUS2_Superclass_New():
  return itkDivideImageFilterIUS2IUS2IUS2_Superclass.New()


def itkDivideImageFilterIUC3IUC3IUC3_New():
  return itkDivideImageFilterIUC3IUC3IUC3.New()


def itkDivideImageFilterIUC3IUC3IUC3_Superclass_New():
  return itkDivideImageFilterIUC3IUC3IUC3_Superclass.New()


def itkDivideImageFilterIUC2IUC2IUC2_New():
  return itkDivideImageFilterIUC2IUC2IUC2.New()


def itkDivideImageFilterIUC2IUC2IUC2_Superclass_New():
  return itkDivideImageFilterIUC2IUC2IUC2_Superclass.New()


def itkDivideImageFilterISS3ISS3ISS3_New():
  return itkDivideImageFilterISS3ISS3ISS3.New()


def itkDivideImageFilterISS3ISS3ISS3_Superclass_New():
  return itkDivideImageFilterISS3ISS3ISS3_Superclass.New()


def itkDivideImageFilterISS2ISS2ISS2_New():
  return itkDivideImageFilterISS2ISS2ISS2.New()


def itkDivideImageFilterISS2ISS2ISS2_Superclass_New():
  return itkDivideImageFilterISS2ISS2ISS2_Superclass.New()

class itkDivideImageFilterICF2ICF2ICF2_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    """Proxy of C++ itkDivideImageFilterICF2ICF2ICF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterICF2ICF2ICF2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterICF2ICF2ICF2_Superclass self) -> itkDivideImageFilterICF2ICF2ICF2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterICF2ICF2ICF2_Superclass self, itkImageCF2 image1)
        SetInput1(itkDivideImageFilterICF2ICF2ICF2_Superclass self, itkSimpleDataObjectDecoratorCF input1)
        SetInput1(itkDivideImageFilterICF2ICF2ICF2_Superclass self, stdcomplexF input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterICF2ICF2ICF2_Superclass self, stdcomplexF input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterICF2ICF2ICF2_Superclass self) -> stdcomplexF"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterICF2ICF2ICF2_Superclass self, itkImageCF2 image2)
        SetInput2(itkDivideImageFilterICF2ICF2ICF2_Superclass self, itkSimpleDataObjectDecoratorCF input2)
        SetInput2(itkDivideImageFilterICF2ICF2ICF2_Superclass self, stdcomplexF input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterICF2ICF2ICF2_Superclass self, stdcomplexF input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterICF2ICF2ICF2_Superclass self, stdcomplexF ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterICF2ICF2ICF2_Superclass self) -> stdcomplexF"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterICF2ICF2ICF2_Superclass self) -> stdcomplexF"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterICF2ICF2ICF2_Superclass self) -> itk::Functor::Div< std::complex< float >,std::complex< float >,std::complex< float > >
        GetFunctor(itkDivideImageFilterICF2ICF2ICF2_Superclass self) -> itk::Functor::Div< std::complex< float >,std::complex< float >,std::complex< float > > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterICF2ICF2ICF2_Superclass self, itk::Functor::Div< std::complex< float >,std::complex< float >,std::complex< float > > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterICF2ICF2ICF2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterICF2ICF2ICF2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterICF2ICF2ICF2_Superclass self) -> itkDivideImageFilterICF2ICF2ICF2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterICF2ICF2ICF2_Superclass

        Create a new object of the class itkDivideImageFilterICF2ICF2ICF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterICF2ICF2ICF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterICF2ICF2ICF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterICF2ICF2ICF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterICF2ICF2ICF2_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_Clone, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetInput1, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetConstant1, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_GetConstant1, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetInput2, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetConstant2, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetConstant, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_GetConstant, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_GetConstant2, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_GetFunctor, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_SetFunctor, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_GetPointer, None, itkDivideImageFilterICF2ICF2ICF2_Superclass)
itkDivideImageFilterICF2ICF2ICF2_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_swigregister
itkDivideImageFilterICF2ICF2ICF2_Superclass_swigregister(itkDivideImageFilterICF2ICF2ICF2_Superclass)

def itkDivideImageFilterICF2ICF2ICF2_Superclass___New_orig__():
    """itkDivideImageFilterICF2ICF2ICF2_Superclass___New_orig__() -> itkDivideImageFilterICF2ICF2ICF2_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass___New_orig__()

def itkDivideImageFilterICF2ICF2ICF2_Superclass_cast(obj):
    """itkDivideImageFilterICF2ICF2ICF2_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterICF2ICF2ICF2_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Superclass_cast(obj)

class itkDivideImageFilterICF2IF2ICF2_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF2ICF2):
    """Proxy of C++ itkDivideImageFilterICF2IF2ICF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterICF2IF2ICF2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterICF2IF2ICF2_Superclass self) -> itkDivideImageFilterICF2IF2ICF2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterICF2IF2ICF2_Superclass self, itkImageCF2 image1)
        SetInput1(itkDivideImageFilterICF2IF2ICF2_Superclass self, itkSimpleDataObjectDecoratorCF input1)
        SetInput1(itkDivideImageFilterICF2IF2ICF2_Superclass self, stdcomplexF input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterICF2IF2ICF2_Superclass self, stdcomplexF input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterICF2IF2ICF2_Superclass self) -> stdcomplexF"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterICF2IF2ICF2_Superclass self, itkImageF2 image2)
        SetInput2(itkDivideImageFilterICF2IF2ICF2_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkDivideImageFilterICF2IF2ICF2_Superclass self, float const & input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterICF2IF2ICF2_Superclass self, float const & input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterICF2IF2ICF2_Superclass self, float ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterICF2IF2ICF2_Superclass self) -> float const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterICF2IF2ICF2_Superclass self) -> float const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterICF2IF2ICF2_Superclass self) -> itk::Functor::Div< std::complex< float >,float,std::complex< float > >
        GetFunctor(itkDivideImageFilterICF2IF2ICF2_Superclass self) -> itk::Functor::Div< std::complex< float >,float,std::complex< float > > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterICF2IF2ICF2_Superclass self, itk::Functor::Div< std::complex< float >,float,std::complex< float > > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterICF2IF2ICF2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterICF2IF2ICF2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterICF2IF2ICF2_Superclass self) -> itkDivideImageFilterICF2IF2ICF2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterICF2IF2ICF2_Superclass

        Create a new object of the class itkDivideImageFilterICF2IF2ICF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterICF2IF2ICF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterICF2IF2ICF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterICF2IF2ICF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterICF2IF2ICF2_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_Clone, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetInput1, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetConstant1, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_GetConstant1, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetInput2, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetConstant2, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetConstant, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_GetConstant, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_GetConstant2, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_GetFunctor, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_SetFunctor, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_GetPointer, None, itkDivideImageFilterICF2IF2ICF2_Superclass)
itkDivideImageFilterICF2IF2ICF2_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_swigregister
itkDivideImageFilterICF2IF2ICF2_Superclass_swigregister(itkDivideImageFilterICF2IF2ICF2_Superclass)

def itkDivideImageFilterICF2IF2ICF2_Superclass___New_orig__():
    """itkDivideImageFilterICF2IF2ICF2_Superclass___New_orig__() -> itkDivideImageFilterICF2IF2ICF2_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass___New_orig__()

def itkDivideImageFilterICF2IF2ICF2_Superclass_cast(obj):
    """itkDivideImageFilterICF2IF2ICF2_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterICF2IF2ICF2_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Superclass_cast(obj)

class itkDivideImageFilterICF3ICF3ICF3_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    """Proxy of C++ itkDivideImageFilterICF3ICF3ICF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterICF3ICF3ICF3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterICF3ICF3ICF3_Superclass self) -> itkDivideImageFilterICF3ICF3ICF3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterICF3ICF3ICF3_Superclass self, itkImageCF3 image1)
        SetInput1(itkDivideImageFilterICF3ICF3ICF3_Superclass self, itkSimpleDataObjectDecoratorCF input1)
        SetInput1(itkDivideImageFilterICF3ICF3ICF3_Superclass self, stdcomplexF input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterICF3ICF3ICF3_Superclass self, stdcomplexF input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterICF3ICF3ICF3_Superclass self) -> stdcomplexF"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterICF3ICF3ICF3_Superclass self, itkImageCF3 image2)
        SetInput2(itkDivideImageFilterICF3ICF3ICF3_Superclass self, itkSimpleDataObjectDecoratorCF input2)
        SetInput2(itkDivideImageFilterICF3ICF3ICF3_Superclass self, stdcomplexF input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterICF3ICF3ICF3_Superclass self, stdcomplexF input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterICF3ICF3ICF3_Superclass self, stdcomplexF ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterICF3ICF3ICF3_Superclass self) -> stdcomplexF"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterICF3ICF3ICF3_Superclass self) -> stdcomplexF"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterICF3ICF3ICF3_Superclass self) -> itk::Functor::Div< std::complex< float >,std::complex< float >,std::complex< float > >
        GetFunctor(itkDivideImageFilterICF3ICF3ICF3_Superclass self) -> itk::Functor::Div< std::complex< float >,std::complex< float >,std::complex< float > > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterICF3ICF3ICF3_Superclass self, itk::Functor::Div< std::complex< float >,std::complex< float >,std::complex< float > > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterICF3ICF3ICF3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterICF3ICF3ICF3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterICF3ICF3ICF3_Superclass self) -> itkDivideImageFilterICF3ICF3ICF3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterICF3ICF3ICF3_Superclass

        Create a new object of the class itkDivideImageFilterICF3ICF3ICF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterICF3ICF3ICF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterICF3ICF3ICF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterICF3ICF3ICF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterICF3ICF3ICF3_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_Clone, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetInput1, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetConstant1, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_GetConstant1, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetInput2, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetConstant2, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetConstant, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_GetConstant, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_GetConstant2, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_GetFunctor, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_SetFunctor, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_GetPointer, None, itkDivideImageFilterICF3ICF3ICF3_Superclass)
itkDivideImageFilterICF3ICF3ICF3_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_swigregister
itkDivideImageFilterICF3ICF3ICF3_Superclass_swigregister(itkDivideImageFilterICF3ICF3ICF3_Superclass)

def itkDivideImageFilterICF3ICF3ICF3_Superclass___New_orig__():
    """itkDivideImageFilterICF3ICF3ICF3_Superclass___New_orig__() -> itkDivideImageFilterICF3ICF3ICF3_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass___New_orig__()

def itkDivideImageFilterICF3ICF3ICF3_Superclass_cast(obj):
    """itkDivideImageFilterICF3ICF3ICF3_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterICF3ICF3ICF3_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Superclass_cast(obj)

class itkDivideImageFilterICF3IF3ICF3_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterICF3ICF3):
    """Proxy of C++ itkDivideImageFilterICF3IF3ICF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterICF3IF3ICF3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterICF3IF3ICF3_Superclass self) -> itkDivideImageFilterICF3IF3ICF3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterICF3IF3ICF3_Superclass self, itkImageCF3 image1)
        SetInput1(itkDivideImageFilterICF3IF3ICF3_Superclass self, itkSimpleDataObjectDecoratorCF input1)
        SetInput1(itkDivideImageFilterICF3IF3ICF3_Superclass self, stdcomplexF input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterICF3IF3ICF3_Superclass self, stdcomplexF input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterICF3IF3ICF3_Superclass self) -> stdcomplexF"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterICF3IF3ICF3_Superclass self, itkImageF3 image2)
        SetInput2(itkDivideImageFilterICF3IF3ICF3_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkDivideImageFilterICF3IF3ICF3_Superclass self, float const & input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterICF3IF3ICF3_Superclass self, float const & input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterICF3IF3ICF3_Superclass self, float ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterICF3IF3ICF3_Superclass self) -> float const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterICF3IF3ICF3_Superclass self) -> float const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterICF3IF3ICF3_Superclass self) -> itk::Functor::Div< std::complex< float >,float,std::complex< float > >
        GetFunctor(itkDivideImageFilterICF3IF3ICF3_Superclass self) -> itk::Functor::Div< std::complex< float >,float,std::complex< float > > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterICF3IF3ICF3_Superclass self, itk::Functor::Div< std::complex< float >,float,std::complex< float > > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterICF3IF3ICF3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterICF3IF3ICF3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterICF3IF3ICF3_Superclass self) -> itkDivideImageFilterICF3IF3ICF3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterICF3IF3ICF3_Superclass

        Create a new object of the class itkDivideImageFilterICF3IF3ICF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterICF3IF3ICF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterICF3IF3ICF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterICF3IF3ICF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterICF3IF3ICF3_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_Clone, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetInput1, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetConstant1, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_GetConstant1, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetInput2, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetConstant2, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetConstant, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_GetConstant, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_GetConstant2, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_GetFunctor, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_SetFunctor, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_GetPointer, None, itkDivideImageFilterICF3IF3ICF3_Superclass)
itkDivideImageFilterICF3IF3ICF3_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_swigregister
itkDivideImageFilterICF3IF3ICF3_Superclass_swigregister(itkDivideImageFilterICF3IF3ICF3_Superclass)

def itkDivideImageFilterICF3IF3ICF3_Superclass___New_orig__():
    """itkDivideImageFilterICF3IF3ICF3_Superclass___New_orig__() -> itkDivideImageFilterICF3IF3ICF3_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass___New_orig__()

def itkDivideImageFilterICF3IF3ICF3_Superclass_cast(obj):
    """itkDivideImageFilterICF3IF3ICF3_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterICF3IF3ICF3_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Superclass_cast(obj)

class itkDivideImageFilterIF2IF2IF2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    """Proxy of C++ itkDivideImageFilterIF2IF2IF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIF2IF2IF2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIF2IF2IF2_Superclass self) -> itkDivideImageFilterIF2IF2IF2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterIF2IF2IF2_Superclass self, itkImageF2 image1)
        SetInput1(itkDivideImageFilterIF2IF2IF2_Superclass self, itkSimpleDataObjectDecoratorF input1)
        SetInput1(itkDivideImageFilterIF2IF2IF2_Superclass self, float const & input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterIF2IF2IF2_Superclass self, float const & input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterIF2IF2IF2_Superclass self) -> float const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterIF2IF2IF2_Superclass self, itkImageF2 image2)
        SetInput2(itkDivideImageFilterIF2IF2IF2_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkDivideImageFilterIF2IF2IF2_Superclass self, float const & input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterIF2IF2IF2_Superclass self, float const & input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterIF2IF2IF2_Superclass self, float ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterIF2IF2IF2_Superclass self) -> float const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterIF2IF2IF2_Superclass self) -> float const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterIF2IF2IF2_Superclass self) -> itk::Functor::Div< float,float,float >
        GetFunctor(itkDivideImageFilterIF2IF2IF2_Superclass self) -> itk::Functor::Div< float,float,float > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterIF2IF2IF2_Superclass self, itk::Functor::Div< float,float,float > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIF2IF2IF2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIF2IF2IF2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIF2IF2IF2_Superclass self) -> itkDivideImageFilterIF2IF2IF2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIF2IF2IF2_Superclass

        Create a new object of the class itkDivideImageFilterIF2IF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIF2IF2IF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIF2IF2IF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIF2IF2IF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIF2IF2IF2_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_Clone, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetInput1, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetConstant1, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_GetConstant1, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetInput2, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetConstant2, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetConstant, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_GetConstant, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_GetConstant2, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_GetFunctor, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_SetFunctor, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_GetPointer, None, itkDivideImageFilterIF2IF2IF2_Superclass)
itkDivideImageFilterIF2IF2IF2_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_swigregister
itkDivideImageFilterIF2IF2IF2_Superclass_swigregister(itkDivideImageFilterIF2IF2IF2_Superclass)

def itkDivideImageFilterIF2IF2IF2_Superclass___New_orig__():
    """itkDivideImageFilterIF2IF2IF2_Superclass___New_orig__() -> itkDivideImageFilterIF2IF2IF2_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass___New_orig__()

def itkDivideImageFilterIF2IF2IF2_Superclass_cast(obj):
    """itkDivideImageFilterIF2IF2IF2_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterIF2IF2IF2_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Superclass_cast(obj)

class itkDivideImageFilterIF3IF3IF3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    """Proxy of C++ itkDivideImageFilterIF3IF3IF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIF3IF3IF3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIF3IF3IF3_Superclass self) -> itkDivideImageFilterIF3IF3IF3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterIF3IF3IF3_Superclass self, itkImageF3 image1)
        SetInput1(itkDivideImageFilterIF3IF3IF3_Superclass self, itkSimpleDataObjectDecoratorF input1)
        SetInput1(itkDivideImageFilterIF3IF3IF3_Superclass self, float const & input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterIF3IF3IF3_Superclass self, float const & input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterIF3IF3IF3_Superclass self) -> float const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterIF3IF3IF3_Superclass self, itkImageF3 image2)
        SetInput2(itkDivideImageFilterIF3IF3IF3_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkDivideImageFilterIF3IF3IF3_Superclass self, float const & input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterIF3IF3IF3_Superclass self, float const & input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterIF3IF3IF3_Superclass self, float ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterIF3IF3IF3_Superclass self) -> float const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterIF3IF3IF3_Superclass self) -> float const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterIF3IF3IF3_Superclass self) -> itk::Functor::Div< float,float,float >
        GetFunctor(itkDivideImageFilterIF3IF3IF3_Superclass self) -> itk::Functor::Div< float,float,float > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterIF3IF3IF3_Superclass self, itk::Functor::Div< float,float,float > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIF3IF3IF3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIF3IF3IF3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIF3IF3IF3_Superclass self) -> itkDivideImageFilterIF3IF3IF3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIF3IF3IF3_Superclass

        Create a new object of the class itkDivideImageFilterIF3IF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIF3IF3IF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIF3IF3IF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIF3IF3IF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIF3IF3IF3_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_Clone, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetInput1, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetConstant1, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_GetConstant1, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetInput2, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetConstant2, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetConstant, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_GetConstant, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_GetConstant2, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_GetFunctor, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_SetFunctor, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_GetPointer, None, itkDivideImageFilterIF3IF3IF3_Superclass)
itkDivideImageFilterIF3IF3IF3_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_swigregister
itkDivideImageFilterIF3IF3IF3_Superclass_swigregister(itkDivideImageFilterIF3IF3IF3_Superclass)

def itkDivideImageFilterIF3IF3IF3_Superclass___New_orig__():
    """itkDivideImageFilterIF3IF3IF3_Superclass___New_orig__() -> itkDivideImageFilterIF3IF3IF3_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass___New_orig__()

def itkDivideImageFilterIF3IF3IF3_Superclass_cast(obj):
    """itkDivideImageFilterIF3IF3IF3_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterIF3IF3IF3_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Superclass_cast(obj)

class itkDivideImageFilterISS2ISS2ISS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    """Proxy of C++ itkDivideImageFilterISS2ISS2ISS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterISS2ISS2ISS2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterISS2ISS2ISS2_Superclass self) -> itkDivideImageFilterISS2ISS2ISS2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterISS2ISS2ISS2_Superclass self, itkImageSS2 image1)
        SetInput1(itkDivideImageFilterISS2ISS2ISS2_Superclass self, itkSimpleDataObjectDecoratorSS input1)
        SetInput1(itkDivideImageFilterISS2ISS2ISS2_Superclass self, short const & input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterISS2ISS2ISS2_Superclass self, short const & input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterISS2ISS2ISS2_Superclass self) -> short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterISS2ISS2ISS2_Superclass self, itkImageSS2 image2)
        SetInput2(itkDivideImageFilterISS2ISS2ISS2_Superclass self, itkSimpleDataObjectDecoratorSS input2)
        SetInput2(itkDivideImageFilterISS2ISS2ISS2_Superclass self, short const & input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterISS2ISS2ISS2_Superclass self, short const & input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterISS2ISS2ISS2_Superclass self, short ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterISS2ISS2ISS2_Superclass self) -> short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterISS2ISS2ISS2_Superclass self) -> short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterISS2ISS2ISS2_Superclass self) -> itk::Functor::Div< short,short,short >
        GetFunctor(itkDivideImageFilterISS2ISS2ISS2_Superclass self) -> itk::Functor::Div< short,short,short > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterISS2ISS2ISS2_Superclass self, itk::Functor::Div< short,short,short > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterISS2ISS2ISS2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterISS2ISS2ISS2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterISS2ISS2ISS2_Superclass self) -> itkDivideImageFilterISS2ISS2ISS2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterISS2ISS2ISS2_Superclass

        Create a new object of the class itkDivideImageFilterISS2ISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterISS2ISS2ISS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterISS2ISS2ISS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterISS2ISS2ISS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterISS2ISS2ISS2_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_Clone, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetInput1, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetConstant1, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_GetConstant1, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetInput2, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetConstant2, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetConstant, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_GetConstant, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_GetConstant2, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_GetFunctor, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_SetFunctor, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_GetPointer, None, itkDivideImageFilterISS2ISS2ISS2_Superclass)
itkDivideImageFilterISS2ISS2ISS2_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_swigregister
itkDivideImageFilterISS2ISS2ISS2_Superclass_swigregister(itkDivideImageFilterISS2ISS2ISS2_Superclass)

def itkDivideImageFilterISS2ISS2ISS2_Superclass___New_orig__():
    """itkDivideImageFilterISS2ISS2ISS2_Superclass___New_orig__() -> itkDivideImageFilterISS2ISS2ISS2_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass___New_orig__()

def itkDivideImageFilterISS2ISS2ISS2_Superclass_cast(obj):
    """itkDivideImageFilterISS2ISS2ISS2_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterISS2ISS2ISS2_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Superclass_cast(obj)

class itkDivideImageFilterISS3ISS3ISS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    """Proxy of C++ itkDivideImageFilterISS3ISS3ISS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterISS3ISS3ISS3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterISS3ISS3ISS3_Superclass self) -> itkDivideImageFilterISS3ISS3ISS3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterISS3ISS3ISS3_Superclass self, itkImageSS3 image1)
        SetInput1(itkDivideImageFilterISS3ISS3ISS3_Superclass self, itkSimpleDataObjectDecoratorSS input1)
        SetInput1(itkDivideImageFilterISS3ISS3ISS3_Superclass self, short const & input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterISS3ISS3ISS3_Superclass self, short const & input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterISS3ISS3ISS3_Superclass self) -> short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterISS3ISS3ISS3_Superclass self, itkImageSS3 image2)
        SetInput2(itkDivideImageFilterISS3ISS3ISS3_Superclass self, itkSimpleDataObjectDecoratorSS input2)
        SetInput2(itkDivideImageFilterISS3ISS3ISS3_Superclass self, short const & input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterISS3ISS3ISS3_Superclass self, short const & input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterISS3ISS3ISS3_Superclass self, short ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterISS3ISS3ISS3_Superclass self) -> short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterISS3ISS3ISS3_Superclass self) -> short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterISS3ISS3ISS3_Superclass self) -> itk::Functor::Div< short,short,short >
        GetFunctor(itkDivideImageFilterISS3ISS3ISS3_Superclass self) -> itk::Functor::Div< short,short,short > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterISS3ISS3ISS3_Superclass self, itk::Functor::Div< short,short,short > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterISS3ISS3ISS3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterISS3ISS3ISS3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterISS3ISS3ISS3_Superclass self) -> itkDivideImageFilterISS3ISS3ISS3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterISS3ISS3ISS3_Superclass

        Create a new object of the class itkDivideImageFilterISS3ISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterISS3ISS3ISS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterISS3ISS3ISS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterISS3ISS3ISS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterISS3ISS3ISS3_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_Clone, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetInput1, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetConstant1, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_GetConstant1, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetInput2, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetConstant2, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetConstant, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_GetConstant, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_GetConstant2, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_GetFunctor, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_SetFunctor, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_GetPointer, None, itkDivideImageFilterISS3ISS3ISS3_Superclass)
itkDivideImageFilterISS3ISS3ISS3_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_swigregister
itkDivideImageFilterISS3ISS3ISS3_Superclass_swigregister(itkDivideImageFilterISS3ISS3ISS3_Superclass)

def itkDivideImageFilterISS3ISS3ISS3_Superclass___New_orig__():
    """itkDivideImageFilterISS3ISS3ISS3_Superclass___New_orig__() -> itkDivideImageFilterISS3ISS3ISS3_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass___New_orig__()

def itkDivideImageFilterISS3ISS3ISS3_Superclass_cast(obj):
    """itkDivideImageFilterISS3ISS3ISS3_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterISS3ISS3ISS3_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Superclass_cast(obj)

class itkDivideImageFilterIUC2IUC2IUC2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    """Proxy of C++ itkDivideImageFilterIUC2IUC2IUC2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIUC2IUC2IUC2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIUC2IUC2IUC2_Superclass self) -> itkDivideImageFilterIUC2IUC2IUC2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterIUC2IUC2IUC2_Superclass self, itkImageUC2 image1)
        SetInput1(itkDivideImageFilterIUC2IUC2IUC2_Superclass self, itkSimpleDataObjectDecoratorUC input1)
        SetInput1(itkDivideImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterIUC2IUC2IUC2_Superclass self) -> unsigned char const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterIUC2IUC2IUC2_Superclass self, itkImageUC2 image2)
        SetInput2(itkDivideImageFilterIUC2IUC2IUC2_Superclass self, itkSimpleDataObjectDecoratorUC input2)
        SetInput2(itkDivideImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterIUC2IUC2IUC2_Superclass self, unsigned char const & input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterIUC2IUC2IUC2_Superclass self, unsigned char ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterIUC2IUC2IUC2_Superclass self) -> unsigned char const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterIUC2IUC2IUC2_Superclass self) -> unsigned char const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterIUC2IUC2IUC2_Superclass self) -> itk::Functor::Div< unsigned char,unsigned char,unsigned char >
        GetFunctor(itkDivideImageFilterIUC2IUC2IUC2_Superclass self) -> itk::Functor::Div< unsigned char,unsigned char,unsigned char > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterIUC2IUC2IUC2_Superclass self, itk::Functor::Div< unsigned char,unsigned char,unsigned char > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIUC2IUC2IUC2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIUC2IUC2IUC2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIUC2IUC2IUC2_Superclass self) -> itkDivideImageFilterIUC2IUC2IUC2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIUC2IUC2IUC2_Superclass

        Create a new object of the class itkDivideImageFilterIUC2IUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIUC2IUC2IUC2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIUC2IUC2IUC2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIUC2IUC2IUC2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIUC2IUC2IUC2_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_Clone, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetInput1, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetConstant1, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_GetConstant1, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetInput2, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetConstant2, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetConstant, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_GetConstant, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_GetConstant2, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_GetFunctor, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_SetFunctor, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_GetPointer, None, itkDivideImageFilterIUC2IUC2IUC2_Superclass)
itkDivideImageFilterIUC2IUC2IUC2_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_swigregister
itkDivideImageFilterIUC2IUC2IUC2_Superclass_swigregister(itkDivideImageFilterIUC2IUC2IUC2_Superclass)

def itkDivideImageFilterIUC2IUC2IUC2_Superclass___New_orig__():
    """itkDivideImageFilterIUC2IUC2IUC2_Superclass___New_orig__() -> itkDivideImageFilterIUC2IUC2IUC2_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass___New_orig__()

def itkDivideImageFilterIUC2IUC2IUC2_Superclass_cast(obj):
    """itkDivideImageFilterIUC2IUC2IUC2_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterIUC2IUC2IUC2_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Superclass_cast(obj)

class itkDivideImageFilterIUC3IUC3IUC3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    """Proxy of C++ itkDivideImageFilterIUC3IUC3IUC3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIUC3IUC3IUC3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIUC3IUC3IUC3_Superclass self) -> itkDivideImageFilterIUC3IUC3IUC3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterIUC3IUC3IUC3_Superclass self, itkImageUC3 image1)
        SetInput1(itkDivideImageFilterIUC3IUC3IUC3_Superclass self, itkSimpleDataObjectDecoratorUC input1)
        SetInput1(itkDivideImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterIUC3IUC3IUC3_Superclass self) -> unsigned char const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterIUC3IUC3IUC3_Superclass self, itkImageUC3 image2)
        SetInput2(itkDivideImageFilterIUC3IUC3IUC3_Superclass self, itkSimpleDataObjectDecoratorUC input2)
        SetInput2(itkDivideImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterIUC3IUC3IUC3_Superclass self, unsigned char const & input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterIUC3IUC3IUC3_Superclass self, unsigned char ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterIUC3IUC3IUC3_Superclass self) -> unsigned char const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterIUC3IUC3IUC3_Superclass self) -> unsigned char const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterIUC3IUC3IUC3_Superclass self) -> itk::Functor::Div< unsigned char,unsigned char,unsigned char >
        GetFunctor(itkDivideImageFilterIUC3IUC3IUC3_Superclass self) -> itk::Functor::Div< unsigned char,unsigned char,unsigned char > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterIUC3IUC3IUC3_Superclass self, itk::Functor::Div< unsigned char,unsigned char,unsigned char > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIUC3IUC3IUC3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIUC3IUC3IUC3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIUC3IUC3IUC3_Superclass self) -> itkDivideImageFilterIUC3IUC3IUC3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIUC3IUC3IUC3_Superclass

        Create a new object of the class itkDivideImageFilterIUC3IUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIUC3IUC3IUC3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIUC3IUC3IUC3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIUC3IUC3IUC3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIUC3IUC3IUC3_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_Clone, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetInput1, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetConstant1, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_GetConstant1, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetInput2, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetConstant2, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetConstant, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_GetConstant, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_GetConstant2, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_GetFunctor, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_SetFunctor, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_GetPointer, None, itkDivideImageFilterIUC3IUC3IUC3_Superclass)
itkDivideImageFilterIUC3IUC3IUC3_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_swigregister
itkDivideImageFilterIUC3IUC3IUC3_Superclass_swigregister(itkDivideImageFilterIUC3IUC3IUC3_Superclass)

def itkDivideImageFilterIUC3IUC3IUC3_Superclass___New_orig__():
    """itkDivideImageFilterIUC3IUC3IUC3_Superclass___New_orig__() -> itkDivideImageFilterIUC3IUC3IUC3_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass___New_orig__()

def itkDivideImageFilterIUC3IUC3IUC3_Superclass_cast(obj):
    """itkDivideImageFilterIUC3IUC3IUC3_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterIUC3IUC3IUC3_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Superclass_cast(obj)

class itkDivideImageFilterIUS2IUS2IUS2_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    """Proxy of C++ itkDivideImageFilterIUS2IUS2IUS2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIUS2IUS2IUS2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIUS2IUS2IUS2_Superclass self) -> itkDivideImageFilterIUS2IUS2IUS2_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterIUS2IUS2IUS2_Superclass self, itkImageUS2 image1)
        SetInput1(itkDivideImageFilterIUS2IUS2IUS2_Superclass self, itkSimpleDataObjectDecoratorUS input1)
        SetInput1(itkDivideImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterIUS2IUS2IUS2_Superclass self) -> unsigned short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterIUS2IUS2IUS2_Superclass self, itkImageUS2 image2)
        SetInput2(itkDivideImageFilterIUS2IUS2IUS2_Superclass self, itkSimpleDataObjectDecoratorUS input2)
        SetInput2(itkDivideImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterIUS2IUS2IUS2_Superclass self, unsigned short const & input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterIUS2IUS2IUS2_Superclass self, unsigned short ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterIUS2IUS2IUS2_Superclass self) -> unsigned short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterIUS2IUS2IUS2_Superclass self) -> unsigned short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterIUS2IUS2IUS2_Superclass self) -> itk::Functor::Div< unsigned short,unsigned short,unsigned short >
        GetFunctor(itkDivideImageFilterIUS2IUS2IUS2_Superclass self) -> itk::Functor::Div< unsigned short,unsigned short,unsigned short > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterIUS2IUS2IUS2_Superclass self, itk::Functor::Div< unsigned short,unsigned short,unsigned short > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIUS2IUS2IUS2_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIUS2IUS2IUS2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIUS2IUS2IUS2_Superclass self) -> itkDivideImageFilterIUS2IUS2IUS2_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIUS2IUS2IUS2_Superclass

        Create a new object of the class itkDivideImageFilterIUS2IUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIUS2IUS2IUS2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIUS2IUS2IUS2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIUS2IUS2IUS2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIUS2IUS2IUS2_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_Clone, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetInput1, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetConstant1, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_GetConstant1, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetInput2, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetConstant2, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetConstant, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_GetConstant, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_GetConstant2, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_GetFunctor, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_SetFunctor, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_GetPointer, None, itkDivideImageFilterIUS2IUS2IUS2_Superclass)
itkDivideImageFilterIUS2IUS2IUS2_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_swigregister
itkDivideImageFilterIUS2IUS2IUS2_Superclass_swigregister(itkDivideImageFilterIUS2IUS2IUS2_Superclass)

def itkDivideImageFilterIUS2IUS2IUS2_Superclass___New_orig__():
    """itkDivideImageFilterIUS2IUS2IUS2_Superclass___New_orig__() -> itkDivideImageFilterIUS2IUS2IUS2_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass___New_orig__()

def itkDivideImageFilterIUS2IUS2IUS2_Superclass_cast(obj):
    """itkDivideImageFilterIUS2IUS2IUS2_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterIUS2IUS2IUS2_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Superclass_cast(obj)

class itkDivideImageFilterIUS3IUS3IUS3_Superclass(itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    """Proxy of C++ itkDivideImageFilterIUS3IUS3IUS3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIUS3IUS3IUS3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIUS3IUS3IUS3_Superclass self) -> itkDivideImageFilterIUS3IUS3IUS3_Superclass_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_Clone(self)


    def SetInput1(self, *args):
        """
        SetInput1(itkDivideImageFilterIUS3IUS3IUS3_Superclass self, itkImageUS3 image1)
        SetInput1(itkDivideImageFilterIUS3IUS3IUS3_Superclass self, itkSimpleDataObjectDecoratorUS input1)
        SetInput1(itkDivideImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input1)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1):
        """SetConstant1(itkDivideImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input1)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self):
        """GetConstant1(itkDivideImageFilterIUS3IUS3IUS3_Superclass self) -> unsigned short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_GetConstant1(self)


    def SetInput2(self, *args):
        """
        SetInput2(itkDivideImageFilterIUS3IUS3IUS3_Superclass self, itkImageUS3 image2)
        SetInput2(itkDivideImageFilterIUS3IUS3IUS3_Superclass self, itkSimpleDataObjectDecoratorUS input2)
        SetInput2(itkDivideImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input2)
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2):
        """SetConstant2(itkDivideImageFilterIUS3IUS3IUS3_Superclass self, unsigned short const & input2)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct):
        """SetConstant(itkDivideImageFilterIUS3IUS3IUS3_Superclass self, unsigned short ct)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetConstant(self, ct)


    def GetConstant(self):
        """GetConstant(itkDivideImageFilterIUS3IUS3IUS3_Superclass self) -> unsigned short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_GetConstant(self)


    def GetConstant2(self):
        """GetConstant2(itkDivideImageFilterIUS3IUS3IUS3_Superclass self) -> unsigned short const &"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args):
        """
        GetFunctor(itkDivideImageFilterIUS3IUS3IUS3_Superclass self) -> itk::Functor::Div< unsigned short,unsigned short,unsigned short >
        GetFunctor(itkDivideImageFilterIUS3IUS3IUS3_Superclass self) -> itk::Functor::Div< unsigned short,unsigned short,unsigned short > const &
        """
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor):
        """SetFunctor(itkDivideImageFilterIUS3IUS3IUS3_Superclass self, itk::Functor::Div< unsigned short,unsigned short,unsigned short > const & functor)"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIUS3IUS3IUS3_Superclass

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIUS3IUS3IUS3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIUS3IUS3IUS3_Superclass self) -> itkDivideImageFilterIUS3IUS3IUS3_Superclass"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIUS3IUS3IUS3_Superclass

        Create a new object of the class itkDivideImageFilterIUS3IUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIUS3IUS3IUS3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIUS3IUS3IUS3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIUS3IUS3IUS3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIUS3IUS3IUS3_Superclass.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_Clone, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass.SetInput1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetInput1, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass.SetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetConstant1, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass.GetConstant1 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_GetConstant1, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass.SetInput2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetInput2, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass.SetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetConstant2, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass.SetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetConstant, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass.GetConstant = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_GetConstant, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass.GetConstant2 = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_GetConstant2, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass.GetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_GetFunctor, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass.SetFunctor = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_SetFunctor, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_GetPointer, None, itkDivideImageFilterIUS3IUS3IUS3_Superclass)
itkDivideImageFilterIUS3IUS3IUS3_Superclass_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_swigregister
itkDivideImageFilterIUS3IUS3IUS3_Superclass_swigregister(itkDivideImageFilterIUS3IUS3IUS3_Superclass)

def itkDivideImageFilterIUS3IUS3IUS3_Superclass___New_orig__():
    """itkDivideImageFilterIUS3IUS3IUS3_Superclass___New_orig__() -> itkDivideImageFilterIUS3IUS3IUS3_Superclass_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass___New_orig__()

def itkDivideImageFilterIUS3IUS3IUS3_Superclass_cast(obj):
    """itkDivideImageFilterIUS3IUS3IUS3_Superclass_cast(itkLightObject obj) -> itkDivideImageFilterIUS3IUS3IUS3_Superclass"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Superclass_cast(obj)

class itkDivideImageFilterICF2ICF2ICF2(itkDivideImageFilterICF2ICF2ICF2_Superclass):
    """Proxy of C++ itkDivideImageFilterICF2ICF2ICF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterICF2ICF2ICF2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterICF2ICF2ICF2 self) -> itkDivideImageFilterICF2ICF2ICF2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterICF2ICF2ICF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterICF2ICF2ICF2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterICF2ICF2ICF2 self) -> itkDivideImageFilterICF2ICF2ICF2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterICF2ICF2ICF2

        Create a new object of the class itkDivideImageFilterICF2ICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterICF2ICF2ICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterICF2ICF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterICF2ICF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterICF2ICF2ICF2.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_Clone, None, itkDivideImageFilterICF2ICF2ICF2)
itkDivideImageFilterICF2ICF2ICF2.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_GetPointer, None, itkDivideImageFilterICF2ICF2ICF2)
itkDivideImageFilterICF2ICF2ICF2_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_swigregister
itkDivideImageFilterICF2ICF2ICF2_swigregister(itkDivideImageFilterICF2ICF2ICF2)

def itkDivideImageFilterICF2ICF2ICF2___New_orig__():
    """itkDivideImageFilterICF2ICF2ICF2___New_orig__() -> itkDivideImageFilterICF2ICF2ICF2_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2___New_orig__()

def itkDivideImageFilterICF2ICF2ICF2_cast(obj):
    """itkDivideImageFilterICF2ICF2ICF2_cast(itkLightObject obj) -> itkDivideImageFilterICF2ICF2ICF2"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF2ICF2ICF2_cast(obj)

class itkDivideImageFilterICF2IF2ICF2(itkDivideImageFilterICF2IF2ICF2_Superclass):
    """Proxy of C++ itkDivideImageFilterICF2IF2ICF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterICF2IF2ICF2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterICF2IF2ICF2 self) -> itkDivideImageFilterICF2IF2ICF2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterICF2IF2ICF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterICF2IF2ICF2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterICF2IF2ICF2 self) -> itkDivideImageFilterICF2IF2ICF2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterICF2IF2ICF2

        Create a new object of the class itkDivideImageFilterICF2IF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterICF2IF2ICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterICF2IF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterICF2IF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterICF2IF2ICF2.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_Clone, None, itkDivideImageFilterICF2IF2ICF2)
itkDivideImageFilterICF2IF2ICF2.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_GetPointer, None, itkDivideImageFilterICF2IF2ICF2)
itkDivideImageFilterICF2IF2ICF2_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_swigregister
itkDivideImageFilterICF2IF2ICF2_swigregister(itkDivideImageFilterICF2IF2ICF2)

def itkDivideImageFilterICF2IF2ICF2___New_orig__():
    """itkDivideImageFilterICF2IF2ICF2___New_orig__() -> itkDivideImageFilterICF2IF2ICF2_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2___New_orig__()

def itkDivideImageFilterICF2IF2ICF2_cast(obj):
    """itkDivideImageFilterICF2IF2ICF2_cast(itkLightObject obj) -> itkDivideImageFilterICF2IF2ICF2"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF2IF2ICF2_cast(obj)

class itkDivideImageFilterICF3ICF3ICF3(itkDivideImageFilterICF3ICF3ICF3_Superclass):
    """Proxy of C++ itkDivideImageFilterICF3ICF3ICF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterICF3ICF3ICF3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterICF3ICF3ICF3 self) -> itkDivideImageFilterICF3ICF3ICF3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterICF3ICF3ICF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterICF3ICF3ICF3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterICF3ICF3ICF3 self) -> itkDivideImageFilterICF3ICF3ICF3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterICF3ICF3ICF3

        Create a new object of the class itkDivideImageFilterICF3ICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterICF3ICF3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterICF3ICF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterICF3ICF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterICF3ICF3ICF3.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_Clone, None, itkDivideImageFilterICF3ICF3ICF3)
itkDivideImageFilterICF3ICF3ICF3.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_GetPointer, None, itkDivideImageFilterICF3ICF3ICF3)
itkDivideImageFilterICF3ICF3ICF3_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_swigregister
itkDivideImageFilterICF3ICF3ICF3_swigregister(itkDivideImageFilterICF3ICF3ICF3)

def itkDivideImageFilterICF3ICF3ICF3___New_orig__():
    """itkDivideImageFilterICF3ICF3ICF3___New_orig__() -> itkDivideImageFilterICF3ICF3ICF3_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3___New_orig__()

def itkDivideImageFilterICF3ICF3ICF3_cast(obj):
    """itkDivideImageFilterICF3ICF3ICF3_cast(itkLightObject obj) -> itkDivideImageFilterICF3ICF3ICF3"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF3ICF3ICF3_cast(obj)

class itkDivideImageFilterICF3IF3ICF3(itkDivideImageFilterICF3IF3ICF3_Superclass):
    """Proxy of C++ itkDivideImageFilterICF3IF3ICF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterICF3IF3ICF3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterICF3IF3ICF3 self) -> itkDivideImageFilterICF3IF3ICF3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterICF3IF3ICF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterICF3IF3ICF3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterICF3IF3ICF3 self) -> itkDivideImageFilterICF3IF3ICF3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterICF3IF3ICF3

        Create a new object of the class itkDivideImageFilterICF3IF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterICF3IF3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterICF3IF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterICF3IF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterICF3IF3ICF3.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_Clone, None, itkDivideImageFilterICF3IF3ICF3)
itkDivideImageFilterICF3IF3ICF3.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_GetPointer, None, itkDivideImageFilterICF3IF3ICF3)
itkDivideImageFilterICF3IF3ICF3_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_swigregister
itkDivideImageFilterICF3IF3ICF3_swigregister(itkDivideImageFilterICF3IF3ICF3)

def itkDivideImageFilterICF3IF3ICF3___New_orig__():
    """itkDivideImageFilterICF3IF3ICF3___New_orig__() -> itkDivideImageFilterICF3IF3ICF3_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3___New_orig__()

def itkDivideImageFilterICF3IF3ICF3_cast(obj):
    """itkDivideImageFilterICF3IF3ICF3_cast(itkLightObject obj) -> itkDivideImageFilterICF3IF3ICF3"""
    return _itkDivideImageFilterPython.itkDivideImageFilterICF3IF3ICF3_cast(obj)

class itkDivideImageFilterIF2IF2IF2(itkDivideImageFilterIF2IF2IF2_Superclass):
    """Proxy of C++ itkDivideImageFilterIF2IF2IF2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIF2IF2IF2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIF2IF2IF2 self) -> itkDivideImageFilterIF2IF2IF2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIF2IF2IF2

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIF2IF2IF2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIF2IF2IF2 self) -> itkDivideImageFilterIF2IF2IF2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIF2IF2IF2

        Create a new object of the class itkDivideImageFilterIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIF2IF2IF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIF2IF2IF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIF2IF2IF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIF2IF2IF2.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_Clone, None, itkDivideImageFilterIF2IF2IF2)
itkDivideImageFilterIF2IF2IF2.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_GetPointer, None, itkDivideImageFilterIF2IF2IF2)
itkDivideImageFilterIF2IF2IF2_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_swigregister
itkDivideImageFilterIF2IF2IF2_swigregister(itkDivideImageFilterIF2IF2IF2)

def itkDivideImageFilterIF2IF2IF2___New_orig__():
    """itkDivideImageFilterIF2IF2IF2___New_orig__() -> itkDivideImageFilterIF2IF2IF2_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2___New_orig__()

def itkDivideImageFilterIF2IF2IF2_cast(obj):
    """itkDivideImageFilterIF2IF2IF2_cast(itkLightObject obj) -> itkDivideImageFilterIF2IF2IF2"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIF2IF2IF2_cast(obj)

class itkDivideImageFilterIF3IF3IF3(itkDivideImageFilterIF3IF3IF3_Superclass):
    """Proxy of C++ itkDivideImageFilterIF3IF3IF3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIF3IF3IF3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIF3IF3IF3 self) -> itkDivideImageFilterIF3IF3IF3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIF3IF3IF3

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIF3IF3IF3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIF3IF3IF3 self) -> itkDivideImageFilterIF3IF3IF3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIF3IF3IF3

        Create a new object of the class itkDivideImageFilterIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIF3IF3IF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIF3IF3IF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIF3IF3IF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIF3IF3IF3.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_Clone, None, itkDivideImageFilterIF3IF3IF3)
itkDivideImageFilterIF3IF3IF3.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_GetPointer, None, itkDivideImageFilterIF3IF3IF3)
itkDivideImageFilterIF3IF3IF3_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_swigregister
itkDivideImageFilterIF3IF3IF3_swigregister(itkDivideImageFilterIF3IF3IF3)

def itkDivideImageFilterIF3IF3IF3___New_orig__():
    """itkDivideImageFilterIF3IF3IF3___New_orig__() -> itkDivideImageFilterIF3IF3IF3_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3___New_orig__()

def itkDivideImageFilterIF3IF3IF3_cast(obj):
    """itkDivideImageFilterIF3IF3IF3_cast(itkLightObject obj) -> itkDivideImageFilterIF3IF3IF3"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIF3IF3IF3_cast(obj)

class itkDivideImageFilterISS2ISS2ISS2(itkDivideImageFilterISS2ISS2ISS2_Superclass):
    """Proxy of C++ itkDivideImageFilterISS2ISS2ISS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterISS2ISS2ISS2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterISS2ISS2ISS2 self) -> itkDivideImageFilterISS2ISS2ISS2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterISS2ISS2ISS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterISS2ISS2ISS2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterISS2ISS2ISS2 self) -> itkDivideImageFilterISS2ISS2ISS2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterISS2ISS2ISS2

        Create a new object of the class itkDivideImageFilterISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterISS2ISS2ISS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterISS2ISS2ISS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterISS2ISS2ISS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterISS2ISS2ISS2.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_Clone, None, itkDivideImageFilterISS2ISS2ISS2)
itkDivideImageFilterISS2ISS2ISS2.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_GetPointer, None, itkDivideImageFilterISS2ISS2ISS2)
itkDivideImageFilterISS2ISS2ISS2_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_swigregister
itkDivideImageFilterISS2ISS2ISS2_swigregister(itkDivideImageFilterISS2ISS2ISS2)

def itkDivideImageFilterISS2ISS2ISS2___New_orig__():
    """itkDivideImageFilterISS2ISS2ISS2___New_orig__() -> itkDivideImageFilterISS2ISS2ISS2_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2___New_orig__()

def itkDivideImageFilterISS2ISS2ISS2_cast(obj):
    """itkDivideImageFilterISS2ISS2ISS2_cast(itkLightObject obj) -> itkDivideImageFilterISS2ISS2ISS2"""
    return _itkDivideImageFilterPython.itkDivideImageFilterISS2ISS2ISS2_cast(obj)

class itkDivideImageFilterISS3ISS3ISS3(itkDivideImageFilterISS3ISS3ISS3_Superclass):
    """Proxy of C++ itkDivideImageFilterISS3ISS3ISS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterISS3ISS3ISS3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterISS3ISS3ISS3 self) -> itkDivideImageFilterISS3ISS3ISS3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterISS3ISS3ISS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterISS3ISS3ISS3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterISS3ISS3ISS3 self) -> itkDivideImageFilterISS3ISS3ISS3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterISS3ISS3ISS3

        Create a new object of the class itkDivideImageFilterISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterISS3ISS3ISS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterISS3ISS3ISS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterISS3ISS3ISS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterISS3ISS3ISS3.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_Clone, None, itkDivideImageFilterISS3ISS3ISS3)
itkDivideImageFilterISS3ISS3ISS3.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_GetPointer, None, itkDivideImageFilterISS3ISS3ISS3)
itkDivideImageFilterISS3ISS3ISS3_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_swigregister
itkDivideImageFilterISS3ISS3ISS3_swigregister(itkDivideImageFilterISS3ISS3ISS3)

def itkDivideImageFilterISS3ISS3ISS3___New_orig__():
    """itkDivideImageFilterISS3ISS3ISS3___New_orig__() -> itkDivideImageFilterISS3ISS3ISS3_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3___New_orig__()

def itkDivideImageFilterISS3ISS3ISS3_cast(obj):
    """itkDivideImageFilterISS3ISS3ISS3_cast(itkLightObject obj) -> itkDivideImageFilterISS3ISS3ISS3"""
    return _itkDivideImageFilterPython.itkDivideImageFilterISS3ISS3ISS3_cast(obj)

class itkDivideImageFilterIUC2IUC2IUC2(itkDivideImageFilterIUC2IUC2IUC2_Superclass):
    """Proxy of C++ itkDivideImageFilterIUC2IUC2IUC2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIUC2IUC2IUC2 self) -> itkDivideImageFilterIUC2IUC2IUC2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIUC2IUC2IUC2

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIUC2IUC2IUC2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIUC2IUC2IUC2 self) -> itkDivideImageFilterIUC2IUC2IUC2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIUC2IUC2IUC2

        Create a new object of the class itkDivideImageFilterIUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIUC2IUC2IUC2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIUC2IUC2IUC2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIUC2IUC2IUC2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIUC2IUC2IUC2.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_Clone, None, itkDivideImageFilterIUC2IUC2IUC2)
itkDivideImageFilterIUC2IUC2IUC2.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_GetPointer, None, itkDivideImageFilterIUC2IUC2IUC2)
itkDivideImageFilterIUC2IUC2IUC2_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_swigregister
itkDivideImageFilterIUC2IUC2IUC2_swigregister(itkDivideImageFilterIUC2IUC2IUC2)

def itkDivideImageFilterIUC2IUC2IUC2___New_orig__():
    """itkDivideImageFilterIUC2IUC2IUC2___New_orig__() -> itkDivideImageFilterIUC2IUC2IUC2_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2___New_orig__()

def itkDivideImageFilterIUC2IUC2IUC2_cast(obj):
    """itkDivideImageFilterIUC2IUC2IUC2_cast(itkLightObject obj) -> itkDivideImageFilterIUC2IUC2IUC2"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUC2IUC2IUC2_cast(obj)

class itkDivideImageFilterIUC3IUC3IUC3(itkDivideImageFilterIUC3IUC3IUC3_Superclass):
    """Proxy of C++ itkDivideImageFilterIUC3IUC3IUC3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIUC3IUC3IUC3 self) -> itkDivideImageFilterIUC3IUC3IUC3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIUC3IUC3IUC3

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIUC3IUC3IUC3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIUC3IUC3IUC3 self) -> itkDivideImageFilterIUC3IUC3IUC3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIUC3IUC3IUC3

        Create a new object of the class itkDivideImageFilterIUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIUC3IUC3IUC3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIUC3IUC3IUC3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIUC3IUC3IUC3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIUC3IUC3IUC3.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_Clone, None, itkDivideImageFilterIUC3IUC3IUC3)
itkDivideImageFilterIUC3IUC3IUC3.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_GetPointer, None, itkDivideImageFilterIUC3IUC3IUC3)
itkDivideImageFilterIUC3IUC3IUC3_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_swigregister
itkDivideImageFilterIUC3IUC3IUC3_swigregister(itkDivideImageFilterIUC3IUC3IUC3)

def itkDivideImageFilterIUC3IUC3IUC3___New_orig__():
    """itkDivideImageFilterIUC3IUC3IUC3___New_orig__() -> itkDivideImageFilterIUC3IUC3IUC3_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3___New_orig__()

def itkDivideImageFilterIUC3IUC3IUC3_cast(obj):
    """itkDivideImageFilterIUC3IUC3IUC3_cast(itkLightObject obj) -> itkDivideImageFilterIUC3IUC3IUC3"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUC3IUC3IUC3_cast(obj)

class itkDivideImageFilterIUS2IUS2IUS2(itkDivideImageFilterIUS2IUS2IUS2_Superclass):
    """Proxy of C++ itkDivideImageFilterIUS2IUS2IUS2 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIUS2IUS2IUS2 self) -> itkDivideImageFilterIUS2IUS2IUS2_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIUS2IUS2IUS2

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIUS2IUS2IUS2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIUS2IUS2IUS2 self) -> itkDivideImageFilterIUS2IUS2IUS2"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIUS2IUS2IUS2

        Create a new object of the class itkDivideImageFilterIUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIUS2IUS2IUS2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIUS2IUS2IUS2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIUS2IUS2IUS2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIUS2IUS2IUS2.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_Clone, None, itkDivideImageFilterIUS2IUS2IUS2)
itkDivideImageFilterIUS2IUS2IUS2.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_GetPointer, None, itkDivideImageFilterIUS2IUS2IUS2)
itkDivideImageFilterIUS2IUS2IUS2_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_swigregister
itkDivideImageFilterIUS2IUS2IUS2_swigregister(itkDivideImageFilterIUS2IUS2IUS2)

def itkDivideImageFilterIUS2IUS2IUS2___New_orig__():
    """itkDivideImageFilterIUS2IUS2IUS2___New_orig__() -> itkDivideImageFilterIUS2IUS2IUS2_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2___New_orig__()

def itkDivideImageFilterIUS2IUS2IUS2_cast(obj):
    """itkDivideImageFilterIUS2IUS2IUS2_cast(itkLightObject obj) -> itkDivideImageFilterIUS2IUS2IUS2"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUS2IUS2IUS2_cast(obj)

class itkDivideImageFilterIUS3IUS3IUS3(itkDivideImageFilterIUS3IUS3IUS3_Superclass):
    """Proxy of C++ itkDivideImageFilterIUS3IUS3IUS3 class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__():
        """__New_orig__() -> itkDivideImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self):
        """Clone(itkDivideImageFilterIUS3IUS3IUS3 self) -> itkDivideImageFilterIUS3IUS3IUS3_Pointer"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Clone(self)

    IntConvertibleToInput2Check = _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_IntConvertibleToInput2Check
    Input1Input2OutputDivisionOperatorsCheck = _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Input1Input2OutputDivisionOperatorsCheck
    __swig_destroy__ = _itkDivideImageFilterPython.delete_itkDivideImageFilterIUS3IUS3IUS3

    def cast(obj):
        """cast(itkLightObject obj) -> itkDivideImageFilterIUS3IUS3IUS3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self):
        """GetPointer(itkDivideImageFilterIUS3IUS3IUS3 self) -> itkDivideImageFilterIUS3IUS3IUS3"""
        return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkDivideImageFilterIUS3IUS3IUS3

        Create a new object of the class itkDivideImageFilterIUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkDivideImageFilterIUS3IUS3IUS3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkDivideImageFilterIUS3IUS3IUS3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkDivideImageFilterIUS3IUS3IUS3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkDivideImageFilterIUS3IUS3IUS3.Clone = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_Clone, None, itkDivideImageFilterIUS3IUS3IUS3)
itkDivideImageFilterIUS3IUS3IUS3.GetPointer = new_instancemethod(_itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_GetPointer, None, itkDivideImageFilterIUS3IUS3IUS3)
itkDivideImageFilterIUS3IUS3IUS3_swigregister = _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_swigregister
itkDivideImageFilterIUS3IUS3IUS3_swigregister(itkDivideImageFilterIUS3IUS3IUS3)

def itkDivideImageFilterIUS3IUS3IUS3___New_orig__():
    """itkDivideImageFilterIUS3IUS3IUS3___New_orig__() -> itkDivideImageFilterIUS3IUS3IUS3_Pointer"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3___New_orig__()

def itkDivideImageFilterIUS3IUS3IUS3_cast(obj):
    """itkDivideImageFilterIUS3IUS3IUS3_cast(itkLightObject obj) -> itkDivideImageFilterIUS3IUS3IUS3"""
    return _itkDivideImageFilterPython.itkDivideImageFilterIUS3IUS3IUS3_cast(obj)



