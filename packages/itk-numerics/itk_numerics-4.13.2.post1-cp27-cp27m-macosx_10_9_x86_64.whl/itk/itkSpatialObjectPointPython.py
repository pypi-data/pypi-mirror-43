# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkSpatialObjectPointPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkSpatialObjectPointPython', [dirname(__file__)])
        except ImportError:
            import _itkSpatialObjectPointPython
            return _itkSpatialObjectPointPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkSpatialObjectPointPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkSpatialObjectPointPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkSpatialObjectPointPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkRGBAPixelPython
import itkFixedArrayPython
import pyBasePython
import itkPointPython
import itkVectorPython
import vnl_vectorPython
import stdcomplexPython
import vnl_matrixPython
import vnl_vector_refPython
import ITKCommonBasePython
class vectoritkSpatialObjectPoint2(object):
    """Proxy of C++ std::vector<(itkSpatialObjectPoint2)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def iterator(self):
        """iterator(vectoritkSpatialObjectPoint2 self) -> SwigPyIterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_iterator(self)

    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        """__nonzero__(vectoritkSpatialObjectPoint2 self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___nonzero__(self)


    def __bool__(self):
        """__bool__(vectoritkSpatialObjectPoint2 self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___bool__(self)


    def __len__(self):
        """__len__(vectoritkSpatialObjectPoint2 self) -> std::vector< itkSpatialObjectPoint2 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___len__(self)


    def __getslice__(self, i, j):
        """__getslice__(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::difference_type i, std::vector< itkSpatialObjectPoint2 >::difference_type j) -> vectoritkSpatialObjectPoint2"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___getslice__(self, i, j)


    def __setslice__(self, *args):
        """
        __setslice__(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::difference_type i, std::vector< itkSpatialObjectPoint2 >::difference_type j)
        __setslice__(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::difference_type i, std::vector< itkSpatialObjectPoint2 >::difference_type j, vectoritkSpatialObjectPoint2 v)
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___setslice__(self, *args)


    def __delslice__(self, i, j):
        """__delslice__(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::difference_type i, std::vector< itkSpatialObjectPoint2 >::difference_type j)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___delslice__(self, i, j)


    def __delitem__(self, *args):
        """
        __delitem__(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::difference_type i)
        __delitem__(vectoritkSpatialObjectPoint2 self, PySliceObject * slice)
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___delitem__(self, *args)


    def __getitem__(self, *args):
        """
        __getitem__(vectoritkSpatialObjectPoint2 self, PySliceObject * slice) -> vectoritkSpatialObjectPoint2
        __getitem__(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::difference_type i) -> itkSpatialObjectPoint2
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___getitem__(self, *args)


    def __setitem__(self, *args):
        """
        __setitem__(vectoritkSpatialObjectPoint2 self, PySliceObject * slice, vectoritkSpatialObjectPoint2 v)
        __setitem__(vectoritkSpatialObjectPoint2 self, PySliceObject * slice)
        __setitem__(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::difference_type i, itkSpatialObjectPoint2 x)
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___setitem__(self, *args)


    def pop(self):
        """pop(vectoritkSpatialObjectPoint2 self) -> itkSpatialObjectPoint2"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_pop(self)


    def append(self, x):
        """append(vectoritkSpatialObjectPoint2 self, itkSpatialObjectPoint2 x)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_append(self, x)


    def empty(self):
        """empty(vectoritkSpatialObjectPoint2 self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_empty(self)


    def size(self):
        """size(vectoritkSpatialObjectPoint2 self) -> std::vector< itkSpatialObjectPoint2 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_size(self)


    def swap(self, v):
        """swap(vectoritkSpatialObjectPoint2 self, vectoritkSpatialObjectPoint2 v)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_swap(self, v)


    def begin(self):
        """begin(vectoritkSpatialObjectPoint2 self) -> std::vector< itkSpatialObjectPoint2 >::iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_begin(self)


    def end(self):
        """end(vectoritkSpatialObjectPoint2 self) -> std::vector< itkSpatialObjectPoint2 >::iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_end(self)


    def rbegin(self):
        """rbegin(vectoritkSpatialObjectPoint2 self) -> std::vector< itkSpatialObjectPoint2 >::reverse_iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_rbegin(self)


    def rend(self):
        """rend(vectoritkSpatialObjectPoint2 self) -> std::vector< itkSpatialObjectPoint2 >::reverse_iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_rend(self)


    def clear(self):
        """clear(vectoritkSpatialObjectPoint2 self)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_clear(self)


    def get_allocator(self):
        """get_allocator(vectoritkSpatialObjectPoint2 self) -> std::vector< itkSpatialObjectPoint2 >::allocator_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_get_allocator(self)


    def pop_back(self):
        """pop_back(vectoritkSpatialObjectPoint2 self)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_pop_back(self)


    def erase(self, *args):
        """
        erase(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::iterator pos) -> std::vector< itkSpatialObjectPoint2 >::iterator
        erase(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::iterator first, std::vector< itkSpatialObjectPoint2 >::iterator last) -> std::vector< itkSpatialObjectPoint2 >::iterator
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_erase(self, *args)


    def __init__(self, *args):
        """
        __init__(std::vector<(itkSpatialObjectPoint2)> self) -> vectoritkSpatialObjectPoint2
        __init__(std::vector<(itkSpatialObjectPoint2)> self, vectoritkSpatialObjectPoint2 arg2) -> vectoritkSpatialObjectPoint2
        __init__(std::vector<(itkSpatialObjectPoint2)> self, std::vector< itkSpatialObjectPoint2 >::size_type size) -> vectoritkSpatialObjectPoint2
        __init__(std::vector<(itkSpatialObjectPoint2)> self, std::vector< itkSpatialObjectPoint2 >::size_type size, itkSpatialObjectPoint2 value) -> vectoritkSpatialObjectPoint2
        """
        _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_swiginit(self, _itkSpatialObjectPointPython.new_vectoritkSpatialObjectPoint2(*args))

    def push_back(self, x):
        """push_back(vectoritkSpatialObjectPoint2 self, itkSpatialObjectPoint2 x)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_push_back(self, x)


    def front(self):
        """front(vectoritkSpatialObjectPoint2 self) -> itkSpatialObjectPoint2"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_front(self)


    def back(self):
        """back(vectoritkSpatialObjectPoint2 self) -> itkSpatialObjectPoint2"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_back(self)


    def assign(self, n, x):
        """assign(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::size_type n, itkSpatialObjectPoint2 x)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_assign(self, n, x)


    def resize(self, *args):
        """
        resize(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::size_type new_size)
        resize(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::size_type new_size, itkSpatialObjectPoint2 x)
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_resize(self, *args)


    def insert(self, *args):
        """
        insert(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::iterator pos, itkSpatialObjectPoint2 x) -> std::vector< itkSpatialObjectPoint2 >::iterator
        insert(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::iterator pos, std::vector< itkSpatialObjectPoint2 >::size_type n, itkSpatialObjectPoint2 x)
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_insert(self, *args)


    def reserve(self, n):
        """reserve(vectoritkSpatialObjectPoint2 self, std::vector< itkSpatialObjectPoint2 >::size_type n)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_reserve(self, n)


    def capacity(self):
        """capacity(vectoritkSpatialObjectPoint2 self) -> std::vector< itkSpatialObjectPoint2 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_capacity(self)

    __swig_destroy__ = _itkSpatialObjectPointPython.delete_vectoritkSpatialObjectPoint2
vectoritkSpatialObjectPoint2.iterator = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_iterator, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.__nonzero__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___nonzero__, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.__bool__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___bool__, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.__len__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___len__, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.__getslice__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___getslice__, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.__setslice__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___setslice__, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.__delslice__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___delslice__, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.__delitem__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___delitem__, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.__getitem__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___getitem__, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.__setitem__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2___setitem__, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.pop = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_pop, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.append = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_append, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.empty = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_empty, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.size = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_size, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.swap = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_swap, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.begin = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_begin, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.end = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_end, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.rbegin = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_rbegin, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.rend = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_rend, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.clear = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_clear, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.get_allocator = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_get_allocator, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.pop_back = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_pop_back, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.erase = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_erase, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.push_back = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_push_back, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.front = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_front, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.back = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_back, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.assign = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_assign, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.resize = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_resize, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.insert = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_insert, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.reserve = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_reserve, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2.capacity = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_capacity, None, vectoritkSpatialObjectPoint2)
vectoritkSpatialObjectPoint2_swigregister = _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint2_swigregister
vectoritkSpatialObjectPoint2_swigregister(vectoritkSpatialObjectPoint2)

class vectoritkSpatialObjectPoint3(object):
    """Proxy of C++ std::vector<(itkSpatialObjectPoint3)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def iterator(self):
        """iterator(vectoritkSpatialObjectPoint3 self) -> SwigPyIterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_iterator(self)

    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        """__nonzero__(vectoritkSpatialObjectPoint3 self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___nonzero__(self)


    def __bool__(self):
        """__bool__(vectoritkSpatialObjectPoint3 self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___bool__(self)


    def __len__(self):
        """__len__(vectoritkSpatialObjectPoint3 self) -> std::vector< itkSpatialObjectPoint3 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___len__(self)


    def __getslice__(self, i, j):
        """__getslice__(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::difference_type i, std::vector< itkSpatialObjectPoint3 >::difference_type j) -> vectoritkSpatialObjectPoint3"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___getslice__(self, i, j)


    def __setslice__(self, *args):
        """
        __setslice__(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::difference_type i, std::vector< itkSpatialObjectPoint3 >::difference_type j)
        __setslice__(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::difference_type i, std::vector< itkSpatialObjectPoint3 >::difference_type j, vectoritkSpatialObjectPoint3 v)
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___setslice__(self, *args)


    def __delslice__(self, i, j):
        """__delslice__(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::difference_type i, std::vector< itkSpatialObjectPoint3 >::difference_type j)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___delslice__(self, i, j)


    def __delitem__(self, *args):
        """
        __delitem__(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::difference_type i)
        __delitem__(vectoritkSpatialObjectPoint3 self, PySliceObject * slice)
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___delitem__(self, *args)


    def __getitem__(self, *args):
        """
        __getitem__(vectoritkSpatialObjectPoint3 self, PySliceObject * slice) -> vectoritkSpatialObjectPoint3
        __getitem__(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::difference_type i) -> itkSpatialObjectPoint3
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___getitem__(self, *args)


    def __setitem__(self, *args):
        """
        __setitem__(vectoritkSpatialObjectPoint3 self, PySliceObject * slice, vectoritkSpatialObjectPoint3 v)
        __setitem__(vectoritkSpatialObjectPoint3 self, PySliceObject * slice)
        __setitem__(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::difference_type i, itkSpatialObjectPoint3 x)
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___setitem__(self, *args)


    def pop(self):
        """pop(vectoritkSpatialObjectPoint3 self) -> itkSpatialObjectPoint3"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_pop(self)


    def append(self, x):
        """append(vectoritkSpatialObjectPoint3 self, itkSpatialObjectPoint3 x)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_append(self, x)


    def empty(self):
        """empty(vectoritkSpatialObjectPoint3 self) -> bool"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_empty(self)


    def size(self):
        """size(vectoritkSpatialObjectPoint3 self) -> std::vector< itkSpatialObjectPoint3 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_size(self)


    def swap(self, v):
        """swap(vectoritkSpatialObjectPoint3 self, vectoritkSpatialObjectPoint3 v)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_swap(self, v)


    def begin(self):
        """begin(vectoritkSpatialObjectPoint3 self) -> std::vector< itkSpatialObjectPoint3 >::iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_begin(self)


    def end(self):
        """end(vectoritkSpatialObjectPoint3 self) -> std::vector< itkSpatialObjectPoint3 >::iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_end(self)


    def rbegin(self):
        """rbegin(vectoritkSpatialObjectPoint3 self) -> std::vector< itkSpatialObjectPoint3 >::reverse_iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_rbegin(self)


    def rend(self):
        """rend(vectoritkSpatialObjectPoint3 self) -> std::vector< itkSpatialObjectPoint3 >::reverse_iterator"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_rend(self)


    def clear(self):
        """clear(vectoritkSpatialObjectPoint3 self)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_clear(self)


    def get_allocator(self):
        """get_allocator(vectoritkSpatialObjectPoint3 self) -> std::vector< itkSpatialObjectPoint3 >::allocator_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_get_allocator(self)


    def pop_back(self):
        """pop_back(vectoritkSpatialObjectPoint3 self)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_pop_back(self)


    def erase(self, *args):
        """
        erase(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::iterator pos) -> std::vector< itkSpatialObjectPoint3 >::iterator
        erase(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::iterator first, std::vector< itkSpatialObjectPoint3 >::iterator last) -> std::vector< itkSpatialObjectPoint3 >::iterator
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_erase(self, *args)


    def __init__(self, *args):
        """
        __init__(std::vector<(itkSpatialObjectPoint3)> self) -> vectoritkSpatialObjectPoint3
        __init__(std::vector<(itkSpatialObjectPoint3)> self, vectoritkSpatialObjectPoint3 arg2) -> vectoritkSpatialObjectPoint3
        __init__(std::vector<(itkSpatialObjectPoint3)> self, std::vector< itkSpatialObjectPoint3 >::size_type size) -> vectoritkSpatialObjectPoint3
        __init__(std::vector<(itkSpatialObjectPoint3)> self, std::vector< itkSpatialObjectPoint3 >::size_type size, itkSpatialObjectPoint3 value) -> vectoritkSpatialObjectPoint3
        """
        _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_swiginit(self, _itkSpatialObjectPointPython.new_vectoritkSpatialObjectPoint3(*args))

    def push_back(self, x):
        """push_back(vectoritkSpatialObjectPoint3 self, itkSpatialObjectPoint3 x)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_push_back(self, x)


    def front(self):
        """front(vectoritkSpatialObjectPoint3 self) -> itkSpatialObjectPoint3"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_front(self)


    def back(self):
        """back(vectoritkSpatialObjectPoint3 self) -> itkSpatialObjectPoint3"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_back(self)


    def assign(self, n, x):
        """assign(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::size_type n, itkSpatialObjectPoint3 x)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_assign(self, n, x)


    def resize(self, *args):
        """
        resize(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::size_type new_size)
        resize(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::size_type new_size, itkSpatialObjectPoint3 x)
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_resize(self, *args)


    def insert(self, *args):
        """
        insert(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::iterator pos, itkSpatialObjectPoint3 x) -> std::vector< itkSpatialObjectPoint3 >::iterator
        insert(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::iterator pos, std::vector< itkSpatialObjectPoint3 >::size_type n, itkSpatialObjectPoint3 x)
        """
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_insert(self, *args)


    def reserve(self, n):
        """reserve(vectoritkSpatialObjectPoint3 self, std::vector< itkSpatialObjectPoint3 >::size_type n)"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_reserve(self, n)


    def capacity(self):
        """capacity(vectoritkSpatialObjectPoint3 self) -> std::vector< itkSpatialObjectPoint3 >::size_type"""
        return _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_capacity(self)

    __swig_destroy__ = _itkSpatialObjectPointPython.delete_vectoritkSpatialObjectPoint3
vectoritkSpatialObjectPoint3.iterator = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_iterator, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.__nonzero__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___nonzero__, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.__bool__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___bool__, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.__len__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___len__, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.__getslice__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___getslice__, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.__setslice__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___setslice__, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.__delslice__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___delslice__, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.__delitem__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___delitem__, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.__getitem__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___getitem__, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.__setitem__ = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3___setitem__, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.pop = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_pop, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.append = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_append, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.empty = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_empty, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.size = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_size, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.swap = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_swap, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.begin = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_begin, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.end = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_end, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.rbegin = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_rbegin, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.rend = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_rend, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.clear = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_clear, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.get_allocator = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_get_allocator, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.pop_back = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_pop_back, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.erase = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_erase, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.push_back = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_push_back, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.front = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_front, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.back = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_back, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.assign = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_assign, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.resize = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_resize, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.insert = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_insert, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.reserve = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_reserve, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3.capacity = new_instancemethod(_itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_capacity, None, vectoritkSpatialObjectPoint3)
vectoritkSpatialObjectPoint3_swigregister = _itkSpatialObjectPointPython.vectoritkSpatialObjectPoint3_swigregister
vectoritkSpatialObjectPoint3_swigregister(vectoritkSpatialObjectPoint3)

class itkSpatialObjectPoint2(object):
    """


    Point used for spatial objets.

    This class contains all the functions necessary to define a point

    See:   TubeSpatialObjectPoint SurfaceSpatialObjectPoint

    C++ includes: itkSpatialObjectPoint.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_itkSpatialObjectPoint2

    def GetID(self):
        """
        GetID(itkSpatialObjectPoint2 self) -> int

        Get the SpatialObjectPoint
        Id. 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetID(self)


    def SetID(self, newID):
        """
        SetID(itkSpatialObjectPoint2 self, int const newID)

        Set the SpatialObjectPoint
        Id. 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetID(self, newID)


    def GetPosition(self):
        """
        GetPosition(itkSpatialObjectPoint2 self) -> itkPointD2

        Return a pointer to the
        point object. 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetPosition(self)


    def SetPosition(self, *args):
        """
        SetPosition(itkSpatialObjectPoint2 self, itkPointD2 newX)
        SetPosition(itkSpatialObjectPoint2 self, double const x0, double const x1)
        SetPosition(itkSpatialObjectPoint2 self, double const x0, double const x1, double const x2)

        Set the point object.
        Couldn't use macros for these methods. 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetPosition(self, *args)


    def GetColor(self):
        """
        GetColor(itkSpatialObjectPoint2 self) -> itkRGBAPixelF

        Set/Get color of the point

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetColor(self)


    def SetColor(self, *args):
        """
        SetColor(itkSpatialObjectPoint2 self, itkRGBAPixelF color)
        SetColor(itkSpatialObjectPoint2 self, float r, float g, float b, float a=1)
        SetColor(itkSpatialObjectPoint2 self, float r, float g, float b)
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetColor(self, *args)


    def SetRed(self, r):
        """
        SetRed(itkSpatialObjectPoint2 self, float r)

        Set/Get red color of the
        point 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetRed(self, r)


    def GetRed(self):
        """GetRed(itkSpatialObjectPoint2 self) -> float"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetRed(self)


    def SetGreen(self, g):
        """
        SetGreen(itkSpatialObjectPoint2 self, float g)

        Set/Get Green color of the
        point 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetGreen(self, g)


    def GetGreen(self):
        """GetGreen(itkSpatialObjectPoint2 self) -> float"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetGreen(self)


    def SetBlue(self, b):
        """
        SetBlue(itkSpatialObjectPoint2 self, float b)

        Set/Get blue color of the
        point 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetBlue(self, b)


    def GetBlue(self):
        """GetBlue(itkSpatialObjectPoint2 self) -> float"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetBlue(self)


    def SetAlpha(self, a):
        """
        SetAlpha(itkSpatialObjectPoint2 self, float a)

        Set/Get alpha value of the
        point 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetAlpha(self, a)


    def GetAlpha(self):
        """GetAlpha(itkSpatialObjectPoint2 self) -> float"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetAlpha(self)


    def Print(self, os):
        """
        Print(itkSpatialObjectPoint2 self, ostream os)

        PrintSelf method 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2_Print(self, os)


    def __init__(self, *args):
        """
        __init__(itkSpatialObjectPoint2 self) -> itkSpatialObjectPoint2
        __init__(itkSpatialObjectPoint2 self, itkSpatialObjectPoint2 arg0) -> itkSpatialObjectPoint2



        Point used for spatial objets.

        This class contains all the functions necessary to define a point

        See:   TubeSpatialObjectPoint SurfaceSpatialObjectPoint

        C++ includes: itkSpatialObjectPoint.h 
        """
        _itkSpatialObjectPointPython.itkSpatialObjectPoint2_swiginit(self, _itkSpatialObjectPointPython.new_itkSpatialObjectPoint2(*args))

    def __str__(self):
        """__str__(itkSpatialObjectPoint2 self) -> std::string"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint2___str__(self)

itkSpatialObjectPoint2.GetID = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetID, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.SetID = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetID, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.GetPosition = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetPosition, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.SetPosition = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetPosition, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.GetColor = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetColor, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.SetColor = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetColor, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.SetRed = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetRed, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.GetRed = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetRed, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.SetGreen = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetGreen, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.GetGreen = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetGreen, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.SetBlue = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetBlue, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.GetBlue = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetBlue, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.SetAlpha = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_SetAlpha, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.GetAlpha = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_GetAlpha, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.Print = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2_Print, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2.__str__ = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint2___str__, None, itkSpatialObjectPoint2)
itkSpatialObjectPoint2_swigregister = _itkSpatialObjectPointPython.itkSpatialObjectPoint2_swigregister
itkSpatialObjectPoint2_swigregister(itkSpatialObjectPoint2)

class itkSpatialObjectPoint3(object):
    """


    Point used for spatial objets.

    This class contains all the functions necessary to define a point

    See:   TubeSpatialObjectPoint SurfaceSpatialObjectPoint

    C++ includes: itkSpatialObjectPoint.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSpatialObjectPointPython.delete_itkSpatialObjectPoint3

    def GetID(self):
        """
        GetID(itkSpatialObjectPoint3 self) -> int

        Get the SpatialObjectPoint
        Id. 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetID(self)


    def SetID(self, newID):
        """
        SetID(itkSpatialObjectPoint3 self, int const newID)

        Set the SpatialObjectPoint
        Id. 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetID(self, newID)


    def GetPosition(self):
        """
        GetPosition(itkSpatialObjectPoint3 self) -> itkPointD3

        Return a pointer to the
        point object. 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetPosition(self)


    def SetPosition(self, *args):
        """
        SetPosition(itkSpatialObjectPoint3 self, itkPointD3 newX)
        SetPosition(itkSpatialObjectPoint3 self, double const x0, double const x1)
        SetPosition(itkSpatialObjectPoint3 self, double const x0, double const x1, double const x2)

        Set the point object.
        Couldn't use macros for these methods. 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetPosition(self, *args)


    def GetColor(self):
        """
        GetColor(itkSpatialObjectPoint3 self) -> itkRGBAPixelF

        Set/Get color of the point

        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetColor(self)


    def SetColor(self, *args):
        """
        SetColor(itkSpatialObjectPoint3 self, itkRGBAPixelF color)
        SetColor(itkSpatialObjectPoint3 self, float r, float g, float b, float a=1)
        SetColor(itkSpatialObjectPoint3 self, float r, float g, float b)
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetColor(self, *args)


    def SetRed(self, r):
        """
        SetRed(itkSpatialObjectPoint3 self, float r)

        Set/Get red color of the
        point 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetRed(self, r)


    def GetRed(self):
        """GetRed(itkSpatialObjectPoint3 self) -> float"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetRed(self)


    def SetGreen(self, g):
        """
        SetGreen(itkSpatialObjectPoint3 self, float g)

        Set/Get Green color of the
        point 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetGreen(self, g)


    def GetGreen(self):
        """GetGreen(itkSpatialObjectPoint3 self) -> float"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetGreen(self)


    def SetBlue(self, b):
        """
        SetBlue(itkSpatialObjectPoint3 self, float b)

        Set/Get blue color of the
        point 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetBlue(self, b)


    def GetBlue(self):
        """GetBlue(itkSpatialObjectPoint3 self) -> float"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetBlue(self)


    def SetAlpha(self, a):
        """
        SetAlpha(itkSpatialObjectPoint3 self, float a)

        Set/Get alpha value of the
        point 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetAlpha(self, a)


    def GetAlpha(self):
        """GetAlpha(itkSpatialObjectPoint3 self) -> float"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetAlpha(self)


    def Print(self, os):
        """
        Print(itkSpatialObjectPoint3 self, ostream os)

        PrintSelf method 
        """
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3_Print(self, os)


    def __init__(self, *args):
        """
        __init__(itkSpatialObjectPoint3 self) -> itkSpatialObjectPoint3
        __init__(itkSpatialObjectPoint3 self, itkSpatialObjectPoint3 arg0) -> itkSpatialObjectPoint3



        Point used for spatial objets.

        This class contains all the functions necessary to define a point

        See:   TubeSpatialObjectPoint SurfaceSpatialObjectPoint

        C++ includes: itkSpatialObjectPoint.h 
        """
        _itkSpatialObjectPointPython.itkSpatialObjectPoint3_swiginit(self, _itkSpatialObjectPointPython.new_itkSpatialObjectPoint3(*args))

    def __str__(self):
        """__str__(itkSpatialObjectPoint3 self) -> std::string"""
        return _itkSpatialObjectPointPython.itkSpatialObjectPoint3___str__(self)

itkSpatialObjectPoint3.GetID = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetID, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.SetID = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetID, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.GetPosition = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetPosition, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.SetPosition = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetPosition, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.GetColor = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetColor, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.SetColor = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetColor, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.SetRed = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetRed, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.GetRed = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetRed, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.SetGreen = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetGreen, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.GetGreen = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetGreen, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.SetBlue = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetBlue, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.GetBlue = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetBlue, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.SetAlpha = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_SetAlpha, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.GetAlpha = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_GetAlpha, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.Print = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3_Print, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3.__str__ = new_instancemethod(_itkSpatialObjectPointPython.itkSpatialObjectPoint3___str__, None, itkSpatialObjectPoint3)
itkSpatialObjectPoint3_swigregister = _itkSpatialObjectPointPython.itkSpatialObjectPoint3_swigregister
itkSpatialObjectPoint3_swigregister(itkSpatialObjectPoint3)



