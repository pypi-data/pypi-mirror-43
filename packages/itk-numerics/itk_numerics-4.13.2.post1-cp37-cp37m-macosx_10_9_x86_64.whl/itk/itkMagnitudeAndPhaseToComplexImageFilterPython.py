# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (3, 0, 0):
    new_instancemethod = lambda func, inst, cls: _itkMagnitudeAndPhaseToComplexImageFilterPython.SWIG_PyInstanceMethod_New(func)
else:
    from new import instancemethod as new_instancemethod
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_itkMagnitudeAndPhaseToComplexImageFilterPython', [dirname(__file__)])
        except ImportError:
            import _itkMagnitudeAndPhaseToComplexImageFilterPython
            return _itkMagnitudeAndPhaseToComplexImageFilterPython
        if fp is not None:
            try:
                _mod = imp.load_module('_itkMagnitudeAndPhaseToComplexImageFilterPython', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _itkMagnitudeAndPhaseToComplexImageFilterPython = swig_import_helper()
    del swig_import_helper
else:
    import _itkMagnitudeAndPhaseToComplexImageFilterPython
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr


import itkInPlaceImageFilterBPython
import itkImageToImageFilterBPython
import itkVectorImagePython
import itkIndexPython
import itkOffsetPython
import itkSizePython
import pyBasePython
import itkVariableLengthVectorPython
import stdcomplexPython
import ITKCommonBasePython
import itkImagePython
import itkRGBPixelPython
import itkFixedArrayPython
import itkPointPython
import vnl_vector_refPython
import vnl_vectorPython
import vnl_matrixPython
import itkVectorPython
import itkImageRegionPython
import itkMatrixPython
import itkCovariantVectorPython
import vnl_matrix_fixedPython
import itkSymmetricSecondRankTensorPython
import itkRGBAPixelPython
import itkImageSourcePython
import itkImageSourceCommonPython
import itkImageToImageFilterCommonPython
import itkSimpleDataObjectDecoratorPython
import itkArrayPython

def itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_New():
  return itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3.New()


def itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_New():
  return itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.New()


def itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_New():
  return itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2.New()


def itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_New():
  return itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.New()

class itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF2ICF2):
    """Proxy of C++ itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_Pointer":
        """__New_orig__() -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_Pointer"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_Pointer":
        """Clone(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self) -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_Pointer"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_Clone(self)


    def SetInput1(self, *args) -> "void":
        """
        SetInput1(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self, itkImageF2 image1)
        SetInput1(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self, itkSimpleDataObjectDecoratorF input1)
        SetInput1(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self, float const & input1)
        """
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1: 'float const &') -> "void":
        """SetConstant1(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self, float const & input1)"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetConstant1(self, input1)


    def GetConstant1(self) -> "float const &":
        """GetConstant1(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self) -> float const &"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_GetConstant1(self)


    def SetInput2(self, *args) -> "void":
        """
        SetInput2(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self, itkImageF2 image2)
        SetInput2(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self, float const & input2)
        """
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2: 'float const &') -> "void":
        """SetConstant2(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self, float const & input2)"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct: 'float') -> "void":
        """SetConstant(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self, float ct)"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetConstant(self, ct)


    def GetConstant(self) -> "float const &":
        """GetConstant(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self) -> float const &"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_GetConstant(self)


    def GetConstant2(self) -> "float const &":
        """GetConstant2(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self) -> float const &"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_GetConstant2(self)


    def GetFunctor(self, *args) -> "itk::Functor::MagnitudeAndPhaseToComplex< float,float,float > const &":
        """
        GetFunctor(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self) -> itk::Functor::MagnitudeAndPhaseToComplex< float,float,float >
        GetFunctor(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self) -> itk::Functor::MagnitudeAndPhaseToComplex< float,float,float > const &
        """
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::MagnitudeAndPhaseToComplex< float,float,float > const &') -> "void":
        """SetFunctor(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self, itk::Functor::MagnitudeAndPhaseToComplex< float,float,float > const & functor)"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMagnitudeAndPhaseToComplexImageFilterPython.delete_itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass

    def cast(obj: 'itkLightObject') -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass *":
        """cast(itkLightObject obj) -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass *":
        """GetPointer(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass self) -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass

        Create a new object of the class itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.Clone = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_Clone, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.SetInput1 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetInput1, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.SetConstant1 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetConstant1, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.GetConstant1 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_GetConstant1, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.SetInput2 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetInput2, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.SetConstant2 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetConstant2, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.SetConstant = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetConstant, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.GetConstant = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_GetConstant, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.GetConstant2 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_GetConstant2, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.GetFunctor = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_GetFunctor, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.SetFunctor = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_SetFunctor, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass.GetPointer = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_GetPointer, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_swigregister = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_swigregister
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_swigregister(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass)

def itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass___New_orig__() -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_Pointer":
    """itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass___New_orig__() -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_Pointer"""
    return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass___New_orig__()

def itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_cast(obj: 'itkLightObject') -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass *":
    """itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_cast(itkLightObject obj) -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass"""
    return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass_cast(obj)

class itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass(itkInPlaceImageFilterBPython.itkInPlaceImageFilterIF3ICF3):
    """Proxy of C++ itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_Pointer":
        """__New_orig__() -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_Pointer"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_Pointer":
        """Clone(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self) -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_Pointer"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_Clone(self)


    def SetInput1(self, *args) -> "void":
        """
        SetInput1(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self, itkImageF3 image1)
        SetInput1(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self, itkSimpleDataObjectDecoratorF input1)
        SetInput1(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self, float const & input1)
        """
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetInput1(self, *args)


    def SetConstant1(self, input1: 'float const &') -> "void":
        """SetConstant1(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self, float const & input1)"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetConstant1(self, input1)


    def GetConstant1(self) -> "float const &":
        """GetConstant1(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self) -> float const &"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_GetConstant1(self)


    def SetInput2(self, *args) -> "void":
        """
        SetInput2(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self, itkImageF3 image2)
        SetInput2(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self, itkSimpleDataObjectDecoratorF input2)
        SetInput2(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self, float const & input2)
        """
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetInput2(self, *args)


    def SetConstant2(self, input2: 'float const &') -> "void":
        """SetConstant2(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self, float const & input2)"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetConstant2(self, input2)


    def SetConstant(self, ct: 'float') -> "void":
        """SetConstant(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self, float ct)"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetConstant(self, ct)


    def GetConstant(self) -> "float const &":
        """GetConstant(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self) -> float const &"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_GetConstant(self)


    def GetConstant2(self) -> "float const &":
        """GetConstant2(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self) -> float const &"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_GetConstant2(self)


    def GetFunctor(self, *args) -> "itk::Functor::MagnitudeAndPhaseToComplex< float,float,float > const &":
        """
        GetFunctor(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self) -> itk::Functor::MagnitudeAndPhaseToComplex< float,float,float >
        GetFunctor(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self) -> itk::Functor::MagnitudeAndPhaseToComplex< float,float,float > const &
        """
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_GetFunctor(self, *args)


    def SetFunctor(self, functor: 'itk::Functor::MagnitudeAndPhaseToComplex< float,float,float > const &') -> "void":
        """SetFunctor(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self, itk::Functor::MagnitudeAndPhaseToComplex< float,float,float > const & functor)"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetFunctor(self, functor)

    SameDimensionCheck1 = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SameDimensionCheck1
    SameDimensionCheck2 = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SameDimensionCheck2
    __swig_destroy__ = _itkMagnitudeAndPhaseToComplexImageFilterPython.delete_itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass

    def cast(obj: 'itkLightObject') -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass *":
        """cast(itkLightObject obj) -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass *":
        """GetPointer(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass self) -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass

        Create a new object of the class itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.Clone = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_Clone, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.SetInput1 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetInput1, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.SetConstant1 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetConstant1, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.GetConstant1 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_GetConstant1, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.SetInput2 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetInput2, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.SetConstant2 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetConstant2, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.SetConstant = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetConstant, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.GetConstant = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_GetConstant, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.GetConstant2 = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_GetConstant2, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.GetFunctor = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_GetFunctor, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.SetFunctor = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_SetFunctor, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass.GetPointer = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_GetPointer, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_swigregister = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_swigregister
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_swigregister(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass)

def itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass___New_orig__() -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_Pointer":
    """itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass___New_orig__() -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_Pointer"""
    return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass___New_orig__()

def itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_cast(obj: 'itkLightObject') -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass *":
    """itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_cast(itkLightObject obj) -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass"""
    return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass_cast(obj)

class itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Superclass):
    """


    Implements pixel-wise conversion of magnitude and phase data into
    complex voxels.

    This filter is parametrized over the types of the two input images and
    the type of the output image.

    The filter expect all images to have the same dimension (e.g. all 2D,
    or all 3D, or all ND)

    C++ includes: itkMagnitudeAndPhaseToComplexImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Pointer":
        """__New_orig__() -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Pointer"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Pointer":
        """Clone(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2 self) -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Pointer"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Clone(self)

    Input1ConvertibleToDoubleCheck = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Input1ConvertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Input2ConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkMagnitudeAndPhaseToComplexImageFilterPython.delete_itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2

    def cast(obj: 'itkLightObject') -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2 *":
        """cast(itkLightObject obj) -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2 *":
        """GetPointer(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2 self) -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2

        Create a new object of the class itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2.Clone = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Clone, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2.GetPointer = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_GetPointer, None, itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2)
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_swigregister = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_swigregister
itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_swigregister(itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2)

def itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2___New_orig__() -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Pointer":
    """itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2___New_orig__() -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_Pointer"""
    return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2___New_orig__()

def itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_cast(obj: 'itkLightObject') -> "itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2 *":
    """itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_cast(itkLightObject obj) -> itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2"""
    return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF2IF2ICF2_cast(obj)

class itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Superclass):
    """


    Implements pixel-wise conversion of magnitude and phase data into
    complex voxels.

    This filter is parametrized over the types of the two input images and
    the type of the output image.

    The filter expect all images to have the same dimension (e.g. all 2D,
    or all 3D, or all ND)

    C++ includes: itkMagnitudeAndPhaseToComplexImageFilter.h 
    """

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def __New_orig__() -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Pointer":
        """__New_orig__() -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Pointer"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3___New_orig__()

    __New_orig__ = staticmethod(__New_orig__)

    def Clone(self) -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Pointer":
        """Clone(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3 self) -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Pointer"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Clone(self)

    Input1ConvertibleToDoubleCheck = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Input1ConvertibleToDoubleCheck
    Input2ConvertibleToDoubleCheck = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Input2ConvertibleToDoubleCheck
    DoubleConvertibleToOutputCheck = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_DoubleConvertibleToOutputCheck
    __swig_destroy__ = _itkMagnitudeAndPhaseToComplexImageFilterPython.delete_itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3

    def cast(obj: 'itkLightObject') -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3 *":
        """cast(itkLightObject obj) -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_cast(obj)

    cast = staticmethod(cast)

    def GetPointer(self) -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3 *":
        """GetPointer(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3 self) -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3"""
        return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_GetPointer(self)


    def New(*args, **kargs):
        """New() -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3

        Create a new object of the class itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3.New( reader, Threshold=10 )

        is (most of the time) equivalent to:

          obj = itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3.New()
          obj.SetInput( 0, reader.GetOutput() )
          obj.SetThreshold( 10 )
        """
        obj = itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3.__New_orig__()
        import itkTemplate
        itkTemplate.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)

itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3.Clone = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Clone, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3.GetPointer = new_instancemethod(_itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_GetPointer, None, itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3)
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_swigregister = _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_swigregister
itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_swigregister(itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3)

def itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3___New_orig__() -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Pointer":
    """itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3___New_orig__() -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_Pointer"""
    return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3___New_orig__()

def itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_cast(obj: 'itkLightObject') -> "itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3 *":
    """itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_cast(itkLightObject obj) -> itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3"""
    return _itkMagnitudeAndPhaseToComplexImageFilterPython.itkMagnitudeAndPhaseToComplexImageFilterIF3IF3ICF3_cast(obj)



