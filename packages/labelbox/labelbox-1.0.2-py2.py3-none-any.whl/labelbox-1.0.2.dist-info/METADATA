Metadata-Version: 2.1
Name: labelbox
Version: 1.0.2
Summary: A python library for interacting with labelbox.com
Home-page: https://github.com/Labelbox/labelbox-python
Author: Feynman Liang
Author-email: feynman@labelbox.com
License: Apache 2.0
Platform: any
Classifier: Development Status :: 2 - Pre-Alpha
Classifier: Topic :: Utilities
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Environment :: Console
Classifier: Topic :: Utilities
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: Unix
Classifier: Operating System :: MacOS
Classifier: Operating System :: Microsoft :: Windows
Description-Content-Type: text/markdown
Requires-Dist: jinja2
Requires-Dist: pillow
Requires-Dist: rasterio
Requires-Dist: requests
Requires-Dist: shapely
Requires-Dist: simplification
Provides-Extra: docs
Requires-Dist: mypy ; extra == 'docs'
Requires-Dist: sphinx ; extra == 'docs'
Requires-Dist: sphinxcontrib-napolean ; extra == 'docs'
Provides-Extra: testing
Requires-Dist: mypy ; extra == 'testing'
Requires-Dist: numpy ; extra == 'testing'
Requires-Dist: pylint ; extra == 'testing'
Requires-Dist: pytest ; extra == 'testing'
Requires-Dist: pytest-cov ; extra == 'testing'
Requires-Dist: tox ; extra == 'testing'
Requires-Dist: xmltodict ; extra == 'testing'

# labelbox-python

[![CircleCI](https://circleci.com/gh/Labelbox/labelbox-python.svg?style=svg)](https://circleci.com/gh/Labelbox/labelbox-python)
[![Documentation Status](https://readthedocs.org/projects/labelbox/badge/?version=latest)](https://labelbox.readthedocs.io/en/latest/?badge=latest)

Python libraries for interacting with [Labelbox](https://labelbox.com/).

## Developing

Always consult `.circleci/config.yml` to make sure your dev environment matches
up with the current testing environment.

We use Python 3.6.4 and `pipenv` to manage dependencies.

To get set up:
```sh
pipenv sync --dev
```

To run tests and the linter
```sh
pipenv run tox
```

## Releasing

```sh
pipenv run tox -e release-test
```

Check https://test.pypi.org/project/labelbox/ and if it looks good

```sh
pipenv run tox -e release
```

To generate a `requirements.txt` for usage outside of `pipenv`

```sh
pipenv lock -r > requirements.txt
```


