"""
Autogenerated file
DO NOT EDIT.
CONTENT WILL BE OVERWRITTEN!

WARNING: Do not import this file directly!
"""
import typing

from dash_component_system import (
    DashComponent, UNDEFINED, Undefined, ComponentProp
)


class Store(DashComponent):
    """
    Easily keep data on the client side with this component. The data is not
    inserted in the DOM. Data can be in memory, localStorage or
    sessionStorage. The data will be kept with the id as key.
    """
    _namespace = 'dash_core_components'
    _typename = 'Store'
    available_wildcard_properties = [

    ]
    id = ComponentProp('id', UNDEFINED, True)
    storage_type = ComponentProp('storage_type', "'memory'", False)
    data = ComponentProp('data', UNDEFINED, False)
    clear_data = ComponentProp('clear_data', False, False)
    modified_timestamp = ComponentProp('modified_timestamp', -1, False)

    def __init__(
        self,
        id,
        storage_type="'memory'",
        data=UNDEFINED,
        clear_data=False,
        modified_timestamp=-1,
        **kwargs
    ):
        # type: (typing.Union[str, Undefined], typing.Union[typing.Any, Undefined], typing.Union[typing.Union[typing.Dict,typing.List,typing.Union[float, int],str,bool], Undefined], typing.Union[bool, Undefined], typing.Union[typing.Union[float, int], Undefined], typing.Any) -> None # noqa: E501
        """
        :param id: The key of the storage.
        :param storage_type: The type of the web storage.  memory: only
            kept in memory, reset on page refresh. local:
            window.localStorage, data is kept after the
            browser quit. session: window.sessionStorage,
            data is cleared once the browser quit.
            (Possible values: 'local', 'session',
            'memory')
        :param data: The stored data for the id.
        :param clear_data: Set to true to remove the data contained in
            `data_key`.
        :param modified_timestamp: The last time the storage was modified.
        """
        kws = {
            k: v for k, v in locals().items() if k not in ('self', 'kwargs')
        }
        kws.update(kwargs)
        DashComponent.__init__(self, **kws)
