"""
Autogenerated file
DO NOT EDIT.
CONTENT WILL BE OVERWRITTEN!

WARNING: Do not import this file directly!
"""
import typing

from dash_component_system import (
    DashComponent, UNDEFINED, Undefined, ComponentProp
)


class Location(DashComponent):
    """
    Update and track the current window.location object through the
    window.history state. Use in conjunction with the
    `dash_core_components.Link` component to make apps with multiple pages.
    """
    _namespace = 'dash_core_components'
    _typename = 'Location'
    available_wildcard_properties = [

    ]
    id = ComponentProp('id', UNDEFINED, True)
    pathname = ComponentProp('pathname', UNDEFINED, False)
    search = ComponentProp('search', UNDEFINED, False)
    hash = ComponentProp('hash', UNDEFINED, False)
    href = ComponentProp('href', UNDEFINED, False)
    refresh = ComponentProp('refresh', True, False)

    def __init__(
        self,
        id,
        pathname=UNDEFINED,
        search=UNDEFINED,
        hash=UNDEFINED,
        href=UNDEFINED,
        refresh=True,
        **kwargs
    ):
        # type: (typing.Union[str, Undefined], typing.Union[str, Undefined], typing.Union[str, Undefined], typing.Union[str, Undefined], typing.Union[str, Undefined], typing.Union[bool, Undefined], typing.Any) -> None # noqa: E501
        """
        :param id:
        :param pathname: pathname in window.location - e.g.,
            "/my/full/pathname"
        :param search: search in window.location - e.g., "?myargument=1"
        :param hash: hash in window.location - e.g., "#myhash"
        :param href: href in window.location - e.g.,
            "/my/full/pathname?myargument=1#myhash"
        :param refresh: Refresh the page when the location is updated?
        """
        kws = {
            k: v for k, v in locals().items() if k not in ('self', 'kwargs')
        }
        kws.update(kwargs)
        DashComponent.__init__(self, **kws)
