# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
language: c

os:
    - linux

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:

        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - TOX_CMD='tox --'
        - TOX_ARGS='--remote-data'
        - EVENT_TYPE='pull_request push'
        - SETUP_XVFB=True


    matrix:
        # Make sure that installation does not fail
        - TOXENV='py37' TOX_CMD='tox --notest' TOX_ARGS=''
        # Make sure README will display properly on pypi
        - TOXENV='checkdocs'
        # Run a test with stable dependencies
        - TOXENV='py36-test'
        - TOXENV='py37-test'


matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:
        # Do a coverage test
        # Skip for now. Eventually we will want to use codecov
        #- env: TOXENV='coverage' TOX_ARGS=''

        # Perform a sanity check of packaging using twine
        - env: TOXENV='twine' TOX_ARGS=''

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - env: TOXENV='docbuild' TOX_ARGS=''

        # Do a code style check
        - env: TOXENV='style' TOX_ARGS=''

        # Try MacOS X and Windows
        - os: osx
          env: TOXENV='py37-test'

        - os: windows
          env: TOXENV='py37-test'

        - os: linux
          env: TOXENV='py37-astrodev-test'
               EVENT_TYPE='pull_request push cron'

        - os: linux
          env: TOXENV='py37-numpydev-test'
               EVENT_TYPE='pull_request push cron'

        # Test with glue installed
        - os: linux
          env: TOXENV='py37-glue-test'

    allow_failures:
        - os: windows
          env: TOXENV='py37-test'
        - env: TOXENV='py37-astrodev-test'
               EVENT_TYPE='pull_request push cron'
        - env: TOXENV='py37-numpydev-test'
               EVENT_TYPE='pull_request push cron'

install:

    - git clone --depth 1 git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh
    - pip install tox tox-conda

script:
    - conda info
    - $TOX_CMD $TOX_ARGS
    - if [[ $TOXENV == *-test ]]; then
        JWST_DATA_TEST=1 $TOX_CMD specviz/tests/test_load_data.py $TOX_ARGS;
      fi
